ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"LCD_Timer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	LCD_Timer_initVar
  19              		.bss
  20              		.type	LCD_Timer_initVar, %object
  21              		.size	LCD_Timer_initVar, 1
  22              	LCD_Timer_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.LCD_Timer_Init,"ax",%progbits
  25              		.align	2
  26              		.global	LCD_Timer_Init
  27              		.thumb
  28              		.thumb_func
  29              		.type	LCD_Timer_Init, %function
  30              	LCD_Timer_Init:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\LCD_Timer.c"
   1:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/LCD_Timer.c **** * File Name: LCD_Timer.c
   3:.\Generated_Source\PSoC5/LCD_Timer.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/LCD_Timer.c **** *
   5:.\Generated_Source\PSoC5/LCD_Timer.c **** * Description:
   6:.\Generated_Source\PSoC5/LCD_Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/LCD_Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/LCD_Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/LCD_Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/LCD_Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/LCD_Timer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/LCD_Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/LCD_Timer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/LCD_Timer.c **** *
  15:.\Generated_Source\PSoC5/LCD_Timer.c **** * Note:
  16:.\Generated_Source\PSoC5/LCD_Timer.c **** *
  17:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/LCD_Timer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/LCD_Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/LCD_Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/LCD_Timer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  24:.\Generated_Source\PSoC5/LCD_Timer.c **** #include "LCD_Timer.h"
  25:.\Generated_Source\PSoC5/LCD_Timer.c **** 
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 2


  26:.\Generated_Source\PSoC5/LCD_Timer.c **** uint8 LCD_Timer_initVar = 0u;
  27:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  28:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  29:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_Init
  31:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
  32:.\Generated_Source\PSoC5/LCD_Timer.c **** *
  33:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
  34:.\Generated_Source\PSoC5/LCD_Timer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/LCD_Timer.c **** *
  36:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
  37:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
  38:.\Generated_Source\PSoC5/LCD_Timer.c **** *
  39:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
  40:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
  41:.\Generated_Source\PSoC5/LCD_Timer.c **** *
  42:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_Init(void) 
  44:.\Generated_Source\PSoC5/LCD_Timer.c **** {
  33              		.loc 1 44 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 82B0     		sub	sp, sp, #8
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  45:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if(!LCD_Timer_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/LCD_Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/LCD_Timer.c ****             uint8 LCD_Timer_interruptState;
  48:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  50:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if (LCD_Timer_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CONTROL &= LCD_Timer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  54:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/LCD_Timer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/LCD_Timer.c ****             LCD_Timer_CONTROL2 &= ((uint8)(~LCD_Timer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/LCD_Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  59:.\Generated_Source\PSoC5/LCD_Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/LCD_Timer.c ****             LCD_Timer_CONTROL3 &= ((uint8)(~LCD_Timer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/LCD_Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  63:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/LCD_Timer.c ****         #if (LCD_Timer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/LCD_Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/LCD_Timer.c ****             LCD_Timer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/LCD_Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  69:.\Generated_Source\PSoC5/LCD_Timer.c ****         #if (LCD_Timer_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/LCD_Timer.c ****             #if (CY_PSOC5A)
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 3


  71:.\Generated_Source\PSoC5/LCD_Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/LCD_Timer.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/LCD_Timer.c ****                 LCD_Timer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/LCD_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  76:.\Generated_Source\PSoC5/LCD_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/LCD_Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/LCD_Timer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/LCD_Timer.c ****                 LCD_Timer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/LCD_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  82:.\Generated_Source\PSoC5/LCD_Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  84:.\Generated_Source\PSoC5/LCD_Timer.c ****         #if (LCD_Timer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/LCD_Timer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/LCD_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/LCD_Timer.c ****                 LCD_Timer_CONTROL2 |= LCD_Timer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/LCD_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  90:.\Generated_Source\PSoC5/LCD_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/LCD_Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/LCD_Timer.c ****                 LCD_Timer_CONTROL3 &= ((uint8)(~LCD_Timer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/LCD_Timer.c ****                 LCD_Timer_CONTROL3 |= LCD_Timer_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  95:.\Generated_Source\PSoC5/LCD_Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/LCD_Timer.c ****                 LCD_Timer_CONTROL3 &= ((uint8)(~LCD_Timer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/LCD_Timer.c ****                 LCD_Timer_CONTROL3 |= LCD_Timer_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/LCD_Timer.c **** 
  99:.\Generated_Source\PSoC5/LCD_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/LCD_Timer.c ****                 LCD_Timer_CONTROL3 |= LCD_Timer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/LCD_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 103:.\Generated_Source\PSoC5/LCD_Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 105:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_RT1 &= ((uint8)(~LCD_Timer_RT1_MASK));
 107:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_RT1 |= LCD_Timer_SYNC;
 108:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 109:.\Generated_Source\PSoC5/LCD_Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_RT1 &= ((uint8)(~LCD_Timer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_RT1 |= LCD_Timer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 113:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CONTROL2 |= LCD_Timer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 117:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/LCD_Timer.c ****     LCD_Timer_WritePeriod(LCD_Timer_INIT_PERIOD);
  45              		.loc 1 118 0
  46 0006 40F2E730 		movw	r0, #999
  47 000a FFF7FEFF 		bl	LCD_Timer_WritePeriod
 119:.\Generated_Source\PSoC5/LCD_Timer.c ****     LCD_Timer_WriteCounter(LCD_Timer_INIT_PERIOD);
  48              		.loc 1 119 0
  49 000e 40F2E730 		movw	r0, #999
  50 0012 FFF7FEFF 		bl	LCD_Timer_WriteCounter
 120:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 121:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if (LCD_Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 4


 122:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CAPTURE_COUNT_CTRL |= LCD_Timer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_SetCaptureCount(LCD_Timer_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 126:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if (!LCD_Timer_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/LCD_Timer.c ****         #if (LCD_Timer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/LCD_Timer.c ****             LCD_Timer_SetCaptureMode(LCD_Timer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/LCD_Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 131:.\Generated_Source\PSoC5/LCD_Timer.c ****         #if (LCD_Timer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/LCD_Timer.c ****             #if (!LCD_Timer_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC5/LCD_Timer.c ****                 if (0u == (LCD_Timer_CONTROL & LCD_Timer__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC5/LCD_Timer.c ****                 {
 135:.\Generated_Source\PSoC5/LCD_Timer.c ****                     LCD_Timer_SetTriggerMode(LCD_Timer_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC5/LCD_Timer.c ****                 }
 137:.\Generated_Source\PSoC5/LCD_Timer.c ****             #endif /* (!LCD_Timer_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC5/LCD_Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 140:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_interruptState = CyEnterCriticalSection();
  51              		.loc 1 142 0
  52 0016 FFF7FEFF 		bl	CyEnterCriticalSection
  53 001a 0346     		mov	r3, r0
  54 001c FB71     		strb	r3, [r7, #7]
 143:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 144:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_STATUS_AUX_CTRL |= LCD_Timer_STATUS_ACTL_INT_EN_MASK;
  55              		.loc 1 145 0
  56 001e 0A4B     		ldr	r3, .L2
  57 0020 094A     		ldr	r2, .L2
  58 0022 1278     		ldrb	r2, [r2]
  59 0024 D2B2     		uxtb	r2, r2
  60 0026 42F01002 		orr	r2, r2, #16
  61 002a D2B2     		uxtb	r2, r2
  62 002c 1A70     		strb	r2, [r3]
 146:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 147:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC5/LCD_Timer.c ****         CyExitCriticalSection(LCD_Timer_interruptState);
  63              		.loc 1 148 0
  64 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  65 0030 1846     		mov	r0, r3
  66 0032 FFF7FEFF 		bl	CyExitCriticalSection
 149:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 150:.\Generated_Source\PSoC5/LCD_Timer.c ****         #if (LCD_Timer_EnableTriggerMode)
 151:.\Generated_Source\PSoC5/LCD_Timer.c ****             LCD_Timer_EnableTrigger();
 152:.\Generated_Source\PSoC5/LCD_Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC5/LCD_Timer.c **** 		
 154:.\Generated_Source\PSoC5/LCD_Timer.c **** 		
 155:.\Generated_Source\PSoC5/LCD_Timer.c ****         #if (LCD_Timer_InterruptOnCaptureCount && !LCD_Timer_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC5/LCD_Timer.c ****             LCD_Timer_SetInterruptCount(LCD_Timer_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC5/LCD_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 159:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_ClearFIFO();
  67              		.loc 1 159 0
  68 0036 FFF7FEFF 		bl	LCD_Timer_ClearFIFO
 160:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* Configure additional features of UDB implementation */
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 5


 161:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 162:.\Generated_Source\PSoC5/LCD_Timer.c ****     LCD_Timer_SetInterruptMode(LCD_Timer_INIT_INTERRUPT_MODE);
  69              		.loc 1 162 0
  70 003a 0120     		movs	r0, #1
  71 003c FFF7FEFF 		bl	LCD_Timer_SetInterruptMode
 163:.\Generated_Source\PSoC5/LCD_Timer.c **** }
  72              		.loc 1 163 0
  73 0040 0837     		adds	r7, r7, #8
  74 0042 BD46     		mov	sp, r7
  75              		@ sp needed
  76 0044 80BD     		pop	{r7, pc}
  77              	.L3:
  78 0046 00BF     		.align	2
  79              	.L2:
  80 0048 95650040 		.word	1073767829
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	LCD_Timer_Init, .-LCD_Timer_Init
  84              		.section	.text.LCD_Timer_Enable,"ax",%progbits
  85              		.align	2
  86              		.global	LCD_Timer_Enable
  87              		.thumb
  88              		.thumb_func
  89              		.type	LCD_Timer_Enable, %function
  90              	LCD_Timer_Enable:
  91              	.LFB1:
 164:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 165:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 166:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_Enable
 168:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 170:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 171:.\Generated_Source\PSoC5/LCD_Timer.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 173:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 174:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 175:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 176:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 177:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 178:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 179:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_Enable(void) 
 181:.\Generated_Source\PSoC5/LCD_Timer.c **** {
  92              		.loc 1 181 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 0
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96              		@ link register save eliminated.
  97 0000 80B4     		push	{r7}
  98              		.cfi_def_cfa_offset 4
  99              		.cfi_offset 7, -4
 100 0002 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
 182:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if (LCD_Timer_UsingFixedFunction)
 184:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_GLOBAL_ENABLE |= LCD_Timer_BLOCK_EN_MASK;
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 6


 185:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_GLOBAL_STBY_ENABLE |= LCD_Timer_BLOCK_STBY_EN_MASK;
 186:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 188:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if (!LCD_Timer_UDB_CONTROL_REG_REMOVED || LCD_Timer_UsingFixedFunction)
 190:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CONTROL |= LCD_Timer_CTRL_ENABLE;
 102              		.loc 1 190 0
 103 0004 054B     		ldr	r3, .L5
 104 0006 054A     		ldr	r2, .L5
 105 0008 1278     		ldrb	r2, [r2]
 106 000a D2B2     		uxtb	r2, r2
 107 000c 62F07F02 		orn	r2, r2, #127
 108 0010 D2B2     		uxtb	r2, r2
 109 0012 1A70     		strb	r2, [r3]
 191:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 110              		.loc 1 192 0
 111 0014 BD46     		mov	sp, r7
 112              		@ sp needed
 113 0016 5DF8047B 		ldr	r7, [sp], #4
 114 001a 7047     		bx	lr
 115              	.L6:
 116              		.align	2
 117              	.L5:
 118 001c 74650040 		.word	1073767796
 119              		.cfi_endproc
 120              	.LFE1:
 121              		.size	LCD_Timer_Enable, .-LCD_Timer_Enable
 122              		.section	.text.LCD_Timer_Start,"ax",%progbits
 123              		.align	2
 124              		.global	LCD_Timer_Start
 125              		.thumb
 126              		.thumb_func
 127              		.type	LCD_Timer_Start, %function
 128              	LCD_Timer_Start:
 129              	.LFB2:
 193:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 194:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 195:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_Start
 197:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 198:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 199:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 200:.\Generated_Source\PSoC5/LCD_Timer.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC5/LCD_Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC5/LCD_Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 204:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 205:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 206:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 207:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 208:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 209:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 210:.\Generated_Source\PSoC5/LCD_Timer.c **** * Global variables:
 211:.\Generated_Source\PSoC5/LCD_Timer.c **** *  LCD_Timer_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC5/LCD_Timer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC5/LCD_Timer.c **** *
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 7


 214:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_Start(void) 
 216:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 130              		.loc 1 216 0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 1, uses_anonymous_args = 0
 134 0000 80B5     		push	{r7, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 7, -8
 137              		.cfi_offset 14, -4
 138 0002 00AF     		add	r7, sp, #0
 139              		.cfi_def_cfa_register 7
 217:.\Generated_Source\PSoC5/LCD_Timer.c ****     if(LCD_Timer_initVar == 0u)
 140              		.loc 1 217 0
 141 0004 054B     		ldr	r3, .L9
 142 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 143 0008 002B     		cmp	r3, #0
 144 000a 04D1     		bne	.L8
 218:.\Generated_Source\PSoC5/LCD_Timer.c ****     {
 219:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_Init();
 145              		.loc 1 219 0
 146 000c FFF7FEFF 		bl	LCD_Timer_Init
 220:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 221:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_initVar = 1u;   /* Clear this bit for Initialization */
 147              		.loc 1 221 0
 148 0010 024B     		ldr	r3, .L9
 149 0012 0122     		movs	r2, #1
 150 0014 1A70     		strb	r2, [r3]
 151              	.L8:
 222:.\Generated_Source\PSoC5/LCD_Timer.c ****     }
 223:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 224:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC5/LCD_Timer.c ****     LCD_Timer_Enable();
 152              		.loc 1 225 0
 153 0016 FFF7FEFF 		bl	LCD_Timer_Enable
 226:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 154              		.loc 1 226 0
 155 001a 80BD     		pop	{r7, pc}
 156              	.L10:
 157              		.align	2
 158              	.L9:
 159 001c 00000000 		.word	LCD_Timer_initVar
 160              		.cfi_endproc
 161              	.LFE2:
 162              		.size	LCD_Timer_Start, .-LCD_Timer_Start
 163              		.section	.text.LCD_Timer_Stop,"ax",%progbits
 164              		.align	2
 165              		.global	LCD_Timer_Stop
 166              		.thumb
 167              		.thumb_func
 168              		.type	LCD_Timer_Stop, %function
 169              	LCD_Timer_Stop:
 170              	.LFB3:
 227:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 228:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 229:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 8


 230:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_Stop
 231:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 232:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 233:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 234:.\Generated_Source\PSoC5/LCD_Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC5/LCD_Timer.c **** *  interrupts.
 236:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 237:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 238:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 239:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 240:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 241:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 242:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 243:.\Generated_Source\PSoC5/LCD_Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC5/LCD_Timer.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 246:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_Stop(void) 
 248:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 171              		.loc 1 248 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176 0000 80B4     		push	{r7}
 177              		.cfi_def_cfa_offset 4
 178              		.cfi_offset 7, -4
 179 0002 00AF     		add	r7, sp, #0
 180              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if(!LCD_Timer_UDB_CONTROL_REG_REMOVED || LCD_Timer_UsingFixedFunction)
 251:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CONTROL &= ((uint8)(~LCD_Timer_CTRL_ENABLE));
 181              		.loc 1 251 0
 182 0004 054B     		ldr	r3, .L12
 183 0006 054A     		ldr	r2, .L12
 184 0008 1278     		ldrb	r2, [r2]
 185 000a D2B2     		uxtb	r2, r2
 186 000c 02F07F02 		and	r2, r2, #127
 187 0010 D2B2     		uxtb	r2, r2
 188 0012 1A70     		strb	r2, [r3]
 252:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 254:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if (LCD_Timer_UsingFixedFunction)
 256:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_GLOBAL_ENABLE &= ((uint8)(~LCD_Timer_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~LCD_Timer_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 189              		.loc 1 259 0
 190 0014 BD46     		mov	sp, r7
 191              		@ sp needed
 192 0016 5DF8047B 		ldr	r7, [sp], #4
 193 001a 7047     		bx	lr
 194              	.L13:
 195              		.align	2
 196              	.L12:
 197 001c 74650040 		.word	1073767796
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 9


 198              		.cfi_endproc
 199              	.LFE3:
 200              		.size	LCD_Timer_Stop, .-LCD_Timer_Stop
 201              		.section	.text.LCD_Timer_SetInterruptMode,"ax",%progbits
 202              		.align	2
 203              		.global	LCD_Timer_SetInterruptMode
 204              		.thumb
 205              		.thumb_func
 206              		.type	LCD_Timer_SetInterruptMode, %function
 207              	LCD_Timer_SetInterruptMode:
 208              	.LFB4:
 260:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 261:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 262:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_SetInterruptMode
 264:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 265:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 266:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 267:.\Generated_Source\PSoC5/LCD_Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC5/LCD_Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC5/LCD_Timer.c **** *  be selected.
 270:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 271:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 272:.\Generated_Source\PSoC5/LCD_Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC5/LCD_Timer.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 275:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 276:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 277:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 278:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 209              		.loc 1 280 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 8
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 214 0000 80B4     		push	{r7}
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 7, -4
 217 0002 83B0     		sub	sp, sp, #12
 218              		.cfi_def_cfa_offset 16
 219 0004 00AF     		add	r7, sp, #0
 220              		.cfi_def_cfa_register 7
 221 0006 0346     		mov	r3, r0
 222 0008 FB71     		strb	r3, [r7, #7]
 281:.\Generated_Source\PSoC5/LCD_Timer.c ****     LCD_Timer_STATUS_MASK = interruptMode;
 223              		.loc 1 281 0
 224 000a 044B     		ldr	r3, .L15
 225 000c FA79     		ldrb	r2, [r7, #7]
 226 000e 1A70     		strb	r2, [r3]
 282:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 227              		.loc 1 282 0
 228 0010 0C37     		adds	r7, r7, #12
 229 0012 BD46     		mov	sp, r7
 230              		@ sp needed
 231 0014 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 10


 232 0018 7047     		bx	lr
 233              	.L16:
 234 001a 00BF     		.align	2
 235              	.L15:
 236 001c 85650040 		.word	1073767813
 237              		.cfi_endproc
 238              	.LFE4:
 239              		.size	LCD_Timer_SetInterruptMode, .-LCD_Timer_SetInterruptMode
 240              		.section	.text.LCD_Timer_SoftwareCapture,"ax",%progbits
 241              		.align	2
 242              		.global	LCD_Timer_SoftwareCapture
 243              		.thumb
 244              		.thumb_func
 245              		.type	LCD_Timer_SoftwareCapture, %function
 246              	LCD_Timer_SoftwareCapture:
 247              	.LFB5:
 283:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 284:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 285:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_SoftwareCapture
 287:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 289:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 290:.\Generated_Source\PSoC5/LCD_Timer.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 292:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 293:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 294:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 295:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 296:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 297:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 298:.\Generated_Source\PSoC5/LCD_Timer.c **** * Side Effects:
 299:.\Generated_Source\PSoC5/LCD_Timer.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 301:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 248              		.loc 1 303 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 253 0000 80B4     		push	{r7}
 254              		.cfi_def_cfa_offset 4
 255              		.cfi_offset 7, -4
 256 0002 00AF     		add	r7, sp, #0
 257              		.cfi_def_cfa_register 7
 304:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if(LCD_Timer_UsingFixedFunction)
 306:.\Generated_Source\PSoC5/LCD_Timer.c ****         (void)CY_GET_REG16(LCD_Timer_COUNTER_LSB_PTR);
 307:.\Generated_Source\PSoC5/LCD_Timer.c ****     #else
 308:.\Generated_Source\PSoC5/LCD_Timer.c ****         (void)CY_GET_REG8(LCD_Timer_COUNTER_LSB_PTR_8BIT);
 258              		.loc 1 308 0
 259 0004 024B     		ldr	r3, .L18
 260 0006 1B78     		ldrb	r3, [r3]
 309:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif/* (LCD_Timer_UsingFixedFunction) */
 310:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* Capture Data is now in the FIFO */
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 11


 311:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 261              		.loc 1 311 0
 262 0008 BD46     		mov	sp, r7
 263              		@ sp needed
 264 000a 5DF8047B 		ldr	r7, [sp], #4
 265 000e 7047     		bx	lr
 266              	.L19:
 267              		.align	2
 268              	.L18:
 269 0010 04650040 		.word	1073767684
 270              		.cfi_endproc
 271              	.LFE5:
 272              		.size	LCD_Timer_SoftwareCapture, .-LCD_Timer_SoftwareCapture
 273              		.section	.text.LCD_Timer_ReadStatusRegister,"ax",%progbits
 274              		.align	2
 275              		.global	LCD_Timer_ReadStatusRegister
 276              		.thumb
 277              		.thumb_func
 278              		.type	LCD_Timer_ReadStatusRegister, %function
 279              	LCD_Timer_ReadStatusRegister:
 280              	.LFB6:
 312:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 313:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 314:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_ReadStatusRegister
 316:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 317:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 318:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 319:.\Generated_Source\PSoC5/LCD_Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC5/LCD_Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC5/LCD_Timer.c **** *  be permuteable.
 322:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 323:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 324:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 325:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 326:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 327:.\Generated_Source\PSoC5/LCD_Timer.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 329:.\Generated_Source\PSoC5/LCD_Timer.c **** * Side Effects:
 330:.\Generated_Source\PSoC5/LCD_Timer.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 332:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC5/LCD_Timer.c **** uint8   LCD_Timer_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 281              		.loc 1 334 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 0
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286 0000 80B4     		push	{r7}
 287              		.cfi_def_cfa_offset 4
 288              		.cfi_offset 7, -4
 289 0002 00AF     		add	r7, sp, #0
 290              		.cfi_def_cfa_register 7
 335:.\Generated_Source\PSoC5/LCD_Timer.c ****     return (LCD_Timer_STATUS);
 291              		.loc 1 335 0
 292 0004 034B     		ldr	r3, .L22
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 12


 293 0006 1B78     		ldrb	r3, [r3]
 294 0008 DBB2     		uxtb	r3, r3
 336:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 295              		.loc 1 336 0
 296 000a 1846     		mov	r0, r3
 297 000c BD46     		mov	sp, r7
 298              		@ sp needed
 299 000e 5DF8047B 		ldr	r7, [sp], #4
 300 0012 7047     		bx	lr
 301              	.L23:
 302              		.align	2
 303              	.L22:
 304 0014 65650040 		.word	1073767781
 305              		.cfi_endproc
 306              	.LFE6:
 307              		.size	LCD_Timer_ReadStatusRegister, .-LCD_Timer_ReadStatusRegister
 308              		.section	.text.LCD_Timer_ReadControlRegister,"ax",%progbits
 309              		.align	2
 310              		.global	LCD_Timer_ReadControlRegister
 311              		.thumb
 312              		.thumb_func
 313              		.type	LCD_Timer_ReadControlRegister, %function
 314              	LCD_Timer_ReadControlRegister:
 315              	.LFB7:
 337:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 338:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 339:.\Generated_Source\PSoC5/LCD_Timer.c **** #if (!LCD_Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 341:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 342:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_ReadControlRegister
 344:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 345:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 346:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 347:.\Generated_Source\PSoC5/LCD_Timer.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 349:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 350:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 351:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 352:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 353:.\Generated_Source\PSoC5/LCD_Timer.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 355:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC5/LCD_Timer.c **** uint8 LCD_Timer_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 316              		.loc 1 357 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 0
 319              		@ frame_needed = 1, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 321 0000 80B4     		push	{r7}
 322              		.cfi_def_cfa_offset 4
 323              		.cfi_offset 7, -4
 324 0002 00AF     		add	r7, sp, #0
 325              		.cfi_def_cfa_register 7
 358:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if (!LCD_Timer_UDB_CONTROL_REG_REMOVED) 
 359:.\Generated_Source\PSoC5/LCD_Timer.c ****         return ((uint8)LCD_Timer_CONTROL);
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 13


 326              		.loc 1 359 0
 327 0004 034B     		ldr	r3, .L26
 328 0006 1B78     		ldrb	r3, [r3]
 329 0008 DBB2     		uxtb	r3, r3
 360:.\Generated_Source\PSoC5/LCD_Timer.c ****     #else
 361:.\Generated_Source\PSoC5/LCD_Timer.c ****         return (0);
 362:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* (!LCD_Timer_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 330              		.loc 1 363 0
 331 000a 1846     		mov	r0, r3
 332 000c BD46     		mov	sp, r7
 333              		@ sp needed
 334 000e 5DF8047B 		ldr	r7, [sp], #4
 335 0012 7047     		bx	lr
 336              	.L27:
 337              		.align	2
 338              	.L26:
 339 0014 74650040 		.word	1073767796
 340              		.cfi_endproc
 341              	.LFE7:
 342              		.size	LCD_Timer_ReadControlRegister, .-LCD_Timer_ReadControlRegister
 343              		.section	.text.LCD_Timer_WriteControlRegister,"ax",%progbits
 344              		.align	2
 345              		.global	LCD_Timer_WriteControlRegister
 346              		.thumb
 347              		.thumb_func
 348              		.type	LCD_Timer_WriteControlRegister, %function
 349              	LCD_Timer_WriteControlRegister:
 350              	.LFB8:
 364:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 365:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 366:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_WriteControlRegister
 368:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 369:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 370:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 371:.\Generated_Source\PSoC5/LCD_Timer.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 373:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 374:.\Generated_Source\PSoC5/LCD_Timer.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 376:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 377:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 378:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_WriteControlRegister(uint8 control) 
 380:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 351              		.loc 1 380 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 8
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356 0000 80B4     		push	{r7}
 357              		.cfi_def_cfa_offset 4
 358              		.cfi_offset 7, -4
 359 0002 83B0     		sub	sp, sp, #12
 360              		.cfi_def_cfa_offset 16
 361 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 14


 362              		.cfi_def_cfa_register 7
 363 0006 0346     		mov	r3, r0
 364 0008 FB71     		strb	r3, [r7, #7]
 381:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if (!LCD_Timer_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CONTROL = control;
 365              		.loc 1 382 0
 366 000a 044B     		ldr	r3, .L29
 367 000c FA79     		ldrb	r2, [r7, #7]
 368 000e 1A70     		strb	r2, [r3]
 383:.\Generated_Source\PSoC5/LCD_Timer.c ****     #else
 384:.\Generated_Source\PSoC5/LCD_Timer.c ****         control = 0u;
 385:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* (!LCD_Timer_UDB_CONTROL_REG_REMOVED) */
 386:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 369              		.loc 1 386 0
 370 0010 0C37     		adds	r7, r7, #12
 371 0012 BD46     		mov	sp, r7
 372              		@ sp needed
 373 0014 5DF8047B 		ldr	r7, [sp], #4
 374 0018 7047     		bx	lr
 375              	.L30:
 376 001a 00BF     		.align	2
 377              	.L29:
 378 001c 74650040 		.word	1073767796
 379              		.cfi_endproc
 380              	.LFE8:
 381              		.size	LCD_Timer_WriteControlRegister, .-LCD_Timer_WriteControlRegister
 382              		.section	.text.LCD_Timer_ReadPeriod,"ax",%progbits
 383              		.align	2
 384              		.global	LCD_Timer_ReadPeriod
 385              		.thumb
 386              		.thumb_func
 387              		.type	LCD_Timer_ReadPeriod, %function
 388              	LCD_Timer_ReadPeriod:
 389              	.LFB9:
 387:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 388:.\Generated_Source\PSoC5/LCD_Timer.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 390:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 391:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_ReadPeriod
 393:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 394:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 395:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 396:.\Generated_Source\PSoC5/LCD_Timer.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 398:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 399:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 400:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 401:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 402:.\Generated_Source\PSoC5/LCD_Timer.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 404:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC5/LCD_Timer.c **** uint16 LCD_Timer_ReadPeriod(void) 
 406:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 390              		.loc 1 406 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 15


 393              		@ frame_needed = 1, uses_anonymous_args = 0
 394              		@ link register save eliminated.
 395 0000 80B4     		push	{r7}
 396              		.cfi_def_cfa_offset 4
 397              		.cfi_offset 7, -4
 398 0002 00AF     		add	r7, sp, #0
 399              		.cfi_def_cfa_register 7
 407:.\Generated_Source\PSoC5/LCD_Timer.c ****    #if(LCD_Timer_UsingFixedFunction)
 408:.\Generated_Source\PSoC5/LCD_Timer.c ****        return ((uint16)CY_GET_REG16(LCD_Timer_PERIOD_LSB_PTR));
 409:.\Generated_Source\PSoC5/LCD_Timer.c ****    #else
 410:.\Generated_Source\PSoC5/LCD_Timer.c ****        return (CY_GET_REG16(LCD_Timer_PERIOD_LSB_PTR));
 400              		.loc 1 410 0
 401 0004 034B     		ldr	r3, .L33
 402 0006 1B88     		ldrh	r3, [r3]	@ movhi
 403 0008 9BB2     		uxth	r3, r3
 411:.\Generated_Source\PSoC5/LCD_Timer.c ****    #endif /* (LCD_Timer_UsingFixedFunction) */
 412:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 404              		.loc 1 412 0
 405 000a 1846     		mov	r0, r3
 406 000c BD46     		mov	sp, r7
 407              		@ sp needed
 408 000e 5DF8047B 		ldr	r7, [sp], #4
 409 0012 7047     		bx	lr
 410              	.L34:
 411              		.align	2
 412              	.L33:
 413 0014 486A0040 		.word	1073769032
 414              		.cfi_endproc
 415              	.LFE9:
 416              		.size	LCD_Timer_ReadPeriod, .-LCD_Timer_ReadPeriod
 417              		.section	.text.LCD_Timer_WritePeriod,"ax",%progbits
 418              		.align	2
 419              		.global	LCD_Timer_WritePeriod
 420              		.thumb
 421              		.thumb_func
 422              		.type	LCD_Timer_WritePeriod, %function
 423              	LCD_Timer_WritePeriod:
 424              	.LFB10:
 413:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 414:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 415:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_WritePeriod
 417:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 419:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 420:.\Generated_Source\PSoC5/LCD_Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC5/LCD_Timer.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 423:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 424:.\Generated_Source\PSoC5/LCD_Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC5/LCD_Timer.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 427:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 428:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 429:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 430:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_WritePeriod(uint16 period) 
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 16


 432:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 425              		.loc 1 432 0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 8
 428              		@ frame_needed = 1, uses_anonymous_args = 0
 429              		@ link register save eliminated.
 430 0000 80B4     		push	{r7}
 431              		.cfi_def_cfa_offset 4
 432              		.cfi_offset 7, -4
 433 0002 83B0     		sub	sp, sp, #12
 434              		.cfi_def_cfa_offset 16
 435 0004 00AF     		add	r7, sp, #0
 436              		.cfi_def_cfa_register 7
 437 0006 0346     		mov	r3, r0
 438 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 433:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if(LCD_Timer_UsingFixedFunction)
 434:.\Generated_Source\PSoC5/LCD_Timer.c ****         uint16 period_temp = (uint16)period;
 435:.\Generated_Source\PSoC5/LCD_Timer.c ****         CY_SET_REG16(LCD_Timer_PERIOD_LSB_PTR, period_temp);
 436:.\Generated_Source\PSoC5/LCD_Timer.c ****     #else
 437:.\Generated_Source\PSoC5/LCD_Timer.c ****         CY_SET_REG16(LCD_Timer_PERIOD_LSB_PTR, period);
 439              		.loc 1 437 0
 440 000a 044B     		ldr	r3, .L36
 441 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 442 000e 1A80     		strh	r2, [r3]	@ movhi
 438:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 443              		.loc 1 439 0
 444 0010 0C37     		adds	r7, r7, #12
 445 0012 BD46     		mov	sp, r7
 446              		@ sp needed
 447 0014 5DF8047B 		ldr	r7, [sp], #4
 448 0018 7047     		bx	lr
 449              	.L37:
 450 001a 00BF     		.align	2
 451              	.L36:
 452 001c 486A0040 		.word	1073769032
 453              		.cfi_endproc
 454              	.LFE10:
 455              		.size	LCD_Timer_WritePeriod, .-LCD_Timer_WritePeriod
 456              		.section	.text.LCD_Timer_ReadCapture,"ax",%progbits
 457              		.align	2
 458              		.global	LCD_Timer_ReadCapture
 459              		.thumb
 460              		.thumb_func
 461              		.type	LCD_Timer_ReadCapture, %function
 462              	LCD_Timer_ReadCapture:
 463              	.LFB11:
 440:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 441:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 442:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 443:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_ReadCapture
 444:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 445:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 446:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 447:.\Generated_Source\PSoC5/LCD_Timer.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 449:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 17


 450:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 451:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 452:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 453:.\Generated_Source\PSoC5/LCD_Timer.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 455:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC5/LCD_Timer.c **** uint16 LCD_Timer_ReadCapture(void) 
 457:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 464              		.loc 1 457 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 1, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469 0000 80B4     		push	{r7}
 470              		.cfi_def_cfa_offset 4
 471              		.cfi_offset 7, -4
 472 0002 00AF     		add	r7, sp, #0
 473              		.cfi_def_cfa_register 7
 458:.\Generated_Source\PSoC5/LCD_Timer.c ****    #if(LCD_Timer_UsingFixedFunction)
 459:.\Generated_Source\PSoC5/LCD_Timer.c ****        return ((uint16)CY_GET_REG16(LCD_Timer_CAPTURE_LSB_PTR));
 460:.\Generated_Source\PSoC5/LCD_Timer.c ****    #else
 461:.\Generated_Source\PSoC5/LCD_Timer.c ****        return (CY_GET_REG16(LCD_Timer_CAPTURE_LSB_PTR));
 474              		.loc 1 461 0
 475 0004 034B     		ldr	r3, .L40
 476 0006 1B88     		ldrh	r3, [r3]	@ movhi
 477 0008 9BB2     		uxth	r3, r3
 462:.\Generated_Source\PSoC5/LCD_Timer.c ****    #endif /* (LCD_Timer_UsingFixedFunction) */
 463:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 478              		.loc 1 463 0
 479 000a 1846     		mov	r0, r3
 480 000c BD46     		mov	sp, r7
 481              		@ sp needed
 482 000e 5DF8047B 		ldr	r7, [sp], #4
 483 0012 7047     		bx	lr
 484              	.L41:
 485              		.align	2
 486              	.L40:
 487 0014 886A0040 		.word	1073769096
 488              		.cfi_endproc
 489              	.LFE11:
 490              		.size	LCD_Timer_ReadCapture, .-LCD_Timer_ReadCapture
 491              		.section	.text.LCD_Timer_WriteCounter,"ax",%progbits
 492              		.align	2
 493              		.global	LCD_Timer_WriteCounter
 494              		.thumb
 495              		.thumb_func
 496              		.type	LCD_Timer_WriteCounter, %function
 497              	LCD_Timer_WriteCounter:
 498              	.LFB12:
 464:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 465:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 466:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_WriteCounter
 468:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 470:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 471:.\Generated_Source\PSoC5/LCD_Timer.c **** *  This funtion is used to set the counter to a specific value
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 18


 472:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 473:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 474:.\Generated_Source\PSoC5/LCD_Timer.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 476:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 477:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 478:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 479:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_WriteCounter(uint16 counter) 
 481:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 499              		.loc 1 481 0
 500              		.cfi_startproc
 501              		@ args = 0, pretend = 0, frame = 8
 502              		@ frame_needed = 1, uses_anonymous_args = 0
 503              		@ link register save eliminated.
 504 0000 80B4     		push	{r7}
 505              		.cfi_def_cfa_offset 4
 506              		.cfi_offset 7, -4
 507 0002 83B0     		sub	sp, sp, #12
 508              		.cfi_def_cfa_offset 16
 509 0004 00AF     		add	r7, sp, #0
 510              		.cfi_def_cfa_register 7
 511 0006 0346     		mov	r3, r0
 512 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 482:.\Generated_Source\PSoC5/LCD_Timer.c ****    #if(LCD_Timer_UsingFixedFunction)
 483:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:.\Generated_Source\PSoC5/LCD_Timer.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC5/LCD_Timer.c ****          */
 486:.\Generated_Source\PSoC5/LCD_Timer.c ****         CY_SET_REG16(LCD_Timer_COUNTER_LSB_PTR, (uint16)counter);
 487:.\Generated_Source\PSoC5/LCD_Timer.c ****         
 488:.\Generated_Source\PSoC5/LCD_Timer.c ****     #else
 489:.\Generated_Source\PSoC5/LCD_Timer.c ****         CY_SET_REG16(LCD_Timer_COUNTER_LSB_PTR, counter);
 513              		.loc 1 489 0
 514 000a 044B     		ldr	r3, .L43
 515 000c FA88     		ldrh	r2, [r7, #6]	@ movhi
 516 000e 1A80     		strh	r2, [r3]	@ movhi
 490:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 517              		.loc 1 491 0
 518 0010 0C37     		adds	r7, r7, #12
 519 0012 BD46     		mov	sp, r7
 520              		@ sp needed
 521 0014 5DF8047B 		ldr	r7, [sp], #4
 522 0018 7047     		bx	lr
 523              	.L44:
 524 001a 00BF     		.align	2
 525              	.L43:
 526 001c 086A0040 		.word	1073768968
 527              		.cfi_endproc
 528              	.LFE12:
 529              		.size	LCD_Timer_WriteCounter, .-LCD_Timer_WriteCounter
 530              		.section	.text.LCD_Timer_ReadCounter,"ax",%progbits
 531              		.align	2
 532              		.global	LCD_Timer_ReadCounter
 533              		.thumb
 534              		.thumb_func
 535              		.type	LCD_Timer_ReadCounter, %function
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 19


 536              	LCD_Timer_ReadCounter:
 537              	.LFB13:
 492:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 493:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 494:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_ReadCounter
 496:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 497:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 498:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 499:.\Generated_Source\PSoC5/LCD_Timer.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 501:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 502:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 503:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 504:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 505:.\Generated_Source\PSoC5/LCD_Timer.c **** *  Present compare value.
 506:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 507:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC5/LCD_Timer.c **** uint16 LCD_Timer_ReadCounter(void) 
 509:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 538              		.loc 1 509 0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 1, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 543 0000 80B4     		push	{r7}
 544              		.cfi_def_cfa_offset 4
 545              		.cfi_offset 7, -4
 546 0002 00AF     		add	r7, sp, #0
 547              		.cfi_def_cfa_register 7
 510:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* Force capture by reading Accumulator */
 511:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if(LCD_Timer_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/LCD_Timer.c ****         (void)CY_GET_REG16(LCD_Timer_COUNTER_LSB_PTR);
 515:.\Generated_Source\PSoC5/LCD_Timer.c ****     #else
 516:.\Generated_Source\PSoC5/LCD_Timer.c ****         (void)CY_GET_REG8(LCD_Timer_COUNTER_LSB_PTR_8BIT);
 548              		.loc 1 516 0
 549 0004 044B     		ldr	r3, .L47
 550 0006 1B78     		ldrb	r3, [r3]
 517:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif/* (LCD_Timer_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 519:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if(LCD_Timer_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/LCD_Timer.c ****         return ((uint16)CY_GET_REG16(LCD_Timer_CAPTURE_LSB_PTR));
 522:.\Generated_Source\PSoC5/LCD_Timer.c ****     #else
 523:.\Generated_Source\PSoC5/LCD_Timer.c ****         return (CY_GET_REG16(LCD_Timer_CAPTURE_LSB_PTR));
 551              		.loc 1 523 0
 552 0008 044B     		ldr	r3, .L47+4
 553 000a 1B88     		ldrh	r3, [r3]	@ movhi
 554 000c 9BB2     		uxth	r3, r3
 524:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* (LCD_Timer_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 555              		.loc 1 525 0
 556 000e 1846     		mov	r0, r3
 557 0010 BD46     		mov	sp, r7
 558              		@ sp needed
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 20


 559 0012 5DF8047B 		ldr	r7, [sp], #4
 560 0016 7047     		bx	lr
 561              	.L48:
 562              		.align	2
 563              	.L47:
 564 0018 04650040 		.word	1073767684
 565 001c 886A0040 		.word	1073769096
 566              		.cfi_endproc
 567              	.LFE13:
 568              		.size	LCD_Timer_ReadCounter, .-LCD_Timer_ReadCounter
 569              		.section	.text.LCD_Timer_ClearFIFO,"ax",%progbits
 570              		.align	2
 571              		.global	LCD_Timer_ClearFIFO
 572              		.thumb
 573              		.thumb_func
 574              		.type	LCD_Timer_ClearFIFO, %function
 575              	LCD_Timer_ClearFIFO:
 576              	.LFB14:
 526:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 527:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 528:.\Generated_Source\PSoC5/LCD_Timer.c **** #if(!LCD_Timer_UsingFixedFunction) /* UDB Specific Functions */
 529:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 530:.\Generated_Source\PSoC5/LCD_Timer.c ****     
 531:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 532:.\Generated_Source\PSoC5/LCD_Timer.c ****  * The functions below this point are only available using the UDB
 533:.\Generated_Source\PSoC5/LCD_Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:.\Generated_Source\PSoC5/LCD_Timer.c ****  ******************************************************************************/
 535:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 536:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 537:.\Generated_Source\PSoC5/LCD_Timer.c **** #if (LCD_Timer_SoftwareCaptureMode)
 538:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 539:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 540:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_SetCaptureMode
 542:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 543:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 544:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 545:.\Generated_Source\PSoC5/LCD_Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 547:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 548:.\Generated_Source\PSoC5/LCD_Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:.\Generated_Source\PSoC5/LCD_Timer.c **** *  The parameter values are defined using the
 550:.\Generated_Source\PSoC5/LCD_Timer.c **** *  #define LCD_Timer__B_TIMER__CM_NONE 0
 551:.\Generated_Source\PSoC5/LCD_Timer.c **** #define LCD_Timer__B_TIMER__CM_RISINGEDGE 1
 552:.\Generated_Source\PSoC5/LCD_Timer.c **** #define LCD_Timer__B_TIMER__CM_FALLINGEDGE 2
 553:.\Generated_Source\PSoC5/LCD_Timer.c **** #define LCD_Timer__B_TIMER__CM_EITHEREDGE 3
 554:.\Generated_Source\PSoC5/LCD_Timer.c **** #define LCD_Timer__B_TIMER__CM_SOFTWARE 4
 555:.\Generated_Source\PSoC5/LCD_Timer.c ****  identifiers
 556:.\Generated_Source\PSoC5/LCD_Timer.c **** *  The following are the possible values of the parameter
 557:.\Generated_Source\PSoC5/LCD_Timer.c **** *  LCD_Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:.\Generated_Source\PSoC5/LCD_Timer.c **** *  LCD_Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:.\Generated_Source\PSoC5/LCD_Timer.c **** *  LCD_Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:.\Generated_Source\PSoC5/LCD_Timer.c **** *  LCD_Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 562:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 563:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 564:.\Generated_Source\PSoC5/LCD_Timer.c **** *
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 21


 565:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 566:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_SetCaptureMode(uint8 captureMode) 
 567:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 568:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* This must only set to two bits of the control register associated */
 569:.\Generated_Source\PSoC5/LCD_Timer.c ****     captureMode = ((uint8)((uint8)captureMode << LCD_Timer_CTRL_CAP_MODE_SHIFT));
 570:.\Generated_Source\PSoC5/LCD_Timer.c ****     captureMode &= (LCD_Timer_CTRL_CAP_MODE_MASK);
 571:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 572:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if (!LCD_Timer_UDB_CONTROL_REG_REMOVED)
 573:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Clear the Current Setting */
 574:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CONTROL &= ((uint8)(~LCD_Timer_CTRL_CAP_MODE_MASK));
 575:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 576:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Write The New Setting */
 577:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CONTROL |= captureMode;
 578:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* (!LCD_Timer_UDB_CONTROL_REG_REMOVED) */
 579:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 580:.\Generated_Source\PSoC5/LCD_Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 582:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 583:.\Generated_Source\PSoC5/LCD_Timer.c **** #if (LCD_Timer_SoftwareTriggerMode)
 584:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 585:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 586:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_SetTriggerMode
 588:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 589:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 590:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 591:.\Generated_Source\PSoC5/LCD_Timer.c **** *  This function sets the trigger input mode
 592:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 593:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 594:.\Generated_Source\PSoC5/LCD_Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:.\Generated_Source\PSoC5/LCD_Timer.c ****     #define LCD_Timer__B_TIMER__TM_NONE 0x00u
 596:.\Generated_Source\PSoC5/LCD_Timer.c ****     #define LCD_Timer__B_TIMER__TM_RISINGEDGE 0x04u
 597:.\Generated_Source\PSoC5/LCD_Timer.c ****     #define LCD_Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:.\Generated_Source\PSoC5/LCD_Timer.c ****     #define LCD_Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:.\Generated_Source\PSoC5/LCD_Timer.c ****     #define LCD_Timer__B_TIMER__TM_SOFTWARE 0x10u
 600:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 601:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 602:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 603:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 604:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 605:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_SetTriggerMode(uint8 triggerMode) 
 606:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 607:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* This must only set to two bits of the control register associated */
 608:.\Generated_Source\PSoC5/LCD_Timer.c ****     triggerMode &= LCD_Timer_CTRL_TRIG_MODE_MASK;
 609:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 610:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if (!LCD_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed 
 611:.\Generated_Source\PSoC5/LCD_Timer.c ****     
 612:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Clear the Current Setting */
 613:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CONTROL &= ((uint8)(~LCD_Timer_CTRL_TRIG_MODE_MASK));
 614:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 615:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Write The New Setting */
 616:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CONTROL |= (triggerMode | LCD_Timer__B_TIMER__TM_SOFTWARE);
 617:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* Remove code section if control register is not used */
 618:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 619:.\Generated_Source\PSoC5/LCD_Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 621:.\Generated_Source\PSoC5/LCD_Timer.c **** #if (LCD_Timer_EnableTriggerMode)
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 22


 622:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 623:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 624:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 625:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_EnableTrigger
 626:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 627:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 628:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 629:.\Generated_Source\PSoC5/LCD_Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 631:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 632:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 633:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 634:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 635:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 636:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 637:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_EnableTrigger(void) 
 639:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 640:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if (!LCD_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed 
 641:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CONTROL |= LCD_Timer_CTRL_TRIG_EN;
 642:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* Remove code section if control register is not used */
 643:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 644:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 645:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 646:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_DisableTrigger
 648:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 650:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 651:.\Generated_Source\PSoC5/LCD_Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 653:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 654:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 655:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 656:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 657:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 658:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 659:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_DisableTrigger(void) 
 661:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 662:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if (!LCD_Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed
 663:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CONTROL &= ((uint8)(~LCD_Timer_CTRL_TRIG_EN));
 664:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* Remove code section if control register is not used */
 665:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 666:.\Generated_Source\PSoC5/LCD_Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 668:.\Generated_Source\PSoC5/LCD_Timer.c **** #if(LCD_Timer_InterruptOnCaptureCount)
 669:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 670:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 671:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_SetInterruptCount
 673:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 675:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 676:.\Generated_Source\PSoC5/LCD_Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 678:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 23


 679:.\Generated_Source\PSoC5/LCD_Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:.\Generated_Source\PSoC5/LCD_Timer.c **** *                   an interrupt will occur each time a capture occurs.
 681:.\Generated_Source\PSoC5/LCD_Timer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:.\Generated_Source\PSoC5/LCD_Timer.c **** *                   to delay by the same number of captures.
 683:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 684:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 685:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 686:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 687:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_SetInterruptCount(uint8 interruptCount) 
 689:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 690:.\Generated_Source\PSoC5/LCD_Timer.c ****     /* This must only set to two bits of the control register associated */
 691:.\Generated_Source\PSoC5/LCD_Timer.c ****     interruptCount &= LCD_Timer_CTRL_INTCNT_MASK;
 692:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 693:.\Generated_Source\PSoC5/LCD_Timer.c ****     #if (!LCD_Timer_UDB_CONTROL_REG_REMOVED)
 694:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Clear the Current Setting */
 695:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CONTROL &= ((uint8)(~LCD_Timer_CTRL_INTCNT_MASK));
 696:.\Generated_Source\PSoC5/LCD_Timer.c ****         /* Write The New Setting */
 697:.\Generated_Source\PSoC5/LCD_Timer.c ****         LCD_Timer_CONTROL |= interruptCount;
 698:.\Generated_Source\PSoC5/LCD_Timer.c ****     #endif /* (!LCD_Timer_UDB_CONTROL_REG_REMOVED) */
 699:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 700:.\Generated_Source\PSoC5/LCD_Timer.c **** #endif /* LCD_Timer_InterruptOnCaptureCount */
 701:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 702:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 703:.\Generated_Source\PSoC5/LCD_Timer.c **** #if (LCD_Timer_UsingHWCaptureCounter)
 704:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 705:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 706:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 707:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_SetCaptureCount
 708:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 709:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 710:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 711:.\Generated_Source\PSoC5/LCD_Timer.c **** *  This function sets the capture count
 712:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 713:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 714:.\Generated_Source\PSoC5/LCD_Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:.\Generated_Source\PSoC5/LCD_Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:.\Generated_Source\PSoC5/LCD_Timer.c **** *                captures.
 717:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 718:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 719:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 720:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 721:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_SetCaptureCount(uint8 captureCount) 
 723:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 724:.\Generated_Source\PSoC5/LCD_Timer.c ****     LCD_Timer_CAP_COUNT = captureCount;
 725:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 726:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 727:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 728:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_ReadCaptureCount
 730:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 731:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 732:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 733:.\Generated_Source\PSoC5/LCD_Timer.c **** *  This function reads the capture count setting
 734:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 735:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 24


 736:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 737:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 738:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 739:.\Generated_Source\PSoC5/LCD_Timer.c **** *  Returns the Capture Count Setting
 740:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 741:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC5/LCD_Timer.c **** uint8 LCD_Timer_ReadCaptureCount(void) 
 743:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 744:.\Generated_Source\PSoC5/LCD_Timer.c ****     return ((uint8)LCD_Timer_CAP_COUNT);
 745:.\Generated_Source\PSoC5/LCD_Timer.c **** }
 746:.\Generated_Source\PSoC5/LCD_Timer.c **** #endif /* LCD_Timer_UsingHWCaptureCounter */
 747:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 748:.\Generated_Source\PSoC5/LCD_Timer.c **** 
 749:.\Generated_Source\PSoC5/LCD_Timer.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC5/LCD_Timer.c **** * Function Name: LCD_Timer_ClearFIFO
 751:.\Generated_Source\PSoC5/LCD_Timer.c **** ********************************************************************************
 752:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 753:.\Generated_Source\PSoC5/LCD_Timer.c **** * Summary:
 754:.\Generated_Source\PSoC5/LCD_Timer.c **** *  This function clears all capture data from the capture FIFO
 755:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 756:.\Generated_Source\PSoC5/LCD_Timer.c **** * Parameters:
 757:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 758:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 759:.\Generated_Source\PSoC5/LCD_Timer.c **** * Return:
 760:.\Generated_Source\PSoC5/LCD_Timer.c **** *  void
 761:.\Generated_Source\PSoC5/LCD_Timer.c **** *
 762:.\Generated_Source\PSoC5/LCD_Timer.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC5/LCD_Timer.c **** void LCD_Timer_ClearFIFO(void) 
 764:.\Generated_Source\PSoC5/LCD_Timer.c **** {
 577              		.loc 1 764 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 1, uses_anonymous_args = 0
 581 0000 80B5     		push	{r7, lr}
 582              		.cfi_def_cfa_offset 8
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 00AF     		add	r7, sp, #0
 586              		.cfi_def_cfa_register 7
 765:.\Generated_Source\PSoC5/LCD_Timer.c ****     while(0u != (LCD_Timer_ReadStatusRegister() & LCD_Timer_STATUS_FIFONEMP))
 587              		.loc 1 765 0
 588 0004 01E0     		b	.L50
 589              	.L51:
 766:.\Generated_Source\PSoC5/LCD_Timer.c ****     {
 767:.\Generated_Source\PSoC5/LCD_Timer.c ****         (void)LCD_Timer_ReadCapture();
 590              		.loc 1 767 0
 591 0006 FFF7FEFF 		bl	LCD_Timer_ReadCapture
 592              	.L50:
 765:.\Generated_Source\PSoC5/LCD_Timer.c ****     while(0u != (LCD_Timer_ReadStatusRegister() & LCD_Timer_STATUS_FIFONEMP))
 593              		.loc 1 765 0 discriminator 1
 594 000a FFF7FEFF 		bl	LCD_Timer_ReadStatusRegister
 595 000e 0346     		mov	r3, r0
 596 0010 03F00803 		and	r3, r3, #8
 597 0014 002B     		cmp	r3, #0
 598 0016 F6D1     		bne	.L51
 768:.\Generated_Source\PSoC5/LCD_Timer.c ****     }
 769:.\Generated_Source\PSoC5/LCD_Timer.c **** }
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 25


 599              		.loc 1 769 0
 600 0018 80BD     		pop	{r7, pc}
 601              		.cfi_endproc
 602              	.LFE14:
 603              		.size	LCD_Timer_ClearFIFO, .-LCD_Timer_ClearFIFO
 604 001a 00BF     		.text
 605              	.Letext0:
 606              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 607              		.section	.debug_info,"",%progbits
 608              	.Ldebug_info0:
 609 0000 4E020000 		.4byte	0x24e
 610 0004 0400     		.2byte	0x4
 611 0006 00000000 		.4byte	.Ldebug_abbrev0
 612 000a 04       		.byte	0x4
 613 000b 01       		.uleb128 0x1
 614 000c F4010000 		.4byte	.LASF36
 615 0010 01       		.byte	0x1
 616 0011 B0020000 		.4byte	.LASF37
 617 0015 50000000 		.4byte	.LASF38
 618 0019 00000000 		.4byte	.Ldebug_ranges0+0
 619 001d 00000000 		.4byte	0
 620 0021 00000000 		.4byte	.Ldebug_line0
 621 0025 02       		.uleb128 0x2
 622 0026 01       		.byte	0x1
 623 0027 06       		.byte	0x6
 624 0028 11030000 		.4byte	.LASF0
 625 002c 02       		.uleb128 0x2
 626 002d 01       		.byte	0x1
 627 002e 08       		.byte	0x8
 628 002f B0000000 		.4byte	.LASF1
 629 0033 02       		.uleb128 0x2
 630 0034 02       		.byte	0x2
 631 0035 05       		.byte	0x5
 632 0036 A6020000 		.4byte	.LASF2
 633 003a 02       		.uleb128 0x2
 634 003b 02       		.byte	0x2
 635 003c 07       		.byte	0x7
 636 003d 3D000000 		.4byte	.LASF3
 637 0041 02       		.uleb128 0x2
 638 0042 04       		.byte	0x4
 639 0043 05       		.byte	0x5
 640 0044 D5020000 		.4byte	.LASF4
 641 0048 02       		.uleb128 0x2
 642 0049 04       		.byte	0x4
 643 004a 07       		.byte	0x7
 644 004b D2000000 		.4byte	.LASF5
 645 004f 02       		.uleb128 0x2
 646 0050 08       		.byte	0x8
 647 0051 05       		.byte	0x5
 648 0052 79020000 		.4byte	.LASF6
 649 0056 02       		.uleb128 0x2
 650 0057 08       		.byte	0x8
 651 0058 07       		.byte	0x7
 652 0059 A8010000 		.4byte	.LASF7
 653 005d 03       		.uleb128 0x3
 654 005e 04       		.byte	0x4
 655 005f 05       		.byte	0x5
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 26


 656 0060 696E7400 		.ascii	"int\000"
 657 0064 02       		.uleb128 0x2
 658 0065 04       		.byte	0x4
 659 0066 07       		.byte	0x7
 660 0067 85010000 		.4byte	.LASF8
 661 006b 04       		.uleb128 0x4
 662 006c E4000000 		.4byte	.LASF9
 663 0070 02       		.byte	0x2
 664 0071 A1       		.byte	0xa1
 665 0072 2C000000 		.4byte	0x2c
 666 0076 04       		.uleb128 0x4
 667 0077 50010000 		.4byte	.LASF10
 668 007b 02       		.byte	0x2
 669 007c A2       		.byte	0xa2
 670 007d 3A000000 		.4byte	0x3a
 671 0081 02       		.uleb128 0x2
 672 0082 04       		.byte	0x4
 673 0083 04       		.byte	0x4
 674 0084 A2000000 		.4byte	.LASF11
 675 0088 02       		.uleb128 0x2
 676 0089 08       		.byte	0x8
 677 008a 04       		.byte	0x4
 678 008b 25010000 		.4byte	.LASF12
 679 008f 02       		.uleb128 0x2
 680 0090 01       		.byte	0x1
 681 0091 08       		.byte	0x8
 682 0092 06000000 		.4byte	.LASF13
 683 0096 05       		.uleb128 0x5
 684 0097 CD000000 		.4byte	.LASF14
 685 009b 02       		.byte	0x2
 686 009c 4B01     		.2byte	0x14b
 687 009e A2000000 		.4byte	0xa2
 688 00a2 06       		.uleb128 0x6
 689 00a3 6B000000 		.4byte	0x6b
 690 00a7 05       		.uleb128 0x5
 691 00a8 00000000 		.4byte	.LASF15
 692 00ac 02       		.byte	0x2
 693 00ad 4C01     		.2byte	0x14c
 694 00af B3000000 		.4byte	0xb3
 695 00b3 06       		.uleb128 0x6
 696 00b4 76000000 		.4byte	0x76
 697 00b8 02       		.uleb128 0x2
 698 00b9 04       		.byte	0x4
 699 00ba 07       		.byte	0x7
 700 00bb 70020000 		.4byte	.LASF16
 701 00bf 07       		.uleb128 0x7
 702 00c0 BE000000 		.4byte	.LASF20
 703 00c4 01       		.byte	0x1
 704 00c5 2B       		.byte	0x2b
 705 00c6 00000000 		.4byte	.LFB0
 706 00ca 4C000000 		.4byte	.LFE0-.LFB0
 707 00ce 01       		.uleb128 0x1
 708 00cf 9C       		.byte	0x9c
 709 00d0 E3000000 		.4byte	0xe3
 710 00d4 08       		.uleb128 0x8
 711 00d5 F2000000 		.4byte	.LASF39
 712 00d9 01       		.byte	0x1
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 27


 713 00da 2F       		.byte	0x2f
 714 00db 6B000000 		.4byte	0x6b
 715 00df 02       		.uleb128 0x2
 716 00e0 91       		.byte	0x91
 717 00e1 77       		.sleb128 -9
 718 00e2 00       		.byte	0
 719 00e3 09       		.uleb128 0x9
 720 00e4 95020000 		.4byte	.LASF17
 721 00e8 01       		.byte	0x1
 722 00e9 B4       		.byte	0xb4
 723 00ea 00000000 		.4byte	.LFB1
 724 00ee 20000000 		.4byte	.LFE1-.LFB1
 725 00f2 01       		.uleb128 0x1
 726 00f3 9C       		.byte	0x9c
 727 00f4 0A       		.uleb128 0xa
 728 00f5 40010000 		.4byte	.LASF18
 729 00f9 01       		.byte	0x1
 730 00fa D7       		.byte	0xd7
 731 00fb 00000000 		.4byte	.LFB2
 732 00ff 20000000 		.4byte	.LFE2-.LFB2
 733 0103 01       		.uleb128 0x1
 734 0104 9C       		.byte	0x9c
 735 0105 09       		.uleb128 0x9
 736 0106 76010000 		.4byte	.LASF19
 737 010a 01       		.byte	0x1
 738 010b F7       		.byte	0xf7
 739 010c 00000000 		.4byte	.LFB3
 740 0110 20000000 		.4byte	.LFE3-.LFB3
 741 0114 01       		.uleb128 0x1
 742 0115 9C       		.byte	0x9c
 743 0116 0B       		.uleb128 0xb
 744 0117 87000000 		.4byte	.LASF21
 745 011b 01       		.byte	0x1
 746 011c 1701     		.2byte	0x117
 747 011e 00000000 		.4byte	.LFB4
 748 0122 20000000 		.4byte	.LFE4-.LFB4
 749 0126 01       		.uleb128 0x1
 750 0127 9C       		.byte	0x9c
 751 0128 3C010000 		.4byte	0x13c
 752 012c 0C       		.uleb128 0xc
 753 012d 87020000 		.4byte	.LASF26
 754 0131 01       		.byte	0x1
 755 0132 1701     		.2byte	0x117
 756 0134 6B000000 		.4byte	0x6b
 757 0138 02       		.uleb128 0x2
 758 0139 91       		.byte	0x91
 759 013a 77       		.sleb128 -9
 760 013b 00       		.byte	0
 761 013c 0D       		.uleb128 0xd
 762 013d 0B010000 		.4byte	.LASF22
 763 0141 01       		.byte	0x1
 764 0142 2E01     		.2byte	0x12e
 765 0144 00000000 		.4byte	.LFB5
 766 0148 14000000 		.4byte	.LFE5-.LFB5
 767 014c 01       		.uleb128 0x1
 768 014d 9C       		.byte	0x9c
 769 014e 0E       		.uleb128 0xe
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 28


 770 014f F4020000 		.4byte	.LASF23
 771 0153 01       		.byte	0x1
 772 0154 4D01     		.2byte	0x14d
 773 0156 6B000000 		.4byte	0x6b
 774 015a 00000000 		.4byte	.LFB6
 775 015e 18000000 		.4byte	.LFE6-.LFB6
 776 0162 01       		.uleb128 0x1
 777 0163 9C       		.byte	0x9c
 778 0164 0E       		.uleb128 0xe
 779 0165 D6010000 		.4byte	.LASF24
 780 0169 01       		.byte	0x1
 781 016a 6401     		.2byte	0x164
 782 016c 6B000000 		.4byte	0x6b
 783 0170 00000000 		.4byte	.LFB7
 784 0174 18000000 		.4byte	.LFE7-.LFB7
 785 0178 01       		.uleb128 0x1
 786 0179 9C       		.byte	0x9c
 787 017a 0B       		.uleb128 0xb
 788 017b 57010000 		.4byte	.LASF25
 789 017f 01       		.byte	0x1
 790 0180 7B01     		.2byte	0x17b
 791 0182 00000000 		.4byte	.LFB8
 792 0186 20000000 		.4byte	.LFE8-.LFB8
 793 018a 01       		.uleb128 0x1
 794 018b 9C       		.byte	0x9c
 795 018c A0010000 		.4byte	0x1a0
 796 0190 0C       		.uleb128 0xc
 797 0191 EA000000 		.4byte	.LASF27
 798 0195 01       		.byte	0x1
 799 0196 7B01     		.2byte	0x17b
 800 0198 6B000000 		.4byte	0x6b
 801 019c 02       		.uleb128 0x2
 802 019d 91       		.byte	0x91
 803 019e 77       		.sleb128 -9
 804 019f 00       		.byte	0
 805 01a0 0E       		.uleb128 0xe
 806 01a1 0B000000 		.4byte	.LASF28
 807 01a5 01       		.byte	0x1
 808 01a6 9501     		.2byte	0x195
 809 01a8 76000000 		.4byte	0x76
 810 01ac 00000000 		.4byte	.LFB9
 811 01b0 18000000 		.4byte	.LFE9-.LFB9
 812 01b4 01       		.uleb128 0x1
 813 01b5 9C       		.byte	0x9c
 814 01b6 0B       		.uleb128 0xb
 815 01b7 20000000 		.4byte	.LASF29
 816 01bb 01       		.byte	0x1
 817 01bc AF01     		.2byte	0x1af
 818 01be 00000000 		.4byte	.LFB10
 819 01c2 20000000 		.4byte	.LFE10-.LFB10
 820 01c6 01       		.uleb128 0x1
 821 01c7 9C       		.byte	0x9c
 822 01c8 DC010000 		.4byte	0x1dc
 823 01cc 0C       		.uleb128 0xc
 824 01cd 36000000 		.4byte	.LASF30
 825 01d1 01       		.byte	0x1
 826 01d2 AF01     		.2byte	0x1af
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 29


 827 01d4 76000000 		.4byte	0x76
 828 01d8 02       		.uleb128 0x2
 829 01d9 91       		.byte	0x91
 830 01da 76       		.sleb128 -10
 831 01db 00       		.byte	0
 832 01dc 0E       		.uleb128 0xe
 833 01dd 92010000 		.4byte	.LASF31
 834 01e1 01       		.byte	0x1
 835 01e2 C801     		.2byte	0x1c8
 836 01e4 76000000 		.4byte	0x76
 837 01e8 00000000 		.4byte	.LFB11
 838 01ec 18000000 		.4byte	.LFE11-.LFB11
 839 01f0 01       		.uleb128 0x1
 840 01f1 9C       		.byte	0x9c
 841 01f2 0B       		.uleb128 0xb
 842 01f3 BF010000 		.4byte	.LASF32
 843 01f7 01       		.byte	0x1
 844 01f8 E001     		.2byte	0x1e0
 845 01fa 00000000 		.4byte	.LFB12
 846 01fe 20000000 		.4byte	.LFE12-.LFB12
 847 0202 01       		.uleb128 0x1
 848 0203 9C       		.byte	0x9c
 849 0204 18020000 		.4byte	0x218
 850 0208 0C       		.uleb128 0xc
 851 0209 A8000000 		.4byte	.LASF33
 852 020d 01       		.byte	0x1
 853 020e E001     		.2byte	0x1e0
 854 0210 76000000 		.4byte	0x76
 855 0214 02       		.uleb128 0x2
 856 0215 91       		.byte	0x91
 857 0216 76       		.sleb128 -10
 858 0217 00       		.byte	0
 859 0218 0E       		.uleb128 0xe
 860 0219 DE020000 		.4byte	.LASF34
 861 021d 01       		.byte	0x1
 862 021e FC01     		.2byte	0x1fc
 863 0220 76000000 		.4byte	0x76
 864 0224 00000000 		.4byte	.LFB13
 865 0228 20000000 		.4byte	.LFE13-.LFB13
 866 022c 01       		.uleb128 0x1
 867 022d 9C       		.byte	0x9c
 868 022e 0F       		.uleb128 0xf
 869 022f 2C010000 		.4byte	.LASF35
 870 0233 01       		.byte	0x1
 871 0234 FB02     		.2byte	0x2fb
 872 0236 00000000 		.4byte	.LFB14
 873 023a 1A000000 		.4byte	.LFE14-.LFB14
 874 023e 01       		.uleb128 0x1
 875 023f 9C       		.byte	0x9c
 876 0240 10       		.uleb128 0x10
 877 0241 1D030000 		.4byte	.LASF40
 878 0245 01       		.byte	0x1
 879 0246 1A       		.byte	0x1a
 880 0247 6B000000 		.4byte	0x6b
 881 024b 05       		.uleb128 0x5
 882 024c 03       		.byte	0x3
 883 024d 00000000 		.4byte	LCD_Timer_initVar
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 30


 884 0251 00       		.byte	0
 885              		.section	.debug_abbrev,"",%progbits
 886              	.Ldebug_abbrev0:
 887 0000 01       		.uleb128 0x1
 888 0001 11       		.uleb128 0x11
 889 0002 01       		.byte	0x1
 890 0003 25       		.uleb128 0x25
 891 0004 0E       		.uleb128 0xe
 892 0005 13       		.uleb128 0x13
 893 0006 0B       		.uleb128 0xb
 894 0007 03       		.uleb128 0x3
 895 0008 0E       		.uleb128 0xe
 896 0009 1B       		.uleb128 0x1b
 897 000a 0E       		.uleb128 0xe
 898 000b 55       		.uleb128 0x55
 899 000c 17       		.uleb128 0x17
 900 000d 11       		.uleb128 0x11
 901 000e 01       		.uleb128 0x1
 902 000f 10       		.uleb128 0x10
 903 0010 17       		.uleb128 0x17
 904 0011 00       		.byte	0
 905 0012 00       		.byte	0
 906 0013 02       		.uleb128 0x2
 907 0014 24       		.uleb128 0x24
 908 0015 00       		.byte	0
 909 0016 0B       		.uleb128 0xb
 910 0017 0B       		.uleb128 0xb
 911 0018 3E       		.uleb128 0x3e
 912 0019 0B       		.uleb128 0xb
 913 001a 03       		.uleb128 0x3
 914 001b 0E       		.uleb128 0xe
 915 001c 00       		.byte	0
 916 001d 00       		.byte	0
 917 001e 03       		.uleb128 0x3
 918 001f 24       		.uleb128 0x24
 919 0020 00       		.byte	0
 920 0021 0B       		.uleb128 0xb
 921 0022 0B       		.uleb128 0xb
 922 0023 3E       		.uleb128 0x3e
 923 0024 0B       		.uleb128 0xb
 924 0025 03       		.uleb128 0x3
 925 0026 08       		.uleb128 0x8
 926 0027 00       		.byte	0
 927 0028 00       		.byte	0
 928 0029 04       		.uleb128 0x4
 929 002a 16       		.uleb128 0x16
 930 002b 00       		.byte	0
 931 002c 03       		.uleb128 0x3
 932 002d 0E       		.uleb128 0xe
 933 002e 3A       		.uleb128 0x3a
 934 002f 0B       		.uleb128 0xb
 935 0030 3B       		.uleb128 0x3b
 936 0031 0B       		.uleb128 0xb
 937 0032 49       		.uleb128 0x49
 938 0033 13       		.uleb128 0x13
 939 0034 00       		.byte	0
 940 0035 00       		.byte	0
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 31


 941 0036 05       		.uleb128 0x5
 942 0037 16       		.uleb128 0x16
 943 0038 00       		.byte	0
 944 0039 03       		.uleb128 0x3
 945 003a 0E       		.uleb128 0xe
 946 003b 3A       		.uleb128 0x3a
 947 003c 0B       		.uleb128 0xb
 948 003d 3B       		.uleb128 0x3b
 949 003e 05       		.uleb128 0x5
 950 003f 49       		.uleb128 0x49
 951 0040 13       		.uleb128 0x13
 952 0041 00       		.byte	0
 953 0042 00       		.byte	0
 954 0043 06       		.uleb128 0x6
 955 0044 35       		.uleb128 0x35
 956 0045 00       		.byte	0
 957 0046 49       		.uleb128 0x49
 958 0047 13       		.uleb128 0x13
 959 0048 00       		.byte	0
 960 0049 00       		.byte	0
 961 004a 07       		.uleb128 0x7
 962 004b 2E       		.uleb128 0x2e
 963 004c 01       		.byte	0x1
 964 004d 3F       		.uleb128 0x3f
 965 004e 19       		.uleb128 0x19
 966 004f 03       		.uleb128 0x3
 967 0050 0E       		.uleb128 0xe
 968 0051 3A       		.uleb128 0x3a
 969 0052 0B       		.uleb128 0xb
 970 0053 3B       		.uleb128 0x3b
 971 0054 0B       		.uleb128 0xb
 972 0055 27       		.uleb128 0x27
 973 0056 19       		.uleb128 0x19
 974 0057 11       		.uleb128 0x11
 975 0058 01       		.uleb128 0x1
 976 0059 12       		.uleb128 0x12
 977 005a 06       		.uleb128 0x6
 978 005b 40       		.uleb128 0x40
 979 005c 18       		.uleb128 0x18
 980 005d 9642     		.uleb128 0x2116
 981 005f 19       		.uleb128 0x19
 982 0060 01       		.uleb128 0x1
 983 0061 13       		.uleb128 0x13
 984 0062 00       		.byte	0
 985 0063 00       		.byte	0
 986 0064 08       		.uleb128 0x8
 987 0065 34       		.uleb128 0x34
 988 0066 00       		.byte	0
 989 0067 03       		.uleb128 0x3
 990 0068 0E       		.uleb128 0xe
 991 0069 3A       		.uleb128 0x3a
 992 006a 0B       		.uleb128 0xb
 993 006b 3B       		.uleb128 0x3b
 994 006c 0B       		.uleb128 0xb
 995 006d 49       		.uleb128 0x49
 996 006e 13       		.uleb128 0x13
 997 006f 02       		.uleb128 0x2
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 32


 998 0070 18       		.uleb128 0x18
 999 0071 00       		.byte	0
 1000 0072 00       		.byte	0
 1001 0073 09       		.uleb128 0x9
 1002 0074 2E       		.uleb128 0x2e
 1003 0075 00       		.byte	0
 1004 0076 3F       		.uleb128 0x3f
 1005 0077 19       		.uleb128 0x19
 1006 0078 03       		.uleb128 0x3
 1007 0079 0E       		.uleb128 0xe
 1008 007a 3A       		.uleb128 0x3a
 1009 007b 0B       		.uleb128 0xb
 1010 007c 3B       		.uleb128 0x3b
 1011 007d 0B       		.uleb128 0xb
 1012 007e 27       		.uleb128 0x27
 1013 007f 19       		.uleb128 0x19
 1014 0080 11       		.uleb128 0x11
 1015 0081 01       		.uleb128 0x1
 1016 0082 12       		.uleb128 0x12
 1017 0083 06       		.uleb128 0x6
 1018 0084 40       		.uleb128 0x40
 1019 0085 18       		.uleb128 0x18
 1020 0086 9742     		.uleb128 0x2117
 1021 0088 19       		.uleb128 0x19
 1022 0089 00       		.byte	0
 1023 008a 00       		.byte	0
 1024 008b 0A       		.uleb128 0xa
 1025 008c 2E       		.uleb128 0x2e
 1026 008d 00       		.byte	0
 1027 008e 3F       		.uleb128 0x3f
 1028 008f 19       		.uleb128 0x19
 1029 0090 03       		.uleb128 0x3
 1030 0091 0E       		.uleb128 0xe
 1031 0092 3A       		.uleb128 0x3a
 1032 0093 0B       		.uleb128 0xb
 1033 0094 3B       		.uleb128 0x3b
 1034 0095 0B       		.uleb128 0xb
 1035 0096 27       		.uleb128 0x27
 1036 0097 19       		.uleb128 0x19
 1037 0098 11       		.uleb128 0x11
 1038 0099 01       		.uleb128 0x1
 1039 009a 12       		.uleb128 0x12
 1040 009b 06       		.uleb128 0x6
 1041 009c 40       		.uleb128 0x40
 1042 009d 18       		.uleb128 0x18
 1043 009e 9642     		.uleb128 0x2116
 1044 00a0 19       		.uleb128 0x19
 1045 00a1 00       		.byte	0
 1046 00a2 00       		.byte	0
 1047 00a3 0B       		.uleb128 0xb
 1048 00a4 2E       		.uleb128 0x2e
 1049 00a5 01       		.byte	0x1
 1050 00a6 3F       		.uleb128 0x3f
 1051 00a7 19       		.uleb128 0x19
 1052 00a8 03       		.uleb128 0x3
 1053 00a9 0E       		.uleb128 0xe
 1054 00aa 3A       		.uleb128 0x3a
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 33


 1055 00ab 0B       		.uleb128 0xb
 1056 00ac 3B       		.uleb128 0x3b
 1057 00ad 05       		.uleb128 0x5
 1058 00ae 27       		.uleb128 0x27
 1059 00af 19       		.uleb128 0x19
 1060 00b0 11       		.uleb128 0x11
 1061 00b1 01       		.uleb128 0x1
 1062 00b2 12       		.uleb128 0x12
 1063 00b3 06       		.uleb128 0x6
 1064 00b4 40       		.uleb128 0x40
 1065 00b5 18       		.uleb128 0x18
 1066 00b6 9742     		.uleb128 0x2117
 1067 00b8 19       		.uleb128 0x19
 1068 00b9 01       		.uleb128 0x1
 1069 00ba 13       		.uleb128 0x13
 1070 00bb 00       		.byte	0
 1071 00bc 00       		.byte	0
 1072 00bd 0C       		.uleb128 0xc
 1073 00be 05       		.uleb128 0x5
 1074 00bf 00       		.byte	0
 1075 00c0 03       		.uleb128 0x3
 1076 00c1 0E       		.uleb128 0xe
 1077 00c2 3A       		.uleb128 0x3a
 1078 00c3 0B       		.uleb128 0xb
 1079 00c4 3B       		.uleb128 0x3b
 1080 00c5 05       		.uleb128 0x5
 1081 00c6 49       		.uleb128 0x49
 1082 00c7 13       		.uleb128 0x13
 1083 00c8 02       		.uleb128 0x2
 1084 00c9 18       		.uleb128 0x18
 1085 00ca 00       		.byte	0
 1086 00cb 00       		.byte	0
 1087 00cc 0D       		.uleb128 0xd
 1088 00cd 2E       		.uleb128 0x2e
 1089 00ce 00       		.byte	0
 1090 00cf 3F       		.uleb128 0x3f
 1091 00d0 19       		.uleb128 0x19
 1092 00d1 03       		.uleb128 0x3
 1093 00d2 0E       		.uleb128 0xe
 1094 00d3 3A       		.uleb128 0x3a
 1095 00d4 0B       		.uleb128 0xb
 1096 00d5 3B       		.uleb128 0x3b
 1097 00d6 05       		.uleb128 0x5
 1098 00d7 27       		.uleb128 0x27
 1099 00d8 19       		.uleb128 0x19
 1100 00d9 11       		.uleb128 0x11
 1101 00da 01       		.uleb128 0x1
 1102 00db 12       		.uleb128 0x12
 1103 00dc 06       		.uleb128 0x6
 1104 00dd 40       		.uleb128 0x40
 1105 00de 18       		.uleb128 0x18
 1106 00df 9742     		.uleb128 0x2117
 1107 00e1 19       		.uleb128 0x19
 1108 00e2 00       		.byte	0
 1109 00e3 00       		.byte	0
 1110 00e4 0E       		.uleb128 0xe
 1111 00e5 2E       		.uleb128 0x2e
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 34


 1112 00e6 00       		.byte	0
 1113 00e7 3F       		.uleb128 0x3f
 1114 00e8 19       		.uleb128 0x19
 1115 00e9 03       		.uleb128 0x3
 1116 00ea 0E       		.uleb128 0xe
 1117 00eb 3A       		.uleb128 0x3a
 1118 00ec 0B       		.uleb128 0xb
 1119 00ed 3B       		.uleb128 0x3b
 1120 00ee 05       		.uleb128 0x5
 1121 00ef 27       		.uleb128 0x27
 1122 00f0 19       		.uleb128 0x19
 1123 00f1 49       		.uleb128 0x49
 1124 00f2 13       		.uleb128 0x13
 1125 00f3 11       		.uleb128 0x11
 1126 00f4 01       		.uleb128 0x1
 1127 00f5 12       		.uleb128 0x12
 1128 00f6 06       		.uleb128 0x6
 1129 00f7 40       		.uleb128 0x40
 1130 00f8 18       		.uleb128 0x18
 1131 00f9 9742     		.uleb128 0x2117
 1132 00fb 19       		.uleb128 0x19
 1133 00fc 00       		.byte	0
 1134 00fd 00       		.byte	0
 1135 00fe 0F       		.uleb128 0xf
 1136 00ff 2E       		.uleb128 0x2e
 1137 0100 00       		.byte	0
 1138 0101 3F       		.uleb128 0x3f
 1139 0102 19       		.uleb128 0x19
 1140 0103 03       		.uleb128 0x3
 1141 0104 0E       		.uleb128 0xe
 1142 0105 3A       		.uleb128 0x3a
 1143 0106 0B       		.uleb128 0xb
 1144 0107 3B       		.uleb128 0x3b
 1145 0108 05       		.uleb128 0x5
 1146 0109 27       		.uleb128 0x27
 1147 010a 19       		.uleb128 0x19
 1148 010b 11       		.uleb128 0x11
 1149 010c 01       		.uleb128 0x1
 1150 010d 12       		.uleb128 0x12
 1151 010e 06       		.uleb128 0x6
 1152 010f 40       		.uleb128 0x40
 1153 0110 18       		.uleb128 0x18
 1154 0111 9642     		.uleb128 0x2116
 1155 0113 19       		.uleb128 0x19
 1156 0114 00       		.byte	0
 1157 0115 00       		.byte	0
 1158 0116 10       		.uleb128 0x10
 1159 0117 34       		.uleb128 0x34
 1160 0118 00       		.byte	0
 1161 0119 03       		.uleb128 0x3
 1162 011a 0E       		.uleb128 0xe
 1163 011b 3A       		.uleb128 0x3a
 1164 011c 0B       		.uleb128 0xb
 1165 011d 3B       		.uleb128 0x3b
 1166 011e 0B       		.uleb128 0xb
 1167 011f 49       		.uleb128 0x49
 1168 0120 13       		.uleb128 0x13
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 35


 1169 0121 3F       		.uleb128 0x3f
 1170 0122 19       		.uleb128 0x19
 1171 0123 02       		.uleb128 0x2
 1172 0124 18       		.uleb128 0x18
 1173 0125 00       		.byte	0
 1174 0126 00       		.byte	0
 1175 0127 00       		.byte	0
 1176              		.section	.debug_aranges,"",%progbits
 1177 0000 8C000000 		.4byte	0x8c
 1178 0004 0200     		.2byte	0x2
 1179 0006 00000000 		.4byte	.Ldebug_info0
 1180 000a 04       		.byte	0x4
 1181 000b 00       		.byte	0
 1182 000c 0000     		.2byte	0
 1183 000e 0000     		.2byte	0
 1184 0010 00000000 		.4byte	.LFB0
 1185 0014 4C000000 		.4byte	.LFE0-.LFB0
 1186 0018 00000000 		.4byte	.LFB1
 1187 001c 20000000 		.4byte	.LFE1-.LFB1
 1188 0020 00000000 		.4byte	.LFB2
 1189 0024 20000000 		.4byte	.LFE2-.LFB2
 1190 0028 00000000 		.4byte	.LFB3
 1191 002c 20000000 		.4byte	.LFE3-.LFB3
 1192 0030 00000000 		.4byte	.LFB4
 1193 0034 20000000 		.4byte	.LFE4-.LFB4
 1194 0038 00000000 		.4byte	.LFB5
 1195 003c 14000000 		.4byte	.LFE5-.LFB5
 1196 0040 00000000 		.4byte	.LFB6
 1197 0044 18000000 		.4byte	.LFE6-.LFB6
 1198 0048 00000000 		.4byte	.LFB7
 1199 004c 18000000 		.4byte	.LFE7-.LFB7
 1200 0050 00000000 		.4byte	.LFB8
 1201 0054 20000000 		.4byte	.LFE8-.LFB8
 1202 0058 00000000 		.4byte	.LFB9
 1203 005c 18000000 		.4byte	.LFE9-.LFB9
 1204 0060 00000000 		.4byte	.LFB10
 1205 0064 20000000 		.4byte	.LFE10-.LFB10
 1206 0068 00000000 		.4byte	.LFB11
 1207 006c 18000000 		.4byte	.LFE11-.LFB11
 1208 0070 00000000 		.4byte	.LFB12
 1209 0074 20000000 		.4byte	.LFE12-.LFB12
 1210 0078 00000000 		.4byte	.LFB13
 1211 007c 20000000 		.4byte	.LFE13-.LFB13
 1212 0080 00000000 		.4byte	.LFB14
 1213 0084 1A000000 		.4byte	.LFE14-.LFB14
 1214 0088 00000000 		.4byte	0
 1215 008c 00000000 		.4byte	0
 1216              		.section	.debug_ranges,"",%progbits
 1217              	.Ldebug_ranges0:
 1218 0000 00000000 		.4byte	.LFB0
 1219 0004 4C000000 		.4byte	.LFE0
 1220 0008 00000000 		.4byte	.LFB1
 1221 000c 20000000 		.4byte	.LFE1
 1222 0010 00000000 		.4byte	.LFB2
 1223 0014 20000000 		.4byte	.LFE2
 1224 0018 00000000 		.4byte	.LFB3
 1225 001c 20000000 		.4byte	.LFE3
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 36


 1226 0020 00000000 		.4byte	.LFB4
 1227 0024 20000000 		.4byte	.LFE4
 1228 0028 00000000 		.4byte	.LFB5
 1229 002c 14000000 		.4byte	.LFE5
 1230 0030 00000000 		.4byte	.LFB6
 1231 0034 18000000 		.4byte	.LFE6
 1232 0038 00000000 		.4byte	.LFB7
 1233 003c 18000000 		.4byte	.LFE7
 1234 0040 00000000 		.4byte	.LFB8
 1235 0044 20000000 		.4byte	.LFE8
 1236 0048 00000000 		.4byte	.LFB9
 1237 004c 18000000 		.4byte	.LFE9
 1238 0050 00000000 		.4byte	.LFB10
 1239 0054 20000000 		.4byte	.LFE10
 1240 0058 00000000 		.4byte	.LFB11
 1241 005c 18000000 		.4byte	.LFE11
 1242 0060 00000000 		.4byte	.LFB12
 1243 0064 20000000 		.4byte	.LFE12
 1244 0068 00000000 		.4byte	.LFB13
 1245 006c 20000000 		.4byte	.LFE13
 1246 0070 00000000 		.4byte	.LFB14
 1247 0074 1A000000 		.4byte	.LFE14
 1248 0078 00000000 		.4byte	0
 1249 007c 00000000 		.4byte	0
 1250              		.section	.debug_line,"",%progbits
 1251              	.Ldebug_line0:
 1252 0000 74010000 		.section	.debug_str,"MS",%progbits,1
 1252      02004800 
 1252      00000201 
 1252      FB0E0D00 
 1252      01010101 
 1253              	.LASF15:
 1254 0000 72656731 		.ascii	"reg16\000"
 1254      3600
 1255              	.LASF13:
 1256 0006 63686172 		.ascii	"char\000"
 1256      00
 1257              	.LASF28:
 1258 000b 4C43445F 		.ascii	"LCD_Timer_ReadPeriod\000"
 1258      54696D65 
 1258      725F5265 
 1258      61645065 
 1258      72696F64 
 1259              	.LASF29:
 1260 0020 4C43445F 		.ascii	"LCD_Timer_WritePeriod\000"
 1260      54696D65 
 1260      725F5772 
 1260      69746550 
 1260      6572696F 
 1261              	.LASF30:
 1262 0036 70657269 		.ascii	"period\000"
 1262      6F6400
 1263              	.LASF3:
 1264 003d 73686F72 		.ascii	"short unsigned int\000"
 1264      7420756E 
 1264      7369676E 
 1264      65642069 
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 37


 1264      6E7400
 1265              	.LASF38:
 1266 0050 443A5C77 		.ascii	"D:\\workspace\\Super-Eagle\\Super-Eagle\\Super-Eagl"
 1266      6F726B73 
 1266      70616365 
 1266      5C537570 
 1266      65722D45 
 1267 007f 652E6379 		.ascii	"e.cydsn\000"
 1267      64736E00 
 1268              	.LASF21:
 1269 0087 4C43445F 		.ascii	"LCD_Timer_SetInterruptMode\000"
 1269      54696D65 
 1269      725F5365 
 1269      74496E74 
 1269      65727275 
 1270              	.LASF11:
 1271 00a2 666C6F61 		.ascii	"float\000"
 1271      7400
 1272              	.LASF33:
 1273 00a8 636F756E 		.ascii	"counter\000"
 1273      74657200 
 1274              	.LASF1:
 1275 00b0 756E7369 		.ascii	"unsigned char\000"
 1275      676E6564 
 1275      20636861 
 1275      7200
 1276              	.LASF20:
 1277 00be 4C43445F 		.ascii	"LCD_Timer_Init\000"
 1277      54696D65 
 1277      725F496E 
 1277      697400
 1278              	.LASF14:
 1279 00cd 72656738 		.ascii	"reg8\000"
 1279      00
 1280              	.LASF5:
 1281 00d2 6C6F6E67 		.ascii	"long unsigned int\000"
 1281      20756E73 
 1281      69676E65 
 1281      6420696E 
 1281      7400
 1282              	.LASF9:
 1283 00e4 75696E74 		.ascii	"uint8\000"
 1283      3800
 1284              	.LASF27:
 1285 00ea 636F6E74 		.ascii	"control\000"
 1285      726F6C00 
 1286              	.LASF39:
 1287 00f2 4C43445F 		.ascii	"LCD_Timer_interruptState\000"
 1287      54696D65 
 1287      725F696E 
 1287      74657272 
 1287      75707453 
 1288              	.LASF22:
 1289 010b 4C43445F 		.ascii	"LCD_Timer_SoftwareCapture\000"
 1289      54696D65 
 1289      725F536F 
 1289      66747761 
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 38


 1289      72654361 
 1290              	.LASF12:
 1291 0125 646F7562 		.ascii	"double\000"
 1291      6C6500
 1292              	.LASF35:
 1293 012c 4C43445F 		.ascii	"LCD_Timer_ClearFIFO\000"
 1293      54696D65 
 1293      725F436C 
 1293      65617246 
 1293      49464F00 
 1294              	.LASF18:
 1295 0140 4C43445F 		.ascii	"LCD_Timer_Start\000"
 1295      54696D65 
 1295      725F5374 
 1295      61727400 
 1296              	.LASF10:
 1297 0150 75696E74 		.ascii	"uint16\000"
 1297      313600
 1298              	.LASF25:
 1299 0157 4C43445F 		.ascii	"LCD_Timer_WriteControlRegister\000"
 1299      54696D65 
 1299      725F5772 
 1299      69746543 
 1299      6F6E7472 
 1300              	.LASF19:
 1301 0176 4C43445F 		.ascii	"LCD_Timer_Stop\000"
 1301      54696D65 
 1301      725F5374 
 1301      6F7000
 1302              	.LASF8:
 1303 0185 756E7369 		.ascii	"unsigned int\000"
 1303      676E6564 
 1303      20696E74 
 1303      00
 1304              	.LASF31:
 1305 0192 4C43445F 		.ascii	"LCD_Timer_ReadCapture\000"
 1305      54696D65 
 1305      725F5265 
 1305      61644361 
 1305      70747572 
 1306              	.LASF7:
 1307 01a8 6C6F6E67 		.ascii	"long long unsigned int\000"
 1307      206C6F6E 
 1307      6720756E 
 1307      7369676E 
 1307      65642069 
 1308              	.LASF32:
 1309 01bf 4C43445F 		.ascii	"LCD_Timer_WriteCounter\000"
 1309      54696D65 
 1309      725F5772 
 1309      69746543 
 1309      6F756E74 
 1310              	.LASF24:
 1311 01d6 4C43445F 		.ascii	"LCD_Timer_ReadControlRegister\000"
 1311      54696D65 
 1311      725F5265 
 1311      6164436F 
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 39


 1311      6E74726F 
 1312              	.LASF36:
 1313 01f4 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1313      4320342E 
 1313      382E3420 
 1313      32303134 
 1313      30353236 
 1314 0227 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1314      20726576 
 1314      6973696F 
 1314      6E203231 
 1314      31333538 
 1315 025a 30202D66 		.ascii	"0 -ffunction-sections\000"
 1315      66756E63 
 1315      74696F6E 
 1315      2D736563 
 1315      74696F6E 
 1316              	.LASF16:
 1317 0270 73697A65 		.ascii	"sizetype\000"
 1317      74797065 
 1317      00
 1318              	.LASF6:
 1319 0279 6C6F6E67 		.ascii	"long long int\000"
 1319      206C6F6E 
 1319      6720696E 
 1319      7400
 1320              	.LASF26:
 1321 0287 696E7465 		.ascii	"interruptMode\000"
 1321      72727570 
 1321      744D6F64 
 1321      6500
 1322              	.LASF17:
 1323 0295 4C43445F 		.ascii	"LCD_Timer_Enable\000"
 1323      54696D65 
 1323      725F456E 
 1323      61626C65 
 1323      00
 1324              	.LASF2:
 1325 02a6 73686F72 		.ascii	"short int\000"
 1325      7420696E 
 1325      7400
 1326              	.LASF37:
 1327 02b0 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\LCD_Timer.c\000"
 1327      6E657261 
 1327      7465645F 
 1327      536F7572 
 1327      63655C50 
 1328              	.LASF4:
 1329 02d5 6C6F6E67 		.ascii	"long int\000"
 1329      20696E74 
 1329      00
 1330              	.LASF34:
 1331 02de 4C43445F 		.ascii	"LCD_Timer_ReadCounter\000"
 1331      54696D65 
 1331      725F5265 
 1331      6164436F 
 1331      756E7465 
ARM GAS  C:\Users\khjtony\AppData\Local\Temp\ccuUZTYj.s 			page 40


 1332              	.LASF23:
 1333 02f4 4C43445F 		.ascii	"LCD_Timer_ReadStatusRegister\000"
 1333      54696D65 
 1333      725F5265 
 1333      61645374 
 1333      61747573 
 1334              	.LASF0:
 1335 0311 7369676E 		.ascii	"signed char\000"
 1335      65642063 
 1335      68617200 
 1336              	.LASF40:
 1337 031d 4C43445F 		.ascii	"LCD_Timer_initVar\000"
 1337      54696D65 
 1337      725F696E 
 1337      69745661 
 1337      7200
 1338              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
