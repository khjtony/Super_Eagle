ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cce2KPBU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"LED_Strip_INT.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.LED_Strip_TX_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	LED_Strip_TX_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	LED_Strip_TX_ISR, %function
  24              	LED_Strip_TX_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\LED_Strip_INT.c"
   1:.\Generated_Source\PSoC5/LED_Strip_INT.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * File Name: LED_Strip_INT.c
   3:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *
   5:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Description:
   6:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  This file provides all Interrupt Service Routine (ISR) for the SPI Master
   7:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  component.
   8:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *
   9:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Note:
  10:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  None.
  11:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *
  12:.\Generated_Source\PSoC5/LED_Strip_INT.c **** ********************************************************************************
  13:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
  19:.\Generated_Source\PSoC5/LED_Strip_INT.c **** #include "LED_Strip_PVT.h"
  20:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
  21:.\Generated_Source\PSoC5/LED_Strip_INT.c **** /* User code required at start of ISR */
  22:.\Generated_Source\PSoC5/LED_Strip_INT.c **** /* `#START LED_Strip_ISR_START_DEF` */
  23:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
  24:.\Generated_Source\PSoC5/LED_Strip_INT.c **** /* `#END` */
  25:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
  26:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
  27:.\Generated_Source\PSoC5/LED_Strip_INT.c **** /*******************************************************************************
  28:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Function Name: LED_Strip_TX_ISR
  29:.\Generated_Source\PSoC5/LED_Strip_INT.c **** ********************************************************************************
  30:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *
  31:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Summary:
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cce2KPBU.s 			page 2


  32:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  Interrupt Service Routine for TX portion of the SPI Master.
  33:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *
  34:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Parameters:
  35:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  None.
  36:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *
  37:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Return:
  38:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  None.
  39:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *
  40:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Global variables:
  41:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  LED_Strip_txBufferWrite - used for the account of the bytes which
  42:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  have been written down in the TX software buffer.
  43:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  LED_Strip_txBufferRead - used for the account of the bytes which
  44:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  have been read from the TX software buffer, modified when exist data to
  45:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  sending and FIFO Not Full.
  46:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  LED_Strip_txBuffer[LED_Strip_TX_BUFFER_SIZE] - used to store
  47:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  data to sending.
  48:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  All described above Global variables are used when Software Buffer is used.
  49:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *
  50:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *******************************************************************************/
  51:.\Generated_Source\PSoC5/LED_Strip_INT.c **** CY_ISR(LED_Strip_TX_ISR)
  52:.\Generated_Source\PSoC5/LED_Strip_INT.c **** {
  27              		.loc 1 52 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  53:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     #if(LED_Strip_TX_SOFTWARE_BUF_ENABLED)
  54:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         uint8 tmpStatus;
  55:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     #endif /* (LED_Strip_TX_SOFTWARE_BUF_ENABLED) */
  56:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
  57:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     /* User code required at start of ISR */
  58:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     /* `#START LED_Strip_TX_ISR_START` */
  59:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
  60:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     /* `#END` */
  61:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
  62:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     #if(LED_Strip_TX_SOFTWARE_BUF_ENABLED)
  63:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         /* Check if TX data buffer is not empty and there is space in TX FIFO */
  64:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         while(LED_Strip_txBufferRead != LED_Strip_txBufferWrite)
  65:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         {
  66:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             tmpStatus = LED_Strip_GET_STATUS_TX(LED_Strip_swStatusTx);
  67:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             LED_Strip_swStatusTx = tmpStatus;
  68:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
  69:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             if(0u != (LED_Strip_swStatusTx & LED_Strip_STS_TX_FIFO_NOT_FULL))
  70:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             {
  71:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 if(0u == LED_Strip_txBufferFull)
  72:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 {
  73:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                    LED_Strip_txBufferRead++;
  74:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
  75:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                     if(LED_Strip_txBufferRead >= LED_Strip_TX_BUFFER_SIZE)
  76:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                     {
  77:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                         LED_Strip_txBufferRead = 0u;
  78:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                     }
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cce2KPBU.s 			page 3


  79:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 }
  80:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 else
  81:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 {
  82:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                     LED_Strip_txBufferFull = 0u;
  83:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 }
  84:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
  85:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 /* Put data element into the TX FIFO */
  86:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 CY_SET_REG8(LED_Strip_TXDATA_PTR, 
  87:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                                              LED_Strip_txBuffer[LED_Strip_txBufferRead]);
  88:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             }
  89:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             else
  90:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             {
  91:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 break;
  92:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             }
  93:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         }
  94:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
  95:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         if(LED_Strip_txBufferRead == LED_Strip_txBufferWrite)
  96:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         {
  97:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             /* TX Buffer is EMPTY: disable interrupt on TX NOT FULL */
  98:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             LED_Strip_TX_STATUS_MASK_REG &= ((uint8) ~LED_Strip_STS_TX_FIFO_NOT_FULL);
  99:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         }
 100:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 101:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     #endif /* (LED_Strip_TX_SOFTWARE_BUF_ENABLED) */
 102:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 103:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     /* User code required at end of ISR (Optional) */
 104:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     /* `#START LED_Strip_TX_ISR_END` */
 105:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 106:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     /* `#END` */
 107:.\Generated_Source\PSoC5/LED_Strip_INT.c **** }
  37              		.loc 1 107 0
  38 0004 BD46     		mov	sp, r7
  39              		@ sp needed
  40 0006 5DF8047B 		ldr	r7, [sp], #4
  41 000a 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE0:
  44              		.size	LED_Strip_TX_ISR, .-LED_Strip_TX_ISR
  45              		.section	.text.LED_Strip_RX_ISR,"ax",%progbits
  46              		.align	2
  47              		.global	LED_Strip_RX_ISR
  48              		.thumb
  49              		.thumb_func
  50              		.type	LED_Strip_RX_ISR, %function
  51              	LED_Strip_RX_ISR:
  52              	.LFB1:
 108:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 109:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 110:.\Generated_Source\PSoC5/LED_Strip_INT.c **** /*******************************************************************************
 111:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Function Name: LED_Strip_RX_ISR
 112:.\Generated_Source\PSoC5/LED_Strip_INT.c **** ********************************************************************************
 113:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *
 114:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Summary:
 115:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  Interrupt Service Routine for RX portion of the SPI Master.
 116:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *
 117:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Parameters:
 118:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  None.
 119:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cce2KPBU.s 			page 4


 120:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Return:
 121:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  None.
 122:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *
 123:.\Generated_Source\PSoC5/LED_Strip_INT.c **** * Global variables:
 124:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  LED_Strip_rxBufferWrite - used for the account of the bytes which
 125:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  have been written down in the RX software buffer modified when FIFO contains
 126:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  new data.
 127:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  LED_Strip_rxBufferRead - used for the account of the bytes which
 128:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  have been read from the RX software buffer, modified when overflow occurred.
 129:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  LED_Strip_rxBuffer[LED_Strip_RX_BUFFER_SIZE] - used to store
 130:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  received data, modified when FIFO contains new data.
 131:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *  All described above Global variables are used when Software Buffer is used.
 132:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *
 133:.\Generated_Source\PSoC5/LED_Strip_INT.c **** *******************************************************************************/
 134:.\Generated_Source\PSoC5/LED_Strip_INT.c **** CY_ISR(LED_Strip_RX_ISR)
 135:.\Generated_Source\PSoC5/LED_Strip_INT.c **** {
  53              		.loc 1 135 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 1, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58 0000 80B4     		push	{r7}
  59              		.cfi_def_cfa_offset 4
  60              		.cfi_offset 7, -4
  61 0002 00AF     		add	r7, sp, #0
  62              		.cfi_def_cfa_register 7
 136:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     #if(LED_Strip_RX_SOFTWARE_BUF_ENABLED)
 137:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         uint8 tmpStatus;
 138:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         uint8 rxData;
 139:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     #endif /* (LED_Strip_RX_SOFTWARE_BUF_ENABLED) */
 140:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 141:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     /* User code required at start of ISR */
 142:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     /* `#START LED_Strip_RX_ISR_START` */
 143:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 144:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     /* `#END` */
 145:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 146:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     #if(LED_Strip_RX_SOFTWARE_BUF_ENABLED)
 147:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 148:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         tmpStatus = LED_Strip_GET_STATUS_RX(LED_Strip_swStatusRx);
 149:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         LED_Strip_swStatusRx = tmpStatus;
 150:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 151:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         /* Check if RX data FIFO has some data to be moved into the RX Buffer */
 152:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         while(0u != (LED_Strip_swStatusRx & LED_Strip_STS_RX_FIFO_NOT_EMPTY))
 153:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         {
 154:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             rxData = CY_GET_REG8(LED_Strip_RXDATA_PTR);
 155:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 156:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             /* Set next pointer. */
 157:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             LED_Strip_rxBufferWrite++;
 158:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             if(LED_Strip_rxBufferWrite >= LED_Strip_RX_BUFFER_SIZE)
 159:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             {
 160:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 LED_Strip_rxBufferWrite = 0u;
 161:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             }
 162:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 163:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             if(LED_Strip_rxBufferWrite == LED_Strip_rxBufferRead)
 164:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             {
 165:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 LED_Strip_rxBufferRead++;
 166:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 if(LED_Strip_rxBufferRead >= LED_Strip_RX_BUFFER_SIZE)
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cce2KPBU.s 			page 5


 167:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 {
 168:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                     LED_Strip_rxBufferRead = 0u;
 169:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 }
 170:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 171:.\Generated_Source\PSoC5/LED_Strip_INT.c ****                 LED_Strip_rxBufferFull = 1u;
 172:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             }
 173:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 174:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             /* Move data from the FIFO to the Buffer */
 175:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             LED_Strip_rxBuffer[LED_Strip_rxBufferWrite] = rxData;
 176:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 177:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             tmpStatus = LED_Strip_GET_STATUS_RX(LED_Strip_swStatusRx);
 178:.\Generated_Source\PSoC5/LED_Strip_INT.c ****             LED_Strip_swStatusRx = tmpStatus;
 179:.\Generated_Source\PSoC5/LED_Strip_INT.c ****         }
 180:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 181:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     #endif /* (LED_Strip_RX_SOFTWARE_BUF_ENABLED) */
 182:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 183:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     /* User code required at end of ISR (Optional) */
 184:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     /* `#START LED_Strip_RX_ISR_END` */
 185:.\Generated_Source\PSoC5/LED_Strip_INT.c **** 
 186:.\Generated_Source\PSoC5/LED_Strip_INT.c ****     /* `#END` */
 187:.\Generated_Source\PSoC5/LED_Strip_INT.c **** }
  63              		.loc 1 187 0
  64 0004 BD46     		mov	sp, r7
  65              		@ sp needed
  66 0006 5DF8047B 		ldr	r7, [sp], #4
  67 000a 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE1:
  70              		.size	LED_Strip_RX_ISR, .-LED_Strip_RX_ISR
  71              		.text
  72              	.Letext0:
  73              		.section	.debug_info,"",%progbits
  74              	.Ldebug_info0:
  75 0000 A6000000 		.4byte	0xa6
  76 0004 0400     		.2byte	0x4
  77 0006 00000000 		.4byte	.Ldebug_abbrev0
  78 000a 04       		.byte	0x4
  79 000b 01       		.uleb128 0x1
  80 000c 18010000 		.4byte	.LASF15
  81 0010 01       		.byte	0x1
  82 0011 82000000 		.4byte	.LASF16
  83 0015 D7000000 		.4byte	.LASF17
  84 0019 00000000 		.4byte	.Ldebug_ranges0+0
  85 001d 00000000 		.4byte	0
  86 0021 00000000 		.4byte	.Ldebug_line0
  87 0025 02       		.uleb128 0x2
  88 0026 01       		.byte	0x1
  89 0027 06       		.byte	0x6
  90 0028 C5000000 		.4byte	.LASF0
  91 002c 02       		.uleb128 0x2
  92 002d 01       		.byte	0x1
  93 002e 08       		.byte	0x8
  94 002f 66000000 		.4byte	.LASF1
  95 0033 02       		.uleb128 0x2
  96 0034 02       		.byte	0x2
  97 0035 05       		.byte	0x5
  98 0036 0E010000 		.4byte	.LASF2
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cce2KPBU.s 			page 6


  99 003a 02       		.uleb128 0x2
 100 003b 02       		.byte	0x2
 101 003c 07       		.byte	0x7
 102 003d B2000000 		.4byte	.LASF3
 103 0041 02       		.uleb128 0x2
 104 0042 04       		.byte	0x4
 105 0043 05       		.byte	0x5
 106 0044 79000000 		.4byte	.LASF4
 107 0048 02       		.uleb128 0x2
 108 0049 04       		.byte	0x4
 109 004a 07       		.byte	0x7
 110 004b 1B000000 		.4byte	.LASF5
 111 004f 02       		.uleb128 0x2
 112 0050 08       		.byte	0x8
 113 0051 05       		.byte	0x5
 114 0052 00000000 		.4byte	.LASF6
 115 0056 02       		.uleb128 0x2
 116 0057 08       		.byte	0x8
 117 0058 07       		.byte	0x7
 118 0059 2D000000 		.4byte	.LASF7
 119 005d 03       		.uleb128 0x3
 120 005e 04       		.byte	0x4
 121 005f 05       		.byte	0x5
 122 0060 696E7400 		.ascii	"int\000"
 123 0064 02       		.uleb128 0x2
 124 0065 04       		.byte	0x4
 125 0066 07       		.byte	0x7
 126 0067 0E000000 		.4byte	.LASF8
 127 006b 02       		.uleb128 0x2
 128 006c 04       		.byte	0x4
 129 006d 04       		.byte	0x4
 130 006e D1000000 		.4byte	.LASF9
 131 0072 02       		.uleb128 0x2
 132 0073 08       		.byte	0x8
 133 0074 04       		.byte	0x4
 134 0075 AB000000 		.4byte	.LASF10
 135 0079 02       		.uleb128 0x2
 136 007a 01       		.byte	0x1
 137 007b 08       		.byte	0x8
 138 007c 74000000 		.4byte	.LASF11
 139 0080 02       		.uleb128 0x2
 140 0081 04       		.byte	0x4
 141 0082 07       		.byte	0x7
 142 0083 94010000 		.4byte	.LASF12
 143 0087 04       		.uleb128 0x4
 144 0088 55000000 		.4byte	.LASF13
 145 008c 01       		.byte	0x1
 146 008d 33       		.byte	0x33
 147 008e 00000000 		.4byte	.LFB0
 148 0092 0C000000 		.4byte	.LFE0-.LFB0
 149 0096 01       		.uleb128 0x1
 150 0097 9C       		.byte	0x9c
 151 0098 04       		.uleb128 0x4
 152 0099 44000000 		.4byte	.LASF14
 153 009d 01       		.byte	0x1
 154 009e 86       		.byte	0x86
 155 009f 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cce2KPBU.s 			page 7


 156 00a3 0C000000 		.4byte	.LFE1-.LFB1
 157 00a7 01       		.uleb128 0x1
 158 00a8 9C       		.byte	0x9c
 159 00a9 00       		.byte	0
 160              		.section	.debug_abbrev,"",%progbits
 161              	.Ldebug_abbrev0:
 162 0000 01       		.uleb128 0x1
 163 0001 11       		.uleb128 0x11
 164 0002 01       		.byte	0x1
 165 0003 25       		.uleb128 0x25
 166 0004 0E       		.uleb128 0xe
 167 0005 13       		.uleb128 0x13
 168 0006 0B       		.uleb128 0xb
 169 0007 03       		.uleb128 0x3
 170 0008 0E       		.uleb128 0xe
 171 0009 1B       		.uleb128 0x1b
 172 000a 0E       		.uleb128 0xe
 173 000b 55       		.uleb128 0x55
 174 000c 17       		.uleb128 0x17
 175 000d 11       		.uleb128 0x11
 176 000e 01       		.uleb128 0x1
 177 000f 10       		.uleb128 0x10
 178 0010 17       		.uleb128 0x17
 179 0011 00       		.byte	0
 180 0012 00       		.byte	0
 181 0013 02       		.uleb128 0x2
 182 0014 24       		.uleb128 0x24
 183 0015 00       		.byte	0
 184 0016 0B       		.uleb128 0xb
 185 0017 0B       		.uleb128 0xb
 186 0018 3E       		.uleb128 0x3e
 187 0019 0B       		.uleb128 0xb
 188 001a 03       		.uleb128 0x3
 189 001b 0E       		.uleb128 0xe
 190 001c 00       		.byte	0
 191 001d 00       		.byte	0
 192 001e 03       		.uleb128 0x3
 193 001f 24       		.uleb128 0x24
 194 0020 00       		.byte	0
 195 0021 0B       		.uleb128 0xb
 196 0022 0B       		.uleb128 0xb
 197 0023 3E       		.uleb128 0x3e
 198 0024 0B       		.uleb128 0xb
 199 0025 03       		.uleb128 0x3
 200 0026 08       		.uleb128 0x8
 201 0027 00       		.byte	0
 202 0028 00       		.byte	0
 203 0029 04       		.uleb128 0x4
 204 002a 2E       		.uleb128 0x2e
 205 002b 00       		.byte	0
 206 002c 3F       		.uleb128 0x3f
 207 002d 19       		.uleb128 0x19
 208 002e 03       		.uleb128 0x3
 209 002f 0E       		.uleb128 0xe
 210 0030 3A       		.uleb128 0x3a
 211 0031 0B       		.uleb128 0xb
 212 0032 3B       		.uleb128 0x3b
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cce2KPBU.s 			page 8


 213 0033 0B       		.uleb128 0xb
 214 0034 27       		.uleb128 0x27
 215 0035 19       		.uleb128 0x19
 216 0036 11       		.uleb128 0x11
 217 0037 01       		.uleb128 0x1
 218 0038 12       		.uleb128 0x12
 219 0039 06       		.uleb128 0x6
 220 003a 40       		.uleb128 0x40
 221 003b 18       		.uleb128 0x18
 222 003c 9742     		.uleb128 0x2117
 223 003e 19       		.uleb128 0x19
 224 003f 00       		.byte	0
 225 0040 00       		.byte	0
 226 0041 00       		.byte	0
 227              		.section	.debug_aranges,"",%progbits
 228 0000 24000000 		.4byte	0x24
 229 0004 0200     		.2byte	0x2
 230 0006 00000000 		.4byte	.Ldebug_info0
 231 000a 04       		.byte	0x4
 232 000b 00       		.byte	0
 233 000c 0000     		.2byte	0
 234 000e 0000     		.2byte	0
 235 0010 00000000 		.4byte	.LFB0
 236 0014 0C000000 		.4byte	.LFE0-.LFB0
 237 0018 00000000 		.4byte	.LFB1
 238 001c 0C000000 		.4byte	.LFE1-.LFB1
 239 0020 00000000 		.4byte	0
 240 0024 00000000 		.4byte	0
 241              		.section	.debug_ranges,"",%progbits
 242              	.Ldebug_ranges0:
 243 0000 00000000 		.4byte	.LFB0
 244 0004 0C000000 		.4byte	.LFE0
 245 0008 00000000 		.4byte	.LFB1
 246 000c 0C000000 		.4byte	.LFE1
 247 0010 00000000 		.4byte	0
 248 0014 00000000 		.4byte	0
 249              		.section	.debug_line,"",%progbits
 250              	.Ldebug_line0:
 251 0000 6A000000 		.section	.debug_str,"MS",%progbits,1
 251      02003F00 
 251      00000201 
 251      FB0E0D00 
 251      01010101 
 252              	.LASF6:
 253 0000 6C6F6E67 		.ascii	"long long int\000"
 253      206C6F6E 
 253      6720696E 
 253      7400
 254              	.LASF8:
 255 000e 756E7369 		.ascii	"unsigned int\000"
 255      676E6564 
 255      20696E74 
 255      00
 256              	.LASF5:
 257 001b 6C6F6E67 		.ascii	"long unsigned int\000"
 257      20756E73 
 257      69676E65 
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cce2KPBU.s 			page 9


 257      6420696E 
 257      7400
 258              	.LASF7:
 259 002d 6C6F6E67 		.ascii	"long long unsigned int\000"
 259      206C6F6E 
 259      6720756E 
 259      7369676E 
 259      65642069 
 260              	.LASF14:
 261 0044 4C45445F 		.ascii	"LED_Strip_RX_ISR\000"
 261      53747269 
 261      705F5258 
 261      5F495352 
 261      00
 262              	.LASF13:
 263 0055 4C45445F 		.ascii	"LED_Strip_TX_ISR\000"
 263      53747269 
 263      705F5458 
 263      5F495352 
 263      00
 264              	.LASF1:
 265 0066 756E7369 		.ascii	"unsigned char\000"
 265      676E6564 
 265      20636861 
 265      7200
 266              	.LASF11:
 267 0074 63686172 		.ascii	"char\000"
 267      00
 268              	.LASF4:
 269 0079 6C6F6E67 		.ascii	"long int\000"
 269      20696E74 
 269      00
 270              	.LASF16:
 271 0082 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\LED_Strip_INT.c\000"
 271      6E657261 
 271      7465645F 
 271      536F7572 
 271      63655C50 
 272              	.LASF10:
 273 00ab 646F7562 		.ascii	"double\000"
 273      6C6500
 274              	.LASF3:
 275 00b2 73686F72 		.ascii	"short unsigned int\000"
 275      7420756E 
 275      7369676E 
 275      65642069 
 275      6E7400
 276              	.LASF0:
 277 00c5 7369676E 		.ascii	"signed char\000"
 277      65642063 
 277      68617200 
 278              	.LASF9:
 279 00d1 666C6F61 		.ascii	"float\000"
 279      7400
 280              	.LASF17:
 281 00d7 443A5C77 		.ascii	"D:\\workspace\\super-eagle\\Super-Eagle\\Super-Eagl"
 281      6F726B73 
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cce2KPBU.s 			page 10


 281      70616365 
 281      5C737570 
 281      65722D65 
 282 0106 652E6379 		.ascii	"e.cydsn\000"
 282      64736E00 
 283              	.LASF2:
 284 010e 73686F72 		.ascii	"short int\000"
 284      7420696E 
 284      7400
 285              	.LASF15:
 286 0118 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 286      4320342E 
 286      382E3420 
 286      32303134 
 286      30353236 
 287 014b 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 287      20726576 
 287      6973696F 
 287      6E203231 
 287      31333538 
 288 017e 30202D66 		.ascii	"0 -ffunction-sections\000"
 288      66756E63 
 288      74696F6E 
 288      2D736563 
 288      74696F6E 
 289              	.LASF12:
 290 0194 73697A65 		.ascii	"sizetype\000"
 290      74797065 
 290      00
 291              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
