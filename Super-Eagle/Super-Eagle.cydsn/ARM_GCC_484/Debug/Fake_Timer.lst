ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Fake_Timer.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	Fake_Timer_initVar
  19              		.bss
  20              		.type	Fake_Timer_initVar, %object
  21              		.size	Fake_Timer_initVar, 1
  22              	Fake_Timer_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.Fake_Timer_Init,"ax",%progbits
  25              		.align	2
  26              		.global	Fake_Timer_Init
  27              		.thumb
  28              		.thumb_func
  29              		.type	Fake_Timer_Init, %function
  30              	Fake_Timer_Init:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\Fake_Timer.c"
   1:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Fake_Timer.c **** * File Name: Fake_Timer.c
   3:.\Generated_Source\PSoC5/Fake_Timer.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/Fake_Timer.c **** *
   5:.\Generated_Source\PSoC5/Fake_Timer.c **** * Description:
   6:.\Generated_Source\PSoC5/Fake_Timer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/Fake_Timer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/Fake_Timer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/Fake_Timer.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/Fake_Timer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/Fake_Timer.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/Fake_Timer.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/Fake_Timer.c **** *
  15:.\Generated_Source\PSoC5/Fake_Timer.c **** * Note:
  16:.\Generated_Source\PSoC5/Fake_Timer.c **** *
  17:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/Fake_Timer.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/Fake_Timer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/Fake_Timer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/Fake_Timer.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  24:.\Generated_Source\PSoC5/Fake_Timer.c **** #include "Fake_Timer.h"
  25:.\Generated_Source\PSoC5/Fake_Timer.c **** 
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 2


  26:.\Generated_Source\PSoC5/Fake_Timer.c **** uint8 Fake_Timer_initVar = 0u;
  27:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  28:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  29:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_Init
  31:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
  32:.\Generated_Source\PSoC5/Fake_Timer.c **** *
  33:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
  34:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/Fake_Timer.c **** *
  36:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
  37:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
  38:.\Generated_Source\PSoC5/Fake_Timer.c **** *
  39:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
  40:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
  41:.\Generated_Source\PSoC5/Fake_Timer.c **** *
  42:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_Init(void) 
  44:.\Generated_Source\PSoC5/Fake_Timer.c **** {
  33              		.loc 1 44 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 82B0     		sub	sp, sp, #8
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  45:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if(!Fake_Timer_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/Fake_Timer.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/Fake_Timer.c ****             uint8 Fake_Timer_interruptState;
  48:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  50:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if (Fake_Timer_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CONTROL &= Fake_Timer_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  54:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/Fake_Timer.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/Fake_Timer.c ****             Fake_Timer_CONTROL2 &= ((uint8)(~Fake_Timer_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/Fake_Timer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  59:.\Generated_Source\PSoC5/Fake_Timer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/Fake_Timer.c ****             Fake_Timer_CONTROL3 &= ((uint8)(~Fake_Timer_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/Fake_Timer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  63:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/Fake_Timer.c ****         #if (Fake_Timer_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/Fake_Timer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/Fake_Timer.c ****             Fake_Timer_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/Fake_Timer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  69:.\Generated_Source\PSoC5/Fake_Timer.c ****         #if (Fake_Timer_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/Fake_Timer.c ****             #if (CY_PSOC5A)
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 3


  71:.\Generated_Source\PSoC5/Fake_Timer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/Fake_Timer.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/Fake_Timer.c ****                 Fake_Timer_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/Fake_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  76:.\Generated_Source\PSoC5/Fake_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/Fake_Timer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/Fake_Timer.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/Fake_Timer.c ****                 Fake_Timer_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/Fake_Timer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  82:.\Generated_Source\PSoC5/Fake_Timer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  84:.\Generated_Source\PSoC5/Fake_Timer.c ****         #if (Fake_Timer_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/Fake_Timer.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/Fake_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/Fake_Timer.c ****                 Fake_Timer_CONTROL2 |= Fake_Timer_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/Fake_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  90:.\Generated_Source\PSoC5/Fake_Timer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/Fake_Timer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/Fake_Timer.c ****                 Fake_Timer_CONTROL3 &= ((uint8)(~Fake_Timer_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/Fake_Timer.c ****                 Fake_Timer_CONTROL3 |= Fake_Timer_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  95:.\Generated_Source\PSoC5/Fake_Timer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/Fake_Timer.c ****                 Fake_Timer_CONTROL3 &= ((uint8)(~Fake_Timer_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/Fake_Timer.c ****                 Fake_Timer_CONTROL3 |= Fake_Timer_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/Fake_Timer.c **** 
  99:.\Generated_Source\PSoC5/Fake_Timer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/Fake_Timer.c ****                 Fake_Timer_CONTROL3 |= Fake_Timer_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/Fake_Timer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 103:.\Generated_Source\PSoC5/Fake_Timer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 105:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_RT1 &= ((uint8)(~Fake_Timer_RT1_MASK));
 107:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_RT1 |= Fake_Timer_SYNC;
 108:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 109:.\Generated_Source\PSoC5/Fake_Timer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_RT1 &= ((uint8)(~Fake_Timer_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_RT1 |= Fake_Timer_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 113:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CONTROL2 |= Fake_Timer_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 117:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/Fake_Timer.c ****     Fake_Timer_WritePeriod(Fake_Timer_INIT_PERIOD);
  45              		.loc 1 118 0
  46 0006 0F48     		ldr	r0, .L2
  47 0008 FFF7FEFF 		bl	Fake_Timer_WritePeriod
 119:.\Generated_Source\PSoC5/Fake_Timer.c ****     Fake_Timer_WriteCounter(Fake_Timer_INIT_PERIOD);
  48              		.loc 1 119 0
  49 000c 0D48     		ldr	r0, .L2
  50 000e FFF7FEFF 		bl	Fake_Timer_WriteCounter
 120:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 121:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if (Fake_Timer_UsingHWCaptureCounter)/* Capture counter is enabled */
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 4


 122:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CAPTURE_COUNT_CTRL |= Fake_Timer_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_SetCaptureCount(Fake_Timer_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 126:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if (!Fake_Timer_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/Fake_Timer.c ****         #if (Fake_Timer_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/Fake_Timer.c ****             Fake_Timer_SetCaptureMode(Fake_Timer_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/Fake_Timer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 131:.\Generated_Source\PSoC5/Fake_Timer.c ****         #if (Fake_Timer_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/Fake_Timer.c ****             #if (!Fake_Timer_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC5/Fake_Timer.c ****                 if (0u == (Fake_Timer_CONTROL & Fake_Timer__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC5/Fake_Timer.c ****                 {
 135:.\Generated_Source\PSoC5/Fake_Timer.c ****                     Fake_Timer_SetTriggerMode(Fake_Timer_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC5/Fake_Timer.c ****                 }
 137:.\Generated_Source\PSoC5/Fake_Timer.c ****             #endif /* (!Fake_Timer_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC5/Fake_Timer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 140:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_interruptState = CyEnterCriticalSection();
  51              		.loc 1 142 0
  52 0012 FFF7FEFF 		bl	CyEnterCriticalSection
  53 0016 0346     		mov	r3, r0
  54 0018 FB71     		strb	r3, [r7, #7]
 143:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 144:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_STATUS_AUX_CTRL |= Fake_Timer_STATUS_ACTL_INT_EN_MASK;
  55              		.loc 1 145 0
  56 001a 0B4B     		ldr	r3, .L2+4
  57 001c 0A4A     		ldr	r2, .L2+4
  58 001e 1278     		ldrb	r2, [r2]
  59 0020 D2B2     		uxtb	r2, r2
  60 0022 42F01002 		orr	r2, r2, #16
  61 0026 D2B2     		uxtb	r2, r2
  62 0028 1A70     		strb	r2, [r3]
 146:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 147:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC5/Fake_Timer.c ****         CyExitCriticalSection(Fake_Timer_interruptState);
  63              		.loc 1 148 0
  64 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  65 002c 1846     		mov	r0, r3
  66 002e FFF7FEFF 		bl	CyExitCriticalSection
 149:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 150:.\Generated_Source\PSoC5/Fake_Timer.c ****         #if (Fake_Timer_EnableTriggerMode)
 151:.\Generated_Source\PSoC5/Fake_Timer.c ****             Fake_Timer_EnableTrigger();
 152:.\Generated_Source\PSoC5/Fake_Timer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC5/Fake_Timer.c **** 		
 154:.\Generated_Source\PSoC5/Fake_Timer.c **** 		
 155:.\Generated_Source\PSoC5/Fake_Timer.c ****         #if (Fake_Timer_InterruptOnCaptureCount && !Fake_Timer_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC5/Fake_Timer.c ****             Fake_Timer_SetInterruptCount(Fake_Timer_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC5/Fake_Timer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 159:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_ClearFIFO();
  67              		.loc 1 159 0
  68 0032 FFF7FEFF 		bl	Fake_Timer_ClearFIFO
 160:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* Configure additional features of UDB implementation */
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 5


 161:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 162:.\Generated_Source\PSoC5/Fake_Timer.c ****     Fake_Timer_SetInterruptMode(Fake_Timer_INIT_INTERRUPT_MODE);
  69              		.loc 1 162 0
  70 0036 0120     		movs	r0, #1
  71 0038 FFF7FEFF 		bl	Fake_Timer_SetInterruptMode
 163:.\Generated_Source\PSoC5/Fake_Timer.c **** }
  72              		.loc 1 163 0
  73 003c 0837     		adds	r7, r7, #8
  74 003e BD46     		mov	sp, r7
  75              		@ sp needed
  76 0040 80BD     		pop	{r7, pc}
  77              	.L3:
  78 0042 00BF     		.align	2
  79              	.L2:
  80 0044 AFE90100 		.word	125359
  81 0048 96640040 		.word	1073767574
  82              		.cfi_endproc
  83              	.LFE0:
  84              		.size	Fake_Timer_Init, .-Fake_Timer_Init
  85              		.section	.text.Fake_Timer_Enable,"ax",%progbits
  86              		.align	2
  87              		.global	Fake_Timer_Enable
  88              		.thumb
  89              		.thumb_func
  90              		.type	Fake_Timer_Enable, %function
  91              	Fake_Timer_Enable:
  92              	.LFB1:
 164:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 165:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 166:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_Enable
 168:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 170:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 171:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 173:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 174:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 175:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 176:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 177:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 178:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 179:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_Enable(void) 
 181:.\Generated_Source\PSoC5/Fake_Timer.c **** {
  93              		.loc 1 181 0
  94              		.cfi_startproc
  95              		@ args = 0, pretend = 0, frame = 0
  96              		@ frame_needed = 1, uses_anonymous_args = 0
  97              		@ link register save eliminated.
  98 0000 80B4     		push	{r7}
  99              		.cfi_def_cfa_offset 4
 100              		.cfi_offset 7, -4
 101 0002 00AF     		add	r7, sp, #0
 102              		.cfi_def_cfa_register 7
 182:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if (Fake_Timer_UsingFixedFunction)
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 6


 184:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_GLOBAL_ENABLE |= Fake_Timer_BLOCK_EN_MASK;
 185:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_GLOBAL_STBY_ENABLE |= Fake_Timer_BLOCK_STBY_EN_MASK;
 186:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 188:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if (!Fake_Timer_UDB_CONTROL_REG_REMOVED || Fake_Timer_UsingFixedFunction)
 190:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CONTROL |= Fake_Timer_CTRL_ENABLE;
 103              		.loc 1 190 0
 104 0004 054B     		ldr	r3, .L5
 105 0006 054A     		ldr	r2, .L5
 106 0008 1278     		ldrb	r2, [r2]
 107 000a D2B2     		uxtb	r2, r2
 108 000c 62F07F02 		orn	r2, r2, #127
 109 0010 D2B2     		uxtb	r2, r2
 110 0012 1A70     		strb	r2, [r3]
 191:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 111              		.loc 1 192 0
 112 0014 BD46     		mov	sp, r7
 113              		@ sp needed
 114 0016 5DF8047B 		ldr	r7, [sp], #4
 115 001a 7047     		bx	lr
 116              	.L6:
 117              		.align	2
 118              	.L5:
 119 001c 74640040 		.word	1073767540
 120              		.cfi_endproc
 121              	.LFE1:
 122              		.size	Fake_Timer_Enable, .-Fake_Timer_Enable
 123              		.section	.text.Fake_Timer_Start,"ax",%progbits
 124              		.align	2
 125              		.global	Fake_Timer_Start
 126              		.thumb
 127              		.thumb_func
 128              		.type	Fake_Timer_Start, %function
 129              	Fake_Timer_Start:
 130              	.LFB2:
 193:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 194:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 195:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_Start
 197:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 198:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 199:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 200:.\Generated_Source\PSoC5/Fake_Timer.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC5/Fake_Timer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC5/Fake_Timer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 204:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 205:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 206:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 207:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 208:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 209:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 210:.\Generated_Source\PSoC5/Fake_Timer.c **** * Global variables:
 211:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Fake_Timer_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC5/Fake_Timer.c **** *   first time. Is used to ensure that initialization happens only once.
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 7


 213:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 214:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_Start(void) 
 216:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 131              		.loc 1 216 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135 0000 80B5     		push	{r7, lr}
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 7, -8
 138              		.cfi_offset 14, -4
 139 0002 00AF     		add	r7, sp, #0
 140              		.cfi_def_cfa_register 7
 217:.\Generated_Source\PSoC5/Fake_Timer.c ****     if(Fake_Timer_initVar == 0u)
 141              		.loc 1 217 0
 142 0004 054B     		ldr	r3, .L9
 143 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 144 0008 002B     		cmp	r3, #0
 145 000a 04D1     		bne	.L8
 218:.\Generated_Source\PSoC5/Fake_Timer.c ****     {
 219:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_Init();
 146              		.loc 1 219 0
 147 000c FFF7FEFF 		bl	Fake_Timer_Init
 220:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 221:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_initVar = 1u;   /* Clear this bit for Initialization */
 148              		.loc 1 221 0
 149 0010 024B     		ldr	r3, .L9
 150 0012 0122     		movs	r2, #1
 151 0014 1A70     		strb	r2, [r3]
 152              	.L8:
 222:.\Generated_Source\PSoC5/Fake_Timer.c ****     }
 223:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 224:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC5/Fake_Timer.c ****     Fake_Timer_Enable();
 153              		.loc 1 225 0
 154 0016 FFF7FEFF 		bl	Fake_Timer_Enable
 226:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 155              		.loc 1 226 0
 156 001a 80BD     		pop	{r7, pc}
 157              	.L10:
 158              		.align	2
 159              	.L9:
 160 001c 00000000 		.word	Fake_Timer_initVar
 161              		.cfi_endproc
 162              	.LFE2:
 163              		.size	Fake_Timer_Start, .-Fake_Timer_Start
 164              		.section	.text.Fake_Timer_Stop,"ax",%progbits
 165              		.align	2
 166              		.global	Fake_Timer_Stop
 167              		.thumb
 168              		.thumb_func
 169              		.type	Fake_Timer_Stop, %function
 170              	Fake_Timer_Stop:
 171              	.LFB3:
 227:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 228:.\Generated_Source\PSoC5/Fake_Timer.c **** 
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 8


 229:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 230:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_Stop
 231:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 232:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 233:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 234:.\Generated_Source\PSoC5/Fake_Timer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC5/Fake_Timer.c **** *  interrupts.
 236:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 237:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 238:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 239:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 240:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 241:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 242:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 243:.\Generated_Source\PSoC5/Fake_Timer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC5/Fake_Timer.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 246:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_Stop(void) 
 248:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 172              		.loc 1 248 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 1, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 177 0000 80B4     		push	{r7}
 178              		.cfi_def_cfa_offset 4
 179              		.cfi_offset 7, -4
 180 0002 00AF     		add	r7, sp, #0
 181              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if(!Fake_Timer_UDB_CONTROL_REG_REMOVED || Fake_Timer_UsingFixedFunction)
 251:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CONTROL &= ((uint8)(~Fake_Timer_CTRL_ENABLE));
 182              		.loc 1 251 0
 183 0004 054B     		ldr	r3, .L12
 184 0006 054A     		ldr	r2, .L12
 185 0008 1278     		ldrb	r2, [r2]
 186 000a D2B2     		uxtb	r2, r2
 187 000c 02F07F02 		and	r2, r2, #127
 188 0010 D2B2     		uxtb	r2, r2
 189 0012 1A70     		strb	r2, [r3]
 252:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 254:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if (Fake_Timer_UsingFixedFunction)
 256:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_GLOBAL_ENABLE &= ((uint8)(~Fake_Timer_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_GLOBAL_STBY_ENABLE &= ((uint8)(~Fake_Timer_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 190              		.loc 1 259 0
 191 0014 BD46     		mov	sp, r7
 192              		@ sp needed
 193 0016 5DF8047B 		ldr	r7, [sp], #4
 194 001a 7047     		bx	lr
 195              	.L13:
 196              		.align	2
 197              	.L12:
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 9


 198 001c 74640040 		.word	1073767540
 199              		.cfi_endproc
 200              	.LFE3:
 201              		.size	Fake_Timer_Stop, .-Fake_Timer_Stop
 202              		.section	.text.Fake_Timer_SetInterruptMode,"ax",%progbits
 203              		.align	2
 204              		.global	Fake_Timer_SetInterruptMode
 205              		.thumb
 206              		.thumb_func
 207              		.type	Fake_Timer_SetInterruptMode, %function
 208              	Fake_Timer_SetInterruptMode:
 209              	.LFB4:
 260:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 261:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 262:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_SetInterruptMode
 264:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 265:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 266:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 267:.\Generated_Source\PSoC5/Fake_Timer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC5/Fake_Timer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC5/Fake_Timer.c **** *  be selected.
 270:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 271:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 272:.\Generated_Source\PSoC5/Fake_Timer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC5/Fake_Timer.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 275:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 276:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 277:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 278:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 210              		.loc 1 280 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 8
 213              		@ frame_needed = 1, uses_anonymous_args = 0
 214              		@ link register save eliminated.
 215 0000 80B4     		push	{r7}
 216              		.cfi_def_cfa_offset 4
 217              		.cfi_offset 7, -4
 218 0002 83B0     		sub	sp, sp, #12
 219              		.cfi_def_cfa_offset 16
 220 0004 00AF     		add	r7, sp, #0
 221              		.cfi_def_cfa_register 7
 222 0006 0346     		mov	r3, r0
 223 0008 FB71     		strb	r3, [r7, #7]
 281:.\Generated_Source\PSoC5/Fake_Timer.c ****     Fake_Timer_STATUS_MASK = interruptMode;
 224              		.loc 1 281 0
 225 000a 044B     		ldr	r3, .L15
 226 000c FA79     		ldrb	r2, [r7, #7]
 227 000e 1A70     		strb	r2, [r3]
 282:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 228              		.loc 1 282 0
 229 0010 0C37     		adds	r7, r7, #12
 230 0012 BD46     		mov	sp, r7
 231              		@ sp needed
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 10


 232 0014 5DF8047B 		ldr	r7, [sp], #4
 233 0018 7047     		bx	lr
 234              	.L16:
 235 001a 00BF     		.align	2
 236              	.L15:
 237 001c 86640040 		.word	1073767558
 238              		.cfi_endproc
 239              	.LFE4:
 240              		.size	Fake_Timer_SetInterruptMode, .-Fake_Timer_SetInterruptMode
 241              		.section	.text.Fake_Timer_SoftwareCapture,"ax",%progbits
 242              		.align	2
 243              		.global	Fake_Timer_SoftwareCapture
 244              		.thumb
 245              		.thumb_func
 246              		.type	Fake_Timer_SoftwareCapture, %function
 247              	Fake_Timer_SoftwareCapture:
 248              	.LFB5:
 283:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 284:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 285:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_SoftwareCapture
 287:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 289:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 290:.\Generated_Source\PSoC5/Fake_Timer.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 292:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 293:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 294:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 295:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 296:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 297:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 298:.\Generated_Source\PSoC5/Fake_Timer.c **** * Side Effects:
 299:.\Generated_Source\PSoC5/Fake_Timer.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 301:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 249              		.loc 1 303 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254 0000 80B4     		push	{r7}
 255              		.cfi_def_cfa_offset 4
 256              		.cfi_offset 7, -4
 257 0002 00AF     		add	r7, sp, #0
 258              		.cfi_def_cfa_register 7
 304:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if(Fake_Timer_UsingFixedFunction)
 306:.\Generated_Source\PSoC5/Fake_Timer.c ****         (void)CY_GET_REG16(Fake_Timer_COUNTER_LSB_PTR);
 307:.\Generated_Source\PSoC5/Fake_Timer.c ****     #else
 308:.\Generated_Source\PSoC5/Fake_Timer.c ****         (void)CY_GET_REG8(Fake_Timer_COUNTER_LSB_PTR_8BIT);
 259              		.loc 1 308 0
 260 0004 024B     		ldr	r3, .L18
 261 0006 1B78     		ldrb	r3, [r3]
 309:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif/* (Fake_Timer_UsingFixedFunction) */
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 11


 310:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* Capture Data is now in the FIFO */
 311:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 262              		.loc 1 311 0
 263 0008 BD46     		mov	sp, r7
 264              		@ sp needed
 265 000a 5DF8047B 		ldr	r7, [sp], #4
 266 000e 7047     		bx	lr
 267              	.L19:
 268              		.align	2
 269              	.L18:
 270 0010 04640040 		.word	1073767428
 271              		.cfi_endproc
 272              	.LFE5:
 273              		.size	Fake_Timer_SoftwareCapture, .-Fake_Timer_SoftwareCapture
 274              		.section	.text.Fake_Timer_ReadStatusRegister,"ax",%progbits
 275              		.align	2
 276              		.global	Fake_Timer_ReadStatusRegister
 277              		.thumb
 278              		.thumb_func
 279              		.type	Fake_Timer_ReadStatusRegister, %function
 280              	Fake_Timer_ReadStatusRegister:
 281              	.LFB6:
 312:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 313:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 314:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_ReadStatusRegister
 316:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 317:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 318:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 319:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC5/Fake_Timer.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC5/Fake_Timer.c **** *  be permuteable.
 322:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 323:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 324:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 325:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 326:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 327:.\Generated_Source\PSoC5/Fake_Timer.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 329:.\Generated_Source\PSoC5/Fake_Timer.c **** * Side Effects:
 330:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 332:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC5/Fake_Timer.c **** uint8   Fake_Timer_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 282              		.loc 1 334 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 1, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287 0000 80B4     		push	{r7}
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 7, -4
 290 0002 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
 335:.\Generated_Source\PSoC5/Fake_Timer.c ****     return (Fake_Timer_STATUS);
 292              		.loc 1 335 0
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 12


 293 0004 034B     		ldr	r3, .L22
 294 0006 1B78     		ldrb	r3, [r3]
 295 0008 DBB2     		uxtb	r3, r3
 336:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 296              		.loc 1 336 0
 297 000a 1846     		mov	r0, r3
 298 000c BD46     		mov	sp, r7
 299              		@ sp needed
 300 000e 5DF8047B 		ldr	r7, [sp], #4
 301 0012 7047     		bx	lr
 302              	.L23:
 303              		.align	2
 304              	.L22:
 305 0014 66640040 		.word	1073767526
 306              		.cfi_endproc
 307              	.LFE6:
 308              		.size	Fake_Timer_ReadStatusRegister, .-Fake_Timer_ReadStatusRegister
 309              		.section	.text.Fake_Timer_ReadControlRegister,"ax",%progbits
 310              		.align	2
 311              		.global	Fake_Timer_ReadControlRegister
 312              		.thumb
 313              		.thumb_func
 314              		.type	Fake_Timer_ReadControlRegister, %function
 315              	Fake_Timer_ReadControlRegister:
 316              	.LFB7:
 337:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 338:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 339:.\Generated_Source\PSoC5/Fake_Timer.c **** #if (!Fake_Timer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 341:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 342:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_ReadControlRegister
 344:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 345:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 346:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 347:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 349:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 350:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 351:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 352:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 353:.\Generated_Source\PSoC5/Fake_Timer.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 355:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC5/Fake_Timer.c **** uint8 Fake_Timer_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 317              		.loc 1 357 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 1, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322 0000 80B4     		push	{r7}
 323              		.cfi_def_cfa_offset 4
 324              		.cfi_offset 7, -4
 325 0002 00AF     		add	r7, sp, #0
 326              		.cfi_def_cfa_register 7
 358:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if (!Fake_Timer_UDB_CONTROL_REG_REMOVED) 
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 13


 359:.\Generated_Source\PSoC5/Fake_Timer.c ****         return ((uint8)Fake_Timer_CONTROL);
 327              		.loc 1 359 0
 328 0004 034B     		ldr	r3, .L26
 329 0006 1B78     		ldrb	r3, [r3]
 330 0008 DBB2     		uxtb	r3, r3
 360:.\Generated_Source\PSoC5/Fake_Timer.c ****     #else
 361:.\Generated_Source\PSoC5/Fake_Timer.c ****         return (0);
 362:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* (!Fake_Timer_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 331              		.loc 1 363 0
 332 000a 1846     		mov	r0, r3
 333 000c BD46     		mov	sp, r7
 334              		@ sp needed
 335 000e 5DF8047B 		ldr	r7, [sp], #4
 336 0012 7047     		bx	lr
 337              	.L27:
 338              		.align	2
 339              	.L26:
 340 0014 74640040 		.word	1073767540
 341              		.cfi_endproc
 342              	.LFE7:
 343              		.size	Fake_Timer_ReadControlRegister, .-Fake_Timer_ReadControlRegister
 344              		.section	.text.Fake_Timer_WriteControlRegister,"ax",%progbits
 345              		.align	2
 346              		.global	Fake_Timer_WriteControlRegister
 347              		.thumb
 348              		.thumb_func
 349              		.type	Fake_Timer_WriteControlRegister, %function
 350              	Fake_Timer_WriteControlRegister:
 351              	.LFB8:
 364:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 365:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 366:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_WriteControlRegister
 368:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 369:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 370:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 371:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 373:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 374:.\Generated_Source\PSoC5/Fake_Timer.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 376:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 377:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 378:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_WriteControlRegister(uint8 control) 
 380:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 352              		.loc 1 380 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 8
 355              		@ frame_needed = 1, uses_anonymous_args = 0
 356              		@ link register save eliminated.
 357 0000 80B4     		push	{r7}
 358              		.cfi_def_cfa_offset 4
 359              		.cfi_offset 7, -4
 360 0002 83B0     		sub	sp, sp, #12
 361              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 14


 362 0004 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
 364 0006 0346     		mov	r3, r0
 365 0008 FB71     		strb	r3, [r7, #7]
 381:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if (!Fake_Timer_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CONTROL = control;
 366              		.loc 1 382 0
 367 000a 044B     		ldr	r3, .L29
 368 000c FA79     		ldrb	r2, [r7, #7]
 369 000e 1A70     		strb	r2, [r3]
 383:.\Generated_Source\PSoC5/Fake_Timer.c ****     #else
 384:.\Generated_Source\PSoC5/Fake_Timer.c ****         control = 0u;
 385:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* (!Fake_Timer_UDB_CONTROL_REG_REMOVED) */
 386:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 370              		.loc 1 386 0
 371 0010 0C37     		adds	r7, r7, #12
 372 0012 BD46     		mov	sp, r7
 373              		@ sp needed
 374 0014 5DF8047B 		ldr	r7, [sp], #4
 375 0018 7047     		bx	lr
 376              	.L30:
 377 001a 00BF     		.align	2
 378              	.L29:
 379 001c 74640040 		.word	1073767540
 380              		.cfi_endproc
 381              	.LFE8:
 382              		.size	Fake_Timer_WriteControlRegister, .-Fake_Timer_WriteControlRegister
 383              		.section	.text.Fake_Timer_ReadPeriod,"ax",%progbits
 384              		.align	2
 385              		.global	Fake_Timer_ReadPeriod
 386              		.thumb
 387              		.thumb_func
 388              		.type	Fake_Timer_ReadPeriod, %function
 389              	Fake_Timer_ReadPeriod:
 390              	.LFB9:
 387:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 388:.\Generated_Source\PSoC5/Fake_Timer.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 390:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 391:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_ReadPeriod
 393:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 394:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 395:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 396:.\Generated_Source\PSoC5/Fake_Timer.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 398:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 399:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 400:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 401:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 402:.\Generated_Source\PSoC5/Fake_Timer.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 404:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC5/Fake_Timer.c **** uint32 Fake_Timer_ReadPeriod(void) 
 406:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 391              		.loc 1 406 0
 392              		.cfi_startproc
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 15


 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396 0000 80B4     		push	{r7}
 397              		.cfi_def_cfa_offset 4
 398              		.cfi_offset 7, -4
 399 0002 00AF     		add	r7, sp, #0
 400              		.cfi_def_cfa_register 7
 407:.\Generated_Source\PSoC5/Fake_Timer.c ****    #if(Fake_Timer_UsingFixedFunction)
 408:.\Generated_Source\PSoC5/Fake_Timer.c ****        return ((uint32)CY_GET_REG16(Fake_Timer_PERIOD_LSB_PTR));
 409:.\Generated_Source\PSoC5/Fake_Timer.c ****    #else
 410:.\Generated_Source\PSoC5/Fake_Timer.c ****        return (CY_GET_REG24(Fake_Timer_PERIOD_LSB_PTR));
 401              		.loc 1 410 0
 402 0004 044B     		ldr	r3, .L33
 403 0006 1B68     		ldr	r3, [r3]
 404 0008 23F07F43 		bic	r3, r3, #-16777216
 411:.\Generated_Source\PSoC5/Fake_Timer.c ****    #endif /* (Fake_Timer_UsingFixedFunction) */
 412:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 405              		.loc 1 412 0
 406 000c 1846     		mov	r0, r3
 407 000e BD46     		mov	sp, r7
 408              		@ sp needed
 409 0010 5DF8047B 		ldr	r7, [sp], #4
 410 0014 7047     		bx	lr
 411              	.L34:
 412 0016 00BF     		.align	2
 413              	.L33:
 414 0018 24640040 		.word	1073767460
 415              		.cfi_endproc
 416              	.LFE9:
 417              		.size	Fake_Timer_ReadPeriod, .-Fake_Timer_ReadPeriod
 418              		.section	.text.Fake_Timer_WritePeriod,"ax",%progbits
 419              		.align	2
 420              		.global	Fake_Timer_WritePeriod
 421              		.thumb
 422              		.thumb_func
 423              		.type	Fake_Timer_WritePeriod, %function
 424              	Fake_Timer_WritePeriod:
 425              	.LFB10:
 413:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 414:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 415:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_WritePeriod
 417:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 419:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 420:.\Generated_Source\PSoC5/Fake_Timer.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC5/Fake_Timer.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 423:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 424:.\Generated_Source\PSoC5/Fake_Timer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC5/Fake_Timer.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 427:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 428:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 429:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 430:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 16


 431:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_WritePeriod(uint32 period) 
 432:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 426              		.loc 1 432 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 8
 429              		@ frame_needed = 1, uses_anonymous_args = 0
 430 0000 80B5     		push	{r7, lr}
 431              		.cfi_def_cfa_offset 8
 432              		.cfi_offset 7, -8
 433              		.cfi_offset 14, -4
 434 0002 82B0     		sub	sp, sp, #8
 435              		.cfi_def_cfa_offset 16
 436 0004 00AF     		add	r7, sp, #0
 437              		.cfi_def_cfa_register 7
 438 0006 7860     		str	r0, [r7, #4]
 433:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if(Fake_Timer_UsingFixedFunction)
 434:.\Generated_Source\PSoC5/Fake_Timer.c ****         uint16 period_temp = (uint16)period;
 435:.\Generated_Source\PSoC5/Fake_Timer.c ****         CY_SET_REG16(Fake_Timer_PERIOD_LSB_PTR, period_temp);
 436:.\Generated_Source\PSoC5/Fake_Timer.c ****     #else
 437:.\Generated_Source\PSoC5/Fake_Timer.c ****         CY_SET_REG24(Fake_Timer_PERIOD_LSB_PTR, period);
 439              		.loc 1 437 0
 440 0008 0348     		ldr	r0, .L36
 441 000a 7968     		ldr	r1, [r7, #4]
 442 000c FFF7FEFF 		bl	CySetReg24
 438:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 443              		.loc 1 439 0
 444 0010 0837     		adds	r7, r7, #8
 445 0012 BD46     		mov	sp, r7
 446              		@ sp needed
 447 0014 80BD     		pop	{r7, pc}
 448              	.L37:
 449 0016 00BF     		.align	2
 450              	.L36:
 451 0018 24640040 		.word	1073767460
 452              		.cfi_endproc
 453              	.LFE10:
 454              		.size	Fake_Timer_WritePeriod, .-Fake_Timer_WritePeriod
 455              		.section	.text.Fake_Timer_ReadCapture,"ax",%progbits
 456              		.align	2
 457              		.global	Fake_Timer_ReadCapture
 458              		.thumb
 459              		.thumb_func
 460              		.type	Fake_Timer_ReadCapture, %function
 461              	Fake_Timer_ReadCapture:
 462              	.LFB11:
 440:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 441:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 442:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 443:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_ReadCapture
 444:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 445:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 446:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 447:.\Generated_Source\PSoC5/Fake_Timer.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 449:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 450:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 17


 451:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 452:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 453:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 455:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC5/Fake_Timer.c **** uint32 Fake_Timer_ReadCapture(void) 
 457:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 463              		.loc 1 457 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 1, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468 0000 80B4     		push	{r7}
 469              		.cfi_def_cfa_offset 4
 470              		.cfi_offset 7, -4
 471 0002 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 458:.\Generated_Source\PSoC5/Fake_Timer.c ****    #if(Fake_Timer_UsingFixedFunction)
 459:.\Generated_Source\PSoC5/Fake_Timer.c ****        return ((uint32)CY_GET_REG16(Fake_Timer_CAPTURE_LSB_PTR));
 460:.\Generated_Source\PSoC5/Fake_Timer.c ****    #else
 461:.\Generated_Source\PSoC5/Fake_Timer.c ****        return (CY_GET_REG24(Fake_Timer_CAPTURE_LSB_PTR));
 473              		.loc 1 461 0
 474 0004 044B     		ldr	r3, .L40
 475 0006 1B68     		ldr	r3, [r3]
 476 0008 23F07F43 		bic	r3, r3, #-16777216
 462:.\Generated_Source\PSoC5/Fake_Timer.c ****    #endif /* (Fake_Timer_UsingFixedFunction) */
 463:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 477              		.loc 1 463 0
 478 000c 1846     		mov	r0, r3
 479 000e BD46     		mov	sp, r7
 480              		@ sp needed
 481 0010 5DF8047B 		ldr	r7, [sp], #4
 482 0014 7047     		bx	lr
 483              	.L41:
 484 0016 00BF     		.align	2
 485              	.L40:
 486 0018 44640040 		.word	1073767492
 487              		.cfi_endproc
 488              	.LFE11:
 489              		.size	Fake_Timer_ReadCapture, .-Fake_Timer_ReadCapture
 490              		.section	.text.Fake_Timer_WriteCounter,"ax",%progbits
 491              		.align	2
 492              		.global	Fake_Timer_WriteCounter
 493              		.thumb
 494              		.thumb_func
 495              		.type	Fake_Timer_WriteCounter, %function
 496              	Fake_Timer_WriteCounter:
 497              	.LFB12:
 464:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 465:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 466:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_WriteCounter
 468:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 470:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 471:.\Generated_Source\PSoC5/Fake_Timer.c **** *  This funtion is used to set the counter to a specific value
 472:.\Generated_Source\PSoC5/Fake_Timer.c **** *
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 18


 473:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 474:.\Generated_Source\PSoC5/Fake_Timer.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 476:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 477:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 478:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 479:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_WriteCounter(uint32 counter) 
 481:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 498              		.loc 1 481 0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 8
 501              		@ frame_needed = 1, uses_anonymous_args = 0
 502 0000 80B5     		push	{r7, lr}
 503              		.cfi_def_cfa_offset 8
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 82B0     		sub	sp, sp, #8
 507              		.cfi_def_cfa_offset 16
 508 0004 00AF     		add	r7, sp, #0
 509              		.cfi_def_cfa_register 7
 510 0006 7860     		str	r0, [r7, #4]
 482:.\Generated_Source\PSoC5/Fake_Timer.c ****    #if(Fake_Timer_UsingFixedFunction)
 483:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:.\Generated_Source\PSoC5/Fake_Timer.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC5/Fake_Timer.c ****          */
 486:.\Generated_Source\PSoC5/Fake_Timer.c ****         CY_SET_REG16(Fake_Timer_COUNTER_LSB_PTR, (uint16)counter);
 487:.\Generated_Source\PSoC5/Fake_Timer.c ****         
 488:.\Generated_Source\PSoC5/Fake_Timer.c ****     #else
 489:.\Generated_Source\PSoC5/Fake_Timer.c ****         CY_SET_REG24(Fake_Timer_COUNTER_LSB_PTR, counter);
 511              		.loc 1 489 0
 512 0008 0348     		ldr	r0, .L43
 513 000a 7968     		ldr	r1, [r7, #4]
 514 000c FFF7FEFF 		bl	CySetReg24
 490:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 515              		.loc 1 491 0
 516 0010 0837     		adds	r7, r7, #8
 517 0012 BD46     		mov	sp, r7
 518              		@ sp needed
 519 0014 80BD     		pop	{r7, pc}
 520              	.L44:
 521 0016 00BF     		.align	2
 522              	.L43:
 523 0018 04640040 		.word	1073767428
 524              		.cfi_endproc
 525              	.LFE12:
 526              		.size	Fake_Timer_WriteCounter, .-Fake_Timer_WriteCounter
 527              		.section	.text.Fake_Timer_ReadCounter,"ax",%progbits
 528              		.align	2
 529              		.global	Fake_Timer_ReadCounter
 530              		.thumb
 531              		.thumb_func
 532              		.type	Fake_Timer_ReadCounter, %function
 533              	Fake_Timer_ReadCounter:
 534              	.LFB13:
 492:.\Generated_Source\PSoC5/Fake_Timer.c **** 
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 19


 493:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 494:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_ReadCounter
 496:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 497:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 498:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 499:.\Generated_Source\PSoC5/Fake_Timer.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 501:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 502:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 503:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 504:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 505:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Present compare value.
 506:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 507:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC5/Fake_Timer.c **** uint32 Fake_Timer_ReadCounter(void) 
 509:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 535              		.loc 1 509 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539              		@ link register save eliminated.
 540 0000 80B4     		push	{r7}
 541              		.cfi_def_cfa_offset 4
 542              		.cfi_offset 7, -4
 543 0002 00AF     		add	r7, sp, #0
 544              		.cfi_def_cfa_register 7
 510:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* Force capture by reading Accumulator */
 511:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if(Fake_Timer_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/Fake_Timer.c ****         (void)CY_GET_REG16(Fake_Timer_COUNTER_LSB_PTR);
 515:.\Generated_Source\PSoC5/Fake_Timer.c ****     #else
 516:.\Generated_Source\PSoC5/Fake_Timer.c ****         (void)CY_GET_REG8(Fake_Timer_COUNTER_LSB_PTR_8BIT);
 545              		.loc 1 516 0
 546 0004 054B     		ldr	r3, .L47
 547 0006 1B78     		ldrb	r3, [r3]
 517:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif/* (Fake_Timer_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 519:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if(Fake_Timer_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/Fake_Timer.c ****         return ((uint32)CY_GET_REG16(Fake_Timer_CAPTURE_LSB_PTR));
 522:.\Generated_Source\PSoC5/Fake_Timer.c ****     #else
 523:.\Generated_Source\PSoC5/Fake_Timer.c ****         return (CY_GET_REG24(Fake_Timer_CAPTURE_LSB_PTR));
 548              		.loc 1 523 0
 549 0008 054B     		ldr	r3, .L47+4
 550 000a 1B68     		ldr	r3, [r3]
 551 000c 23F07F43 		bic	r3, r3, #-16777216
 524:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* (Fake_Timer_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 552              		.loc 1 525 0
 553 0010 1846     		mov	r0, r3
 554 0012 BD46     		mov	sp, r7
 555              		@ sp needed
 556 0014 5DF8047B 		ldr	r7, [sp], #4
 557 0018 7047     		bx	lr
 558              	.L48:
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 20


 559 001a 00BF     		.align	2
 560              	.L47:
 561 001c 04640040 		.word	1073767428
 562 0020 44640040 		.word	1073767492
 563              		.cfi_endproc
 564              	.LFE13:
 565              		.size	Fake_Timer_ReadCounter, .-Fake_Timer_ReadCounter
 566              		.section	.text.Fake_Timer_ClearFIFO,"ax",%progbits
 567              		.align	2
 568              		.global	Fake_Timer_ClearFIFO
 569              		.thumb
 570              		.thumb_func
 571              		.type	Fake_Timer_ClearFIFO, %function
 572              	Fake_Timer_ClearFIFO:
 573              	.LFB14:
 526:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 527:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 528:.\Generated_Source\PSoC5/Fake_Timer.c **** #if(!Fake_Timer_UsingFixedFunction) /* UDB Specific Functions */
 529:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 530:.\Generated_Source\PSoC5/Fake_Timer.c ****     
 531:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 532:.\Generated_Source\PSoC5/Fake_Timer.c ****  * The functions below this point are only available using the UDB
 533:.\Generated_Source\PSoC5/Fake_Timer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:.\Generated_Source\PSoC5/Fake_Timer.c ****  ******************************************************************************/
 535:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 536:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 537:.\Generated_Source\PSoC5/Fake_Timer.c **** #if (Fake_Timer_SoftwareCaptureMode)
 538:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 539:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 540:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_SetCaptureMode
 542:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 543:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 544:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 545:.\Generated_Source\PSoC5/Fake_Timer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 547:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 548:.\Generated_Source\PSoC5/Fake_Timer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:.\Generated_Source\PSoC5/Fake_Timer.c **** *  The parameter values are defined using the
 550:.\Generated_Source\PSoC5/Fake_Timer.c **** *  #define Fake_Timer__B_TIMER__CM_NONE 0
 551:.\Generated_Source\PSoC5/Fake_Timer.c **** #define Fake_Timer__B_TIMER__CM_RISINGEDGE 1
 552:.\Generated_Source\PSoC5/Fake_Timer.c **** #define Fake_Timer__B_TIMER__CM_FALLINGEDGE 2
 553:.\Generated_Source\PSoC5/Fake_Timer.c **** #define Fake_Timer__B_TIMER__CM_EITHEREDGE 3
 554:.\Generated_Source\PSoC5/Fake_Timer.c **** #define Fake_Timer__B_TIMER__CM_SOFTWARE 4
 555:.\Generated_Source\PSoC5/Fake_Timer.c ****  identifiers
 556:.\Generated_Source\PSoC5/Fake_Timer.c **** *  The following are the possible values of the parameter
 557:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Fake_Timer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Fake_Timer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Fake_Timer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Fake_Timer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 562:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 563:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 564:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 565:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 566:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_SetCaptureMode(uint8 captureMode) 
 567:.\Generated_Source\PSoC5/Fake_Timer.c **** {
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 21


 568:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* This must only set to two bits of the control register associated */
 569:.\Generated_Source\PSoC5/Fake_Timer.c ****     captureMode = ((uint8)((uint8)captureMode << Fake_Timer_CTRL_CAP_MODE_SHIFT));
 570:.\Generated_Source\PSoC5/Fake_Timer.c ****     captureMode &= (Fake_Timer_CTRL_CAP_MODE_MASK);
 571:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 572:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if (!Fake_Timer_UDB_CONTROL_REG_REMOVED)
 573:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Clear the Current Setting */
 574:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CONTROL &= ((uint8)(~Fake_Timer_CTRL_CAP_MODE_MASK));
 575:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 576:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Write The New Setting */
 577:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CONTROL |= captureMode;
 578:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* (!Fake_Timer_UDB_CONTROL_REG_REMOVED) */
 579:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 580:.\Generated_Source\PSoC5/Fake_Timer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 582:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 583:.\Generated_Source\PSoC5/Fake_Timer.c **** #if (Fake_Timer_SoftwareTriggerMode)
 584:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 585:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 586:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_SetTriggerMode
 588:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 589:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 590:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 591:.\Generated_Source\PSoC5/Fake_Timer.c **** *  This function sets the trigger input mode
 592:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 593:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 594:.\Generated_Source\PSoC5/Fake_Timer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:.\Generated_Source\PSoC5/Fake_Timer.c ****     #define Fake_Timer__B_TIMER__TM_NONE 0x00u
 596:.\Generated_Source\PSoC5/Fake_Timer.c ****     #define Fake_Timer__B_TIMER__TM_RISINGEDGE 0x04u
 597:.\Generated_Source\PSoC5/Fake_Timer.c ****     #define Fake_Timer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:.\Generated_Source\PSoC5/Fake_Timer.c ****     #define Fake_Timer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:.\Generated_Source\PSoC5/Fake_Timer.c ****     #define Fake_Timer__B_TIMER__TM_SOFTWARE 0x10u
 600:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 601:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 602:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 603:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 604:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 605:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_SetTriggerMode(uint8 triggerMode) 
 606:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 607:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* This must only set to two bits of the control register associated */
 608:.\Generated_Source\PSoC5/Fake_Timer.c ****     triggerMode &= Fake_Timer_CTRL_TRIG_MODE_MASK;
 609:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 610:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if (!Fake_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 611:.\Generated_Source\PSoC5/Fake_Timer.c ****     
 612:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Clear the Current Setting */
 613:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CONTROL &= ((uint8)(~Fake_Timer_CTRL_TRIG_MODE_MASK));
 614:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 615:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Write The New Setting */
 616:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CONTROL |= (triggerMode | Fake_Timer__B_TIMER__TM_SOFTWARE);
 617:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* Remove code section if control register is not used */
 618:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 619:.\Generated_Source\PSoC5/Fake_Timer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 621:.\Generated_Source\PSoC5/Fake_Timer.c **** #if (Fake_Timer_EnableTriggerMode)
 622:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 623:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 624:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 22


 625:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_EnableTrigger
 626:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 627:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 628:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 629:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 631:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 632:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 633:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 634:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 635:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 636:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 637:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_EnableTrigger(void) 
 639:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 640:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if (!Fake_Timer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed
 641:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CONTROL |= Fake_Timer_CTRL_TRIG_EN;
 642:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* Remove code section if control register is not used */
 643:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 644:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 645:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 646:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_DisableTrigger
 648:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 650:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 651:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 653:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 654:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 655:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 656:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 657:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 658:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 659:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_DisableTrigger(void) 
 661:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 662:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if (!Fake_Timer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is remove
 663:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CONTROL &= ((uint8)(~Fake_Timer_CTRL_TRIG_EN));
 664:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* Remove code section if control register is not used */
 665:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 666:.\Generated_Source\PSoC5/Fake_Timer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 668:.\Generated_Source\PSoC5/Fake_Timer.c **** #if(Fake_Timer_InterruptOnCaptureCount)
 669:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 670:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 671:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_SetInterruptCount
 673:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 675:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 676:.\Generated_Source\PSoC5/Fake_Timer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 678:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 679:.\Generated_Source\PSoC5/Fake_Timer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:.\Generated_Source\PSoC5/Fake_Timer.c **** *                   an interrupt will occur each time a capture occurs.
 681:.\Generated_Source\PSoC5/Fake_Timer.c **** *                   A value of 1 to 3 will cause the interrupt
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 23


 682:.\Generated_Source\PSoC5/Fake_Timer.c **** *                   to delay by the same number of captures.
 683:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 684:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 685:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 686:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 687:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_SetInterruptCount(uint8 interruptCount) 
 689:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 690:.\Generated_Source\PSoC5/Fake_Timer.c ****     /* This must only set to two bits of the control register associated */
 691:.\Generated_Source\PSoC5/Fake_Timer.c ****     interruptCount &= Fake_Timer_CTRL_INTCNT_MASK;
 692:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 693:.\Generated_Source\PSoC5/Fake_Timer.c ****     #if (!Fake_Timer_UDB_CONTROL_REG_REMOVED)
 694:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Clear the Current Setting */
 695:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CONTROL &= ((uint8)(~Fake_Timer_CTRL_INTCNT_MASK));
 696:.\Generated_Source\PSoC5/Fake_Timer.c ****         /* Write The New Setting */
 697:.\Generated_Source\PSoC5/Fake_Timer.c ****         Fake_Timer_CONTROL |= interruptCount;
 698:.\Generated_Source\PSoC5/Fake_Timer.c ****     #endif /* (!Fake_Timer_UDB_CONTROL_REG_REMOVED) */
 699:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 700:.\Generated_Source\PSoC5/Fake_Timer.c **** #endif /* Fake_Timer_InterruptOnCaptureCount */
 701:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 702:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 703:.\Generated_Source\PSoC5/Fake_Timer.c **** #if (Fake_Timer_UsingHWCaptureCounter)
 704:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 705:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 706:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 707:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_SetCaptureCount
 708:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 709:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 710:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 711:.\Generated_Source\PSoC5/Fake_Timer.c **** *  This function sets the capture count
 712:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 713:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 714:.\Generated_Source\PSoC5/Fake_Timer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:.\Generated_Source\PSoC5/Fake_Timer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:.\Generated_Source\PSoC5/Fake_Timer.c **** *                captures.
 717:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 718:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 719:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 720:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 721:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_SetCaptureCount(uint8 captureCount) 
 723:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 724:.\Generated_Source\PSoC5/Fake_Timer.c ****     Fake_Timer_CAP_COUNT = captureCount;
 725:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 726:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 727:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 728:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_ReadCaptureCount
 730:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 731:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 732:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 733:.\Generated_Source\PSoC5/Fake_Timer.c **** *  This function reads the capture count setting
 734:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 735:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 736:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 737:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 738:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 24


 739:.\Generated_Source\PSoC5/Fake_Timer.c **** *  Returns the Capture Count Setting
 740:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 741:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC5/Fake_Timer.c **** uint8 Fake_Timer_ReadCaptureCount(void) 
 743:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 744:.\Generated_Source\PSoC5/Fake_Timer.c ****     return ((uint8)Fake_Timer_CAP_COUNT);
 745:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 746:.\Generated_Source\PSoC5/Fake_Timer.c **** #endif /* Fake_Timer_UsingHWCaptureCounter */
 747:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 748:.\Generated_Source\PSoC5/Fake_Timer.c **** 
 749:.\Generated_Source\PSoC5/Fake_Timer.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC5/Fake_Timer.c **** * Function Name: Fake_Timer_ClearFIFO
 751:.\Generated_Source\PSoC5/Fake_Timer.c **** ********************************************************************************
 752:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 753:.\Generated_Source\PSoC5/Fake_Timer.c **** * Summary:
 754:.\Generated_Source\PSoC5/Fake_Timer.c **** *  This function clears all capture data from the capture FIFO
 755:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 756:.\Generated_Source\PSoC5/Fake_Timer.c **** * Parameters:
 757:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 758:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 759:.\Generated_Source\PSoC5/Fake_Timer.c **** * Return:
 760:.\Generated_Source\PSoC5/Fake_Timer.c **** *  void
 761:.\Generated_Source\PSoC5/Fake_Timer.c **** *
 762:.\Generated_Source\PSoC5/Fake_Timer.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC5/Fake_Timer.c **** void Fake_Timer_ClearFIFO(void) 
 764:.\Generated_Source\PSoC5/Fake_Timer.c **** {
 574              		.loc 1 764 0
 575              		.cfi_startproc
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 1, uses_anonymous_args = 0
 578 0000 80B5     		push	{r7, lr}
 579              		.cfi_def_cfa_offset 8
 580              		.cfi_offset 7, -8
 581              		.cfi_offset 14, -4
 582 0002 00AF     		add	r7, sp, #0
 583              		.cfi_def_cfa_register 7
 765:.\Generated_Source\PSoC5/Fake_Timer.c ****     while(0u != (Fake_Timer_ReadStatusRegister() & Fake_Timer_STATUS_FIFONEMP))
 584              		.loc 1 765 0
 585 0004 01E0     		b	.L50
 586              	.L51:
 766:.\Generated_Source\PSoC5/Fake_Timer.c ****     {
 767:.\Generated_Source\PSoC5/Fake_Timer.c ****         (void)Fake_Timer_ReadCapture();
 587              		.loc 1 767 0
 588 0006 FFF7FEFF 		bl	Fake_Timer_ReadCapture
 589              	.L50:
 765:.\Generated_Source\PSoC5/Fake_Timer.c ****     while(0u != (Fake_Timer_ReadStatusRegister() & Fake_Timer_STATUS_FIFONEMP))
 590              		.loc 1 765 0 discriminator 1
 591 000a FFF7FEFF 		bl	Fake_Timer_ReadStatusRegister
 592 000e 0346     		mov	r3, r0
 593 0010 03F00803 		and	r3, r3, #8
 594 0014 002B     		cmp	r3, #0
 595 0016 F6D1     		bne	.L51
 768:.\Generated_Source\PSoC5/Fake_Timer.c ****     }
 769:.\Generated_Source\PSoC5/Fake_Timer.c **** }
 596              		.loc 1 769 0
 597 0018 80BD     		pop	{r7, pc}
 598              		.cfi_endproc
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 25


 599              	.LFE14:
 600              		.size	Fake_Timer_ClearFIFO, .-Fake_Timer_ClearFIFO
 601 001a 00BF     		.text
 602              	.Letext0:
 603              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 604              		.section	.debug_info,"",%progbits
 605              	.Ldebug_info0:
 606 0000 4E020000 		.4byte	0x24e
 607 0004 0400     		.2byte	0x4
 608 0006 00000000 		.4byte	.Ldebug_abbrev0
 609 000a 04       		.byte	0x4
 610 000b 01       		.uleb128 0x1
 611 000c E7010000 		.4byte	.LASF36
 612 0010 01       		.byte	0x1
 613 0011 1B030000 		.4byte	.LASF37
 614 0015 63020000 		.4byte	.LASF38
 615 0019 00000000 		.4byte	.Ldebug_ranges0+0
 616 001d 00000000 		.4byte	0
 617 0021 00000000 		.4byte	.Ldebug_line0
 618 0025 02       		.uleb128 0x2
 619 0026 01       		.byte	0x1
 620 0027 06       		.byte	0x6
 621 0028 0F030000 		.4byte	.LASF0
 622 002c 02       		.uleb128 0x2
 623 002d 01       		.byte	0x1
 624 002e 08       		.byte	0x8
 625 002f E2000000 		.4byte	.LASF1
 626 0033 02       		.uleb128 0x2
 627 0034 02       		.byte	0x2
 628 0035 05       		.byte	0x5
 629 0036 C4020000 		.4byte	.LASF2
 630 003a 02       		.uleb128 0x2
 631 003b 02       		.byte	0x2
 632 003c 07       		.byte	0x7
 633 003d 5D000000 		.4byte	.LASF3
 634 0041 02       		.uleb128 0x2
 635 0042 04       		.byte	0x4
 636 0043 05       		.byte	0x5
 637 0044 E3020000 		.4byte	.LASF4
 638 0048 02       		.uleb128 0x2
 639 0049 04       		.byte	0x4
 640 004a 07       		.byte	0x7
 641 004b 17010000 		.4byte	.LASF5
 642 004f 02       		.uleb128 0x2
 643 0050 08       		.byte	0x8
 644 0051 05       		.byte	0x5
 645 0052 A8020000 		.4byte	.LASF6
 646 0056 02       		.uleb128 0x2
 647 0057 08       		.byte	0x8
 648 0058 07       		.byte	0x7
 649 0059 B0010000 		.4byte	.LASF7
 650 005d 03       		.uleb128 0x3
 651 005e 04       		.byte	0x4
 652 005f 05       		.byte	0x5
 653 0060 696E7400 		.ascii	"int\000"
 654 0064 02       		.uleb128 0x2
 655 0065 04       		.byte	0x4
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 26


 656 0066 07       		.byte	0x7
 657 0067 8B010000 		.4byte	.LASF8
 658 006b 04       		.uleb128 0x4
 659 006c 29010000 		.4byte	.LASF9
 660 0070 02       		.byte	0x2
 661 0071 A1       		.byte	0xa1
 662 0072 2C000000 		.4byte	0x2c
 663 0076 04       		.uleb128 0x4
 664 0077 84010000 		.4byte	.LASF10
 665 007b 02       		.byte	0x2
 666 007c A3       		.byte	0xa3
 667 007d 48000000 		.4byte	0x48
 668 0081 02       		.uleb128 0x2
 669 0082 04       		.byte	0x4
 670 0083 04       		.byte	0x4
 671 0084 C4000000 		.4byte	.LASF11
 672 0088 02       		.uleb128 0x2
 673 0089 08       		.byte	0x8
 674 008a 04       		.byte	0x4
 675 008b 53010000 		.4byte	.LASF12
 676 008f 02       		.uleb128 0x2
 677 0090 01       		.byte	0x1
 678 0091 08       		.byte	0x8
 679 0092 EC020000 		.4byte	.LASF13
 680 0096 05       		.uleb128 0x5
 681 0097 9A020000 		.4byte	.LASF14
 682 009b 02       		.byte	0x2
 683 009c 4B01     		.2byte	0x14b
 684 009e A2000000 		.4byte	0xa2
 685 00a2 06       		.uleb128 0x6
 686 00a3 6B000000 		.4byte	0x6b
 687 00a7 05       		.uleb128 0x5
 688 00a8 00000000 		.4byte	.LASF15
 689 00ac 02       		.byte	0x2
 690 00ad 4D01     		.2byte	0x14d
 691 00af B3000000 		.4byte	0xb3
 692 00b3 06       		.uleb128 0x6
 693 00b4 76000000 		.4byte	0x76
 694 00b8 02       		.uleb128 0x2
 695 00b9 04       		.byte	0x4
 696 00ba 07       		.byte	0x7
 697 00bb 9F020000 		.4byte	.LASF16
 698 00bf 07       		.uleb128 0x7
 699 00c0 D2000000 		.4byte	.LASF20
 700 00c4 01       		.byte	0x1
 701 00c5 2B       		.byte	0x2b
 702 00c6 00000000 		.4byte	.LFB0
 703 00ca 4C000000 		.4byte	.LFE0-.LFB0
 704 00ce 01       		.uleb128 0x1
 705 00cf 9C       		.byte	0x9c
 706 00d0 E3000000 		.4byte	0xe3
 707 00d4 08       		.uleb128 0x8
 708 00d5 8B000000 		.4byte	.LASF39
 709 00d9 01       		.byte	0x1
 710 00da 2F       		.byte	0x2f
 711 00db 6B000000 		.4byte	0x6b
 712 00df 02       		.uleb128 0x2
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 27


 713 00e0 91       		.byte	0x91
 714 00e1 77       		.sleb128 -9
 715 00e2 00       		.byte	0
 716 00e3 09       		.uleb128 0x9
 717 00e4 06000000 		.4byte	.LASF17
 718 00e8 01       		.byte	0x1
 719 00e9 B4       		.byte	0xb4
 720 00ea 00000000 		.4byte	.LFB1
 721 00ee 20000000 		.4byte	.LFE1-.LFB1
 722 00f2 01       		.uleb128 0x1
 723 00f3 9C       		.byte	0x9c
 724 00f4 0A       		.uleb128 0xa
 725 00f5 4C000000 		.4byte	.LASF18
 726 00f9 01       		.byte	0x1
 727 00fa D7       		.byte	0xd7
 728 00fb 00000000 		.4byte	.LFB2
 729 00ff 20000000 		.4byte	.LFE2-.LFB2
 730 0103 01       		.uleb128 0x1
 731 0104 9C       		.byte	0x9c
 732 0105 09       		.uleb128 0x9
 733 0106 F0000000 		.4byte	.LASF19
 734 010a 01       		.byte	0x1
 735 010b F7       		.byte	0xf7
 736 010c 00000000 		.4byte	.LFB3
 737 0110 20000000 		.4byte	.LFE3-.LFB3
 738 0114 01       		.uleb128 0x1
 739 0115 9C       		.byte	0x9c
 740 0116 0B       		.uleb128 0xb
 741 0117 37010000 		.4byte	.LASF21
 742 011b 01       		.byte	0x1
 743 011c 1701     		.2byte	0x117
 744 011e 00000000 		.4byte	.LFB4
 745 0122 20000000 		.4byte	.LFE4-.LFB4
 746 0126 01       		.uleb128 0x1
 747 0127 9C       		.byte	0x9c
 748 0128 3C010000 		.4byte	0x13c
 749 012c 0C       		.uleb128 0xc
 750 012d B6020000 		.4byte	.LASF26
 751 0131 01       		.byte	0x1
 752 0132 1701     		.2byte	0x117
 753 0134 6B000000 		.4byte	0x6b
 754 0138 02       		.uleb128 0x2
 755 0139 91       		.byte	0x91
 756 013a 77       		.sleb128 -9
 757 013b 00       		.byte	0
 758 013c 0D       		.uleb128 0xd
 759 013d 70000000 		.4byte	.LASF22
 760 0141 01       		.byte	0x1
 761 0142 2E01     		.2byte	0x12e
 762 0144 00000000 		.4byte	.LFB5
 763 0148 14000000 		.4byte	.LFE5-.LFB5
 764 014c 01       		.uleb128 0x1
 765 014d 9C       		.byte	0x9c
 766 014e 0E       		.uleb128 0xe
 767 014f F1020000 		.4byte	.LASF23
 768 0153 01       		.byte	0x1
 769 0154 4D01     		.2byte	0x14d
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 28


 770 0156 6B000000 		.4byte	0x6b
 771 015a 00000000 		.4byte	.LFB6
 772 015e 18000000 		.4byte	.LFE6-.LFB6
 773 0162 01       		.uleb128 0x1
 774 0163 9C       		.byte	0x9c
 775 0164 0E       		.uleb128 0xe
 776 0165 A5000000 		.4byte	.LASF24
 777 0169 01       		.byte	0x1
 778 016a 6401     		.2byte	0x164
 779 016c 6B000000 		.4byte	0x6b
 780 0170 00000000 		.4byte	.LFB7
 781 0174 18000000 		.4byte	.LFE7-.LFB7
 782 0178 01       		.uleb128 0x1
 783 0179 9C       		.byte	0x9c
 784 017a 0B       		.uleb128 0xb
 785 017b C7010000 		.4byte	.LASF25
 786 017f 01       		.byte	0x1
 787 0180 7B01     		.2byte	0x17b
 788 0182 00000000 		.4byte	.LFB8
 789 0186 20000000 		.4byte	.LFE8-.LFB8
 790 018a 01       		.uleb128 0x1
 791 018b 9C       		.byte	0x9c
 792 018c A0010000 		.4byte	0x1a0
 793 0190 0C       		.uleb128 0xc
 794 0191 2F010000 		.4byte	.LASF27
 795 0195 01       		.byte	0x1
 796 0196 7B01     		.2byte	0x17b
 797 0198 6B000000 		.4byte	0x6b
 798 019c 02       		.uleb128 0x2
 799 019d 91       		.byte	0x91
 800 019e 77       		.sleb128 -9
 801 019f 00       		.byte	0
 802 01a0 0E       		.uleb128 0xe
 803 01a1 2F000000 		.4byte	.LASF28
 804 01a5 01       		.byte	0x1
 805 01a6 9501     		.2byte	0x195
 806 01a8 76000000 		.4byte	0x76
 807 01ac 00000000 		.4byte	.LFB9
 808 01b0 1C000000 		.4byte	.LFE9-.LFB9
 809 01b4 01       		.uleb128 0x1
 810 01b5 9C       		.byte	0x9c
 811 01b6 0F       		.uleb128 0xf
 812 01b7 5A010000 		.4byte	.LASF29
 813 01bb 01       		.byte	0x1
 814 01bc AF01     		.2byte	0x1af
 815 01be 00000000 		.4byte	.LFB10
 816 01c2 1C000000 		.4byte	.LFE10-.LFB10
 817 01c6 01       		.uleb128 0x1
 818 01c7 9C       		.byte	0x9c
 819 01c8 DC010000 		.4byte	0x1dc
 820 01cc 0C       		.uleb128 0xc
 821 01cd 45000000 		.4byte	.LASF30
 822 01d1 01       		.byte	0x1
 823 01d2 AF01     		.2byte	0x1af
 824 01d4 76000000 		.4byte	0x76
 825 01d8 02       		.uleb128 0x2
 826 01d9 91       		.byte	0x91
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 29


 827 01da 74       		.sleb128 -12
 828 01db 00       		.byte	0
 829 01dc 0E       		.uleb128 0xe
 830 01dd 18000000 		.4byte	.LASF31
 831 01e1 01       		.byte	0x1
 832 01e2 C801     		.2byte	0x1c8
 833 01e4 76000000 		.4byte	0x76
 834 01e8 00000000 		.4byte	.LFB11
 835 01ec 1C000000 		.4byte	.LFE11-.LFB11
 836 01f0 01       		.uleb128 0x1
 837 01f1 9C       		.byte	0x9c
 838 01f2 0F       		.uleb128 0xf
 839 01f3 98010000 		.4byte	.LASF32
 840 01f7 01       		.byte	0x1
 841 01f8 E001     		.2byte	0x1e0
 842 01fa 00000000 		.4byte	.LFB12
 843 01fe 1C000000 		.4byte	.LFE12-.LFB12
 844 0202 01       		.uleb128 0x1
 845 0203 9C       		.byte	0x9c
 846 0204 18020000 		.4byte	0x218
 847 0208 0C       		.uleb128 0xc
 848 0209 CA000000 		.4byte	.LASF33
 849 020d 01       		.byte	0x1
 850 020e E001     		.2byte	0x1e0
 851 0210 76000000 		.4byte	0x76
 852 0214 02       		.uleb128 0x2
 853 0215 91       		.byte	0x91
 854 0216 74       		.sleb128 -12
 855 0217 00       		.byte	0
 856 0218 0E       		.uleb128 0xe
 857 0219 00010000 		.4byte	.LASF34
 858 021d 01       		.byte	0x1
 859 021e FC01     		.2byte	0x1fc
 860 0220 76000000 		.4byte	0x76
 861 0224 00000000 		.4byte	.LFB13
 862 0228 24000000 		.4byte	.LFE13-.LFB13
 863 022c 01       		.uleb128 0x1
 864 022d 9C       		.byte	0x9c
 865 022e 10       		.uleb128 0x10
 866 022f CE020000 		.4byte	.LASF35
 867 0233 01       		.byte	0x1
 868 0234 FB02     		.2byte	0x2fb
 869 0236 00000000 		.4byte	.LFB14
 870 023a 1A000000 		.4byte	.LFE14-.LFB14
 871 023e 01       		.uleb128 0x1
 872 023f 9C       		.byte	0x9c
 873 0240 11       		.uleb128 0x11
 874 0241 71010000 		.4byte	.LASF40
 875 0245 01       		.byte	0x1
 876 0246 1A       		.byte	0x1a
 877 0247 6B000000 		.4byte	0x6b
 878 024b 05       		.uleb128 0x5
 879 024c 03       		.byte	0x3
 880 024d 00000000 		.4byte	Fake_Timer_initVar
 881 0251 00       		.byte	0
 882              		.section	.debug_abbrev,"",%progbits
 883              	.Ldebug_abbrev0:
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 30


 884 0000 01       		.uleb128 0x1
 885 0001 11       		.uleb128 0x11
 886 0002 01       		.byte	0x1
 887 0003 25       		.uleb128 0x25
 888 0004 0E       		.uleb128 0xe
 889 0005 13       		.uleb128 0x13
 890 0006 0B       		.uleb128 0xb
 891 0007 03       		.uleb128 0x3
 892 0008 0E       		.uleb128 0xe
 893 0009 1B       		.uleb128 0x1b
 894 000a 0E       		.uleb128 0xe
 895 000b 55       		.uleb128 0x55
 896 000c 17       		.uleb128 0x17
 897 000d 11       		.uleb128 0x11
 898 000e 01       		.uleb128 0x1
 899 000f 10       		.uleb128 0x10
 900 0010 17       		.uleb128 0x17
 901 0011 00       		.byte	0
 902 0012 00       		.byte	0
 903 0013 02       		.uleb128 0x2
 904 0014 24       		.uleb128 0x24
 905 0015 00       		.byte	0
 906 0016 0B       		.uleb128 0xb
 907 0017 0B       		.uleb128 0xb
 908 0018 3E       		.uleb128 0x3e
 909 0019 0B       		.uleb128 0xb
 910 001a 03       		.uleb128 0x3
 911 001b 0E       		.uleb128 0xe
 912 001c 00       		.byte	0
 913 001d 00       		.byte	0
 914 001e 03       		.uleb128 0x3
 915 001f 24       		.uleb128 0x24
 916 0020 00       		.byte	0
 917 0021 0B       		.uleb128 0xb
 918 0022 0B       		.uleb128 0xb
 919 0023 3E       		.uleb128 0x3e
 920 0024 0B       		.uleb128 0xb
 921 0025 03       		.uleb128 0x3
 922 0026 08       		.uleb128 0x8
 923 0027 00       		.byte	0
 924 0028 00       		.byte	0
 925 0029 04       		.uleb128 0x4
 926 002a 16       		.uleb128 0x16
 927 002b 00       		.byte	0
 928 002c 03       		.uleb128 0x3
 929 002d 0E       		.uleb128 0xe
 930 002e 3A       		.uleb128 0x3a
 931 002f 0B       		.uleb128 0xb
 932 0030 3B       		.uleb128 0x3b
 933 0031 0B       		.uleb128 0xb
 934 0032 49       		.uleb128 0x49
 935 0033 13       		.uleb128 0x13
 936 0034 00       		.byte	0
 937 0035 00       		.byte	0
 938 0036 05       		.uleb128 0x5
 939 0037 16       		.uleb128 0x16
 940 0038 00       		.byte	0
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 31


 941 0039 03       		.uleb128 0x3
 942 003a 0E       		.uleb128 0xe
 943 003b 3A       		.uleb128 0x3a
 944 003c 0B       		.uleb128 0xb
 945 003d 3B       		.uleb128 0x3b
 946 003e 05       		.uleb128 0x5
 947 003f 49       		.uleb128 0x49
 948 0040 13       		.uleb128 0x13
 949 0041 00       		.byte	0
 950 0042 00       		.byte	0
 951 0043 06       		.uleb128 0x6
 952 0044 35       		.uleb128 0x35
 953 0045 00       		.byte	0
 954 0046 49       		.uleb128 0x49
 955 0047 13       		.uleb128 0x13
 956 0048 00       		.byte	0
 957 0049 00       		.byte	0
 958 004a 07       		.uleb128 0x7
 959 004b 2E       		.uleb128 0x2e
 960 004c 01       		.byte	0x1
 961 004d 3F       		.uleb128 0x3f
 962 004e 19       		.uleb128 0x19
 963 004f 03       		.uleb128 0x3
 964 0050 0E       		.uleb128 0xe
 965 0051 3A       		.uleb128 0x3a
 966 0052 0B       		.uleb128 0xb
 967 0053 3B       		.uleb128 0x3b
 968 0054 0B       		.uleb128 0xb
 969 0055 27       		.uleb128 0x27
 970 0056 19       		.uleb128 0x19
 971 0057 11       		.uleb128 0x11
 972 0058 01       		.uleb128 0x1
 973 0059 12       		.uleb128 0x12
 974 005a 06       		.uleb128 0x6
 975 005b 40       		.uleb128 0x40
 976 005c 18       		.uleb128 0x18
 977 005d 9642     		.uleb128 0x2116
 978 005f 19       		.uleb128 0x19
 979 0060 01       		.uleb128 0x1
 980 0061 13       		.uleb128 0x13
 981 0062 00       		.byte	0
 982 0063 00       		.byte	0
 983 0064 08       		.uleb128 0x8
 984 0065 34       		.uleb128 0x34
 985 0066 00       		.byte	0
 986 0067 03       		.uleb128 0x3
 987 0068 0E       		.uleb128 0xe
 988 0069 3A       		.uleb128 0x3a
 989 006a 0B       		.uleb128 0xb
 990 006b 3B       		.uleb128 0x3b
 991 006c 0B       		.uleb128 0xb
 992 006d 49       		.uleb128 0x49
 993 006e 13       		.uleb128 0x13
 994 006f 02       		.uleb128 0x2
 995 0070 18       		.uleb128 0x18
 996 0071 00       		.byte	0
 997 0072 00       		.byte	0
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 32


 998 0073 09       		.uleb128 0x9
 999 0074 2E       		.uleb128 0x2e
 1000 0075 00       		.byte	0
 1001 0076 3F       		.uleb128 0x3f
 1002 0077 19       		.uleb128 0x19
 1003 0078 03       		.uleb128 0x3
 1004 0079 0E       		.uleb128 0xe
 1005 007a 3A       		.uleb128 0x3a
 1006 007b 0B       		.uleb128 0xb
 1007 007c 3B       		.uleb128 0x3b
 1008 007d 0B       		.uleb128 0xb
 1009 007e 27       		.uleb128 0x27
 1010 007f 19       		.uleb128 0x19
 1011 0080 11       		.uleb128 0x11
 1012 0081 01       		.uleb128 0x1
 1013 0082 12       		.uleb128 0x12
 1014 0083 06       		.uleb128 0x6
 1015 0084 40       		.uleb128 0x40
 1016 0085 18       		.uleb128 0x18
 1017 0086 9742     		.uleb128 0x2117
 1018 0088 19       		.uleb128 0x19
 1019 0089 00       		.byte	0
 1020 008a 00       		.byte	0
 1021 008b 0A       		.uleb128 0xa
 1022 008c 2E       		.uleb128 0x2e
 1023 008d 00       		.byte	0
 1024 008e 3F       		.uleb128 0x3f
 1025 008f 19       		.uleb128 0x19
 1026 0090 03       		.uleb128 0x3
 1027 0091 0E       		.uleb128 0xe
 1028 0092 3A       		.uleb128 0x3a
 1029 0093 0B       		.uleb128 0xb
 1030 0094 3B       		.uleb128 0x3b
 1031 0095 0B       		.uleb128 0xb
 1032 0096 27       		.uleb128 0x27
 1033 0097 19       		.uleb128 0x19
 1034 0098 11       		.uleb128 0x11
 1035 0099 01       		.uleb128 0x1
 1036 009a 12       		.uleb128 0x12
 1037 009b 06       		.uleb128 0x6
 1038 009c 40       		.uleb128 0x40
 1039 009d 18       		.uleb128 0x18
 1040 009e 9642     		.uleb128 0x2116
 1041 00a0 19       		.uleb128 0x19
 1042 00a1 00       		.byte	0
 1043 00a2 00       		.byte	0
 1044 00a3 0B       		.uleb128 0xb
 1045 00a4 2E       		.uleb128 0x2e
 1046 00a5 01       		.byte	0x1
 1047 00a6 3F       		.uleb128 0x3f
 1048 00a7 19       		.uleb128 0x19
 1049 00a8 03       		.uleb128 0x3
 1050 00a9 0E       		.uleb128 0xe
 1051 00aa 3A       		.uleb128 0x3a
 1052 00ab 0B       		.uleb128 0xb
 1053 00ac 3B       		.uleb128 0x3b
 1054 00ad 05       		.uleb128 0x5
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 33


 1055 00ae 27       		.uleb128 0x27
 1056 00af 19       		.uleb128 0x19
 1057 00b0 11       		.uleb128 0x11
 1058 00b1 01       		.uleb128 0x1
 1059 00b2 12       		.uleb128 0x12
 1060 00b3 06       		.uleb128 0x6
 1061 00b4 40       		.uleb128 0x40
 1062 00b5 18       		.uleb128 0x18
 1063 00b6 9742     		.uleb128 0x2117
 1064 00b8 19       		.uleb128 0x19
 1065 00b9 01       		.uleb128 0x1
 1066 00ba 13       		.uleb128 0x13
 1067 00bb 00       		.byte	0
 1068 00bc 00       		.byte	0
 1069 00bd 0C       		.uleb128 0xc
 1070 00be 05       		.uleb128 0x5
 1071 00bf 00       		.byte	0
 1072 00c0 03       		.uleb128 0x3
 1073 00c1 0E       		.uleb128 0xe
 1074 00c2 3A       		.uleb128 0x3a
 1075 00c3 0B       		.uleb128 0xb
 1076 00c4 3B       		.uleb128 0x3b
 1077 00c5 05       		.uleb128 0x5
 1078 00c6 49       		.uleb128 0x49
 1079 00c7 13       		.uleb128 0x13
 1080 00c8 02       		.uleb128 0x2
 1081 00c9 18       		.uleb128 0x18
 1082 00ca 00       		.byte	0
 1083 00cb 00       		.byte	0
 1084 00cc 0D       		.uleb128 0xd
 1085 00cd 2E       		.uleb128 0x2e
 1086 00ce 00       		.byte	0
 1087 00cf 3F       		.uleb128 0x3f
 1088 00d0 19       		.uleb128 0x19
 1089 00d1 03       		.uleb128 0x3
 1090 00d2 0E       		.uleb128 0xe
 1091 00d3 3A       		.uleb128 0x3a
 1092 00d4 0B       		.uleb128 0xb
 1093 00d5 3B       		.uleb128 0x3b
 1094 00d6 05       		.uleb128 0x5
 1095 00d7 27       		.uleb128 0x27
 1096 00d8 19       		.uleb128 0x19
 1097 00d9 11       		.uleb128 0x11
 1098 00da 01       		.uleb128 0x1
 1099 00db 12       		.uleb128 0x12
 1100 00dc 06       		.uleb128 0x6
 1101 00dd 40       		.uleb128 0x40
 1102 00de 18       		.uleb128 0x18
 1103 00df 9742     		.uleb128 0x2117
 1104 00e1 19       		.uleb128 0x19
 1105 00e2 00       		.byte	0
 1106 00e3 00       		.byte	0
 1107 00e4 0E       		.uleb128 0xe
 1108 00e5 2E       		.uleb128 0x2e
 1109 00e6 00       		.byte	0
 1110 00e7 3F       		.uleb128 0x3f
 1111 00e8 19       		.uleb128 0x19
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 34


 1112 00e9 03       		.uleb128 0x3
 1113 00ea 0E       		.uleb128 0xe
 1114 00eb 3A       		.uleb128 0x3a
 1115 00ec 0B       		.uleb128 0xb
 1116 00ed 3B       		.uleb128 0x3b
 1117 00ee 05       		.uleb128 0x5
 1118 00ef 27       		.uleb128 0x27
 1119 00f0 19       		.uleb128 0x19
 1120 00f1 49       		.uleb128 0x49
 1121 00f2 13       		.uleb128 0x13
 1122 00f3 11       		.uleb128 0x11
 1123 00f4 01       		.uleb128 0x1
 1124 00f5 12       		.uleb128 0x12
 1125 00f6 06       		.uleb128 0x6
 1126 00f7 40       		.uleb128 0x40
 1127 00f8 18       		.uleb128 0x18
 1128 00f9 9742     		.uleb128 0x2117
 1129 00fb 19       		.uleb128 0x19
 1130 00fc 00       		.byte	0
 1131 00fd 00       		.byte	0
 1132 00fe 0F       		.uleb128 0xf
 1133 00ff 2E       		.uleb128 0x2e
 1134 0100 01       		.byte	0x1
 1135 0101 3F       		.uleb128 0x3f
 1136 0102 19       		.uleb128 0x19
 1137 0103 03       		.uleb128 0x3
 1138 0104 0E       		.uleb128 0xe
 1139 0105 3A       		.uleb128 0x3a
 1140 0106 0B       		.uleb128 0xb
 1141 0107 3B       		.uleb128 0x3b
 1142 0108 05       		.uleb128 0x5
 1143 0109 27       		.uleb128 0x27
 1144 010a 19       		.uleb128 0x19
 1145 010b 11       		.uleb128 0x11
 1146 010c 01       		.uleb128 0x1
 1147 010d 12       		.uleb128 0x12
 1148 010e 06       		.uleb128 0x6
 1149 010f 40       		.uleb128 0x40
 1150 0110 18       		.uleb128 0x18
 1151 0111 9642     		.uleb128 0x2116
 1152 0113 19       		.uleb128 0x19
 1153 0114 01       		.uleb128 0x1
 1154 0115 13       		.uleb128 0x13
 1155 0116 00       		.byte	0
 1156 0117 00       		.byte	0
 1157 0118 10       		.uleb128 0x10
 1158 0119 2E       		.uleb128 0x2e
 1159 011a 00       		.byte	0
 1160 011b 3F       		.uleb128 0x3f
 1161 011c 19       		.uleb128 0x19
 1162 011d 03       		.uleb128 0x3
 1163 011e 0E       		.uleb128 0xe
 1164 011f 3A       		.uleb128 0x3a
 1165 0120 0B       		.uleb128 0xb
 1166 0121 3B       		.uleb128 0x3b
 1167 0122 05       		.uleb128 0x5
 1168 0123 27       		.uleb128 0x27
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 35


 1169 0124 19       		.uleb128 0x19
 1170 0125 11       		.uleb128 0x11
 1171 0126 01       		.uleb128 0x1
 1172 0127 12       		.uleb128 0x12
 1173 0128 06       		.uleb128 0x6
 1174 0129 40       		.uleb128 0x40
 1175 012a 18       		.uleb128 0x18
 1176 012b 9642     		.uleb128 0x2116
 1177 012d 19       		.uleb128 0x19
 1178 012e 00       		.byte	0
 1179 012f 00       		.byte	0
 1180 0130 11       		.uleb128 0x11
 1181 0131 34       		.uleb128 0x34
 1182 0132 00       		.byte	0
 1183 0133 03       		.uleb128 0x3
 1184 0134 0E       		.uleb128 0xe
 1185 0135 3A       		.uleb128 0x3a
 1186 0136 0B       		.uleb128 0xb
 1187 0137 3B       		.uleb128 0x3b
 1188 0138 0B       		.uleb128 0xb
 1189 0139 49       		.uleb128 0x49
 1190 013a 13       		.uleb128 0x13
 1191 013b 3F       		.uleb128 0x3f
 1192 013c 19       		.uleb128 0x19
 1193 013d 02       		.uleb128 0x2
 1194 013e 18       		.uleb128 0x18
 1195 013f 00       		.byte	0
 1196 0140 00       		.byte	0
 1197 0141 00       		.byte	0
 1198              		.section	.debug_aranges,"",%progbits
 1199 0000 8C000000 		.4byte	0x8c
 1200 0004 0200     		.2byte	0x2
 1201 0006 00000000 		.4byte	.Ldebug_info0
 1202 000a 04       		.byte	0x4
 1203 000b 00       		.byte	0
 1204 000c 0000     		.2byte	0
 1205 000e 0000     		.2byte	0
 1206 0010 00000000 		.4byte	.LFB0
 1207 0014 4C000000 		.4byte	.LFE0-.LFB0
 1208 0018 00000000 		.4byte	.LFB1
 1209 001c 20000000 		.4byte	.LFE1-.LFB1
 1210 0020 00000000 		.4byte	.LFB2
 1211 0024 20000000 		.4byte	.LFE2-.LFB2
 1212 0028 00000000 		.4byte	.LFB3
 1213 002c 20000000 		.4byte	.LFE3-.LFB3
 1214 0030 00000000 		.4byte	.LFB4
 1215 0034 20000000 		.4byte	.LFE4-.LFB4
 1216 0038 00000000 		.4byte	.LFB5
 1217 003c 14000000 		.4byte	.LFE5-.LFB5
 1218 0040 00000000 		.4byte	.LFB6
 1219 0044 18000000 		.4byte	.LFE6-.LFB6
 1220 0048 00000000 		.4byte	.LFB7
 1221 004c 18000000 		.4byte	.LFE7-.LFB7
 1222 0050 00000000 		.4byte	.LFB8
 1223 0054 20000000 		.4byte	.LFE8-.LFB8
 1224 0058 00000000 		.4byte	.LFB9
 1225 005c 1C000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 36


 1226 0060 00000000 		.4byte	.LFB10
 1227 0064 1C000000 		.4byte	.LFE10-.LFB10
 1228 0068 00000000 		.4byte	.LFB11
 1229 006c 1C000000 		.4byte	.LFE11-.LFB11
 1230 0070 00000000 		.4byte	.LFB12
 1231 0074 1C000000 		.4byte	.LFE12-.LFB12
 1232 0078 00000000 		.4byte	.LFB13
 1233 007c 24000000 		.4byte	.LFE13-.LFB13
 1234 0080 00000000 		.4byte	.LFB14
 1235 0084 1A000000 		.4byte	.LFE14-.LFB14
 1236 0088 00000000 		.4byte	0
 1237 008c 00000000 		.4byte	0
 1238              		.section	.debug_ranges,"",%progbits
 1239              	.Ldebug_ranges0:
 1240 0000 00000000 		.4byte	.LFB0
 1241 0004 4C000000 		.4byte	.LFE0
 1242 0008 00000000 		.4byte	.LFB1
 1243 000c 20000000 		.4byte	.LFE1
 1244 0010 00000000 		.4byte	.LFB2
 1245 0014 20000000 		.4byte	.LFE2
 1246 0018 00000000 		.4byte	.LFB3
 1247 001c 20000000 		.4byte	.LFE3
 1248 0020 00000000 		.4byte	.LFB4
 1249 0024 20000000 		.4byte	.LFE4
 1250 0028 00000000 		.4byte	.LFB5
 1251 002c 14000000 		.4byte	.LFE5
 1252 0030 00000000 		.4byte	.LFB6
 1253 0034 18000000 		.4byte	.LFE6
 1254 0038 00000000 		.4byte	.LFB7
 1255 003c 18000000 		.4byte	.LFE7
 1256 0040 00000000 		.4byte	.LFB8
 1257 0044 20000000 		.4byte	.LFE8
 1258 0048 00000000 		.4byte	.LFB9
 1259 004c 1C000000 		.4byte	.LFE9
 1260 0050 00000000 		.4byte	.LFB10
 1261 0054 1C000000 		.4byte	.LFE10
 1262 0058 00000000 		.4byte	.LFB11
 1263 005c 1C000000 		.4byte	.LFE11
 1264 0060 00000000 		.4byte	.LFB12
 1265 0064 1C000000 		.4byte	.LFE12
 1266 0068 00000000 		.4byte	.LFB13
 1267 006c 24000000 		.4byte	.LFE13
 1268 0070 00000000 		.4byte	.LFB14
 1269 0074 1A000000 		.4byte	.LFE14
 1270 0078 00000000 		.4byte	0
 1271 007c 00000000 		.4byte	0
 1272              		.section	.debug_line,"",%progbits
 1273              	.Ldebug_line0:
 1274 0000 75010000 		.section	.debug_str,"MS",%progbits,1
 1274      02004900 
 1274      00000201 
 1274      FB0E0D00 
 1274      01010101 
 1275              	.LASF15:
 1276 0000 72656733 		.ascii	"reg32\000"
 1276      3200
 1277              	.LASF17:
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 37


 1278 0006 46616B65 		.ascii	"Fake_Timer_Enable\000"
 1278      5F54696D 
 1278      65725F45 
 1278      6E61626C 
 1278      6500
 1279              	.LASF31:
 1280 0018 46616B65 		.ascii	"Fake_Timer_ReadCapture\000"
 1280      5F54696D 
 1280      65725F52 
 1280      65616443 
 1280      61707475 
 1281              	.LASF28:
 1282 002f 46616B65 		.ascii	"Fake_Timer_ReadPeriod\000"
 1282      5F54696D 
 1282      65725F52 
 1282      65616450 
 1282      6572696F 
 1283              	.LASF30:
 1284 0045 70657269 		.ascii	"period\000"
 1284      6F6400
 1285              	.LASF18:
 1286 004c 46616B65 		.ascii	"Fake_Timer_Start\000"
 1286      5F54696D 
 1286      65725F53 
 1286      74617274 
 1286      00
 1287              	.LASF3:
 1288 005d 73686F72 		.ascii	"short unsigned int\000"
 1288      7420756E 
 1288      7369676E 
 1288      65642069 
 1288      6E7400
 1289              	.LASF22:
 1290 0070 46616B65 		.ascii	"Fake_Timer_SoftwareCapture\000"
 1290      5F54696D 
 1290      65725F53 
 1290      6F667477 
 1290      61726543 
 1291              	.LASF39:
 1292 008b 46616B65 		.ascii	"Fake_Timer_interruptState\000"
 1292      5F54696D 
 1292      65725F69 
 1292      6E746572 
 1292      72757074 
 1293              	.LASF24:
 1294 00a5 46616B65 		.ascii	"Fake_Timer_ReadControlRegister\000"
 1294      5F54696D 
 1294      65725F52 
 1294      65616443 
 1294      6F6E7472 
 1295              	.LASF11:
 1296 00c4 666C6F61 		.ascii	"float\000"
 1296      7400
 1297              	.LASF33:
 1298 00ca 636F756E 		.ascii	"counter\000"
 1298      74657200 
 1299              	.LASF20:
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 38


 1300 00d2 46616B65 		.ascii	"Fake_Timer_Init\000"
 1300      5F54696D 
 1300      65725F49 
 1300      6E697400 
 1301              	.LASF1:
 1302 00e2 756E7369 		.ascii	"unsigned char\000"
 1302      676E6564 
 1302      20636861 
 1302      7200
 1303              	.LASF19:
 1304 00f0 46616B65 		.ascii	"Fake_Timer_Stop\000"
 1304      5F54696D 
 1304      65725F53 
 1304      746F7000 
 1305              	.LASF34:
 1306 0100 46616B65 		.ascii	"Fake_Timer_ReadCounter\000"
 1306      5F54696D 
 1306      65725F52 
 1306      65616443 
 1306      6F756E74 
 1307              	.LASF5:
 1308 0117 6C6F6E67 		.ascii	"long unsigned int\000"
 1308      20756E73 
 1308      69676E65 
 1308      6420696E 
 1308      7400
 1309              	.LASF9:
 1310 0129 75696E74 		.ascii	"uint8\000"
 1310      3800
 1311              	.LASF27:
 1312 012f 636F6E74 		.ascii	"control\000"
 1312      726F6C00 
 1313              	.LASF21:
 1314 0137 46616B65 		.ascii	"Fake_Timer_SetInterruptMode\000"
 1314      5F54696D 
 1314      65725F53 
 1314      6574496E 
 1314      74657272 
 1315              	.LASF12:
 1316 0153 646F7562 		.ascii	"double\000"
 1316      6C6500
 1317              	.LASF29:
 1318 015a 46616B65 		.ascii	"Fake_Timer_WritePeriod\000"
 1318      5F54696D 
 1318      65725F57 
 1318      72697465 
 1318      50657269 
 1319              	.LASF40:
 1320 0171 46616B65 		.ascii	"Fake_Timer_initVar\000"
 1320      5F54696D 
 1320      65725F69 
 1320      6E697456 
 1320      617200
 1321              	.LASF10:
 1322 0184 75696E74 		.ascii	"uint32\000"
 1322      333200
 1323              	.LASF8:
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 39


 1324 018b 756E7369 		.ascii	"unsigned int\000"
 1324      676E6564 
 1324      20696E74 
 1324      00
 1325              	.LASF32:
 1326 0198 46616B65 		.ascii	"Fake_Timer_WriteCounter\000"
 1326      5F54696D 
 1326      65725F57 
 1326      72697465 
 1326      436F756E 
 1327              	.LASF7:
 1328 01b0 6C6F6E67 		.ascii	"long long unsigned int\000"
 1328      206C6F6E 
 1328      6720756E 
 1328      7369676E 
 1328      65642069 
 1329              	.LASF25:
 1330 01c7 46616B65 		.ascii	"Fake_Timer_WriteControlRegister\000"
 1330      5F54696D 
 1330      65725F57 
 1330      72697465 
 1330      436F6E74 
 1331              	.LASF36:
 1332 01e7 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1332      4320342E 
 1332      382E3420 
 1332      32303134 
 1332      30353236 
 1333 021a 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1333      20726576 
 1333      6973696F 
 1333      6E203231 
 1333      31333538 
 1334 024d 30202D66 		.ascii	"0 -ffunction-sections\000"
 1334      66756E63 
 1334      74696F6E 
 1334      2D736563 
 1334      74696F6E 
 1335              	.LASF38:
 1336 0263 443A5C77 		.ascii	"D:\\workspace\\super-eagle\\Super-Eagle\\Super-Eagl"
 1336      6F726B73 
 1336      70616365 
 1336      5C737570 
 1336      65722D65 
 1337 0292 652E6379 		.ascii	"e.cydsn\000"
 1337      64736E00 
 1338              	.LASF14:
 1339 029a 72656738 		.ascii	"reg8\000"
 1339      00
 1340              	.LASF16:
 1341 029f 73697A65 		.ascii	"sizetype\000"
 1341      74797065 
 1341      00
 1342              	.LASF6:
 1343 02a8 6C6F6E67 		.ascii	"long long int\000"
 1343      206C6F6E 
 1343      6720696E 
ARM GAS  C:\Users\KHJTON~1\AppData\Local\Temp\cclUqVcO.s 			page 40


 1343      7400
 1344              	.LASF26:
 1345 02b6 696E7465 		.ascii	"interruptMode\000"
 1345      72727570 
 1345      744D6F64 
 1345      6500
 1346              	.LASF2:
 1347 02c4 73686F72 		.ascii	"short int\000"
 1347      7420696E 
 1347      7400
 1348              	.LASF35:
 1349 02ce 46616B65 		.ascii	"Fake_Timer_ClearFIFO\000"
 1349      5F54696D 
 1349      65725F43 
 1349      6C656172 
 1349      4649464F 
 1350              	.LASF4:
 1351 02e3 6C6F6E67 		.ascii	"long int\000"
 1351      20696E74 
 1351      00
 1352              	.LASF13:
 1353 02ec 63686172 		.ascii	"char\000"
 1353      00
 1354              	.LASF23:
 1355 02f1 46616B65 		.ascii	"Fake_Timer_ReadStatusRegister\000"
 1355      5F54696D 
 1355      65725F52 
 1355      65616453 
 1355      74617475 
 1356              	.LASF0:
 1357 030f 7369676E 		.ascii	"signed char\000"
 1357      65642063 
 1357      68617200 
 1358              	.LASF37:
 1359 031b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Fake_Timer.c\000"
 1359      6E657261 
 1359      7465645F 
 1359      536F7572 
 1359      63655C50 
 1360              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
